{"version":3,"file":"static/webpack/static/development/pages/_app.js.db41e93d68dff97e1114.hot-update.js","sources":["webpack:///./components/note-subtitle.tsx","webpack:///./pages/_app.tsx"],"sourcesContent":["import React from 'react';\n\nimport { Typography, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    fontSize: 12,\n    color: '#aaa',\n  },\n  description: {},\n  separator: {},\n});\n\nexport default function NoteSubtitle(props: any) {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"body2\" className={classes.description}>\n        {props.date}\n      </Typography>\n      <span className={classes.separator}>â€¢</span>\n      <Typography variant=\"body2\" className={classes.description}>\n        {props.readTime}\n      </Typography>\n    </div>\n  );\n}\n","import { MDXProvider } from '@mdx-js/react';\nimport theme from '@utils/theme';\nimport Head from 'next/head';\nimport App from 'next/app';\nimport React from 'react';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport { Button, Typography, Link } from '@material-ui/core';\nimport Blockquote from '@components/blockquote';\nimport MDXH1 from '@components/mdx-h1';\nimport MDXH2 from '@components/mdx-h2';\nimport MDXH3 from '@components/mdx-h3';\nimport CodeBlock from '@components/code-block';\nimport InlineCode from '@components/inline-code';\nimport CodeDiff from '@components/code-diff';\nimport Image from '@components/progressive-image';\nimport ThematicBreak from '@components/thematic-break';\nimport PolkaContainer from '@components/polka-container';\nimport NoteSubtitle from '@components/note-subtitle';\n\nconst mdComponents = {\n  a: (props: any) => <Link target=\"_blank\" {...props} />,\n  h1: (props: any) => <MDXH1 {...props} />,\n  h2: (props: any) => <MDXH2 {...props} />,\n  h3: (props: any) => <MDXH3 {...props} />,\n  p: (props: any) => <Typography variant=\"body1\" {...props} />,\n  blockquote: (props: any) => <Blockquote {...props} />,\n  code: CodeBlock,\n  inlineCode: InlineCode,\n  thematicBreak: ThematicBreak,\n  hr: ThematicBreak,\n  Link,\n  Button,\n  Blockquote,\n  Diff: CodeDiff,\n  CodeBlock, // Using codeblock as is gives us more control\n  InlineCode,\n  Image,\n  PolkaContainer,\n  NoteSubtitle\n};\n\nexport default class MyApp extends App {\n  componentDidMount() {\n    // Remove the server-side injected CSS.\n    const jssStyles = document.querySelector('#jss-server-side');\n    if (jssStyles && jssStyles.parentElement) {\n      jssStyles.parentElement.removeChild(jssStyles);\n    }\n  }\n\n  public render() {\n    const { Component, pageProps } = this.props;\n    return (\n      <React.Fragment>\n        <Head>\n          <link\n            href=\"https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,300;0,400;0,500;0,700;1,300;1,400;1,500;1,700&display=swap\"\n            rel=\"stylesheet\"\n          />\n          <link href=\"/css/main.css\" rel=\"stylesheet\" />\n        </Head>\n        <ThemeProvider theme={theme}>\n          {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n          <CssBaseline />\n          <MDXProvider components={mdComponents}>\n            <Component {...pageProps} />\n          </MDXProvider>\n        </ThemeProvider>\n      </React.Fragment>\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AANA;AASA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAnBA;AAsBA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AA9BA;;;;A","sourceRoot":""}