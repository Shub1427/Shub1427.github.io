{"version":3,"file":"static/webpack/static/development/pages/index.js.5c92abbf3e253a0e93e8.hot-update.js","sources":["webpack:///./ui/anchor.tsx"],"sourcesContent":["import { MyTheme } from '@utils/interface';\nimport Link from 'next/link';\nimport React from 'react';\nimport styled, { ThemeProps } from 'styled-components';\n\nexport interface IAnchorProps extends MyTheme {\n  className?: string;\n  highlight?: string;\n  href: string;\n  withNextRoute?: boolean;\n}\n\n// Will use `useMemo` later on...\nconst CAnchor: React.FC<IAnchorProps> = props => (\n  <div className={props.className}>\n    {!!props.withNextRoute ? (\n      <Link href={props.href}>\n        <a>{props.children}</a>\n      </Link>\n    ) : (\n      <a href={props.href}>{props.children}</a>\n    )}\n    {props.highlight && <div className='highlighter' />}\n  </div>\n);\n\nexport const Anchor = styled(CAnchor)`\n  a {\n    color: inherit;\n    text-decoration: none;\n  }\n  .highlighter {\n    background-color: ${props => props.highlight};\n    height: 2px;\n    width: 100%;\n    margin-top: 3px;\n    transform: scale(0, 1);\n    transition: transform 0.2s ease-in;\n  }\n\n  &:hover {\n    .highlighter {\n      transform: scale(1, 1);\n    }\n  }\n`;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;;;;A","sourceRoot":""}