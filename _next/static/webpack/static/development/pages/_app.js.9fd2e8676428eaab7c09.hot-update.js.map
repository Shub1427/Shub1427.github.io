{"version":3,"file":"static/webpack/static/development/pages/_app.js.9fd2e8676428eaab7c09.hot-update.js","sources":["webpack:///./components/code-diff/code-diff.tsx"],"sourcesContent":["import React from 'react';\nimport { makeStyles, Theme } from '@material-ui/core';\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport jsx from 'react-syntax-highlighter/dist/cjs/languages/prism/jsx';\nimport rust from 'react-syntax-highlighter/dist/cjs/languages/prism/rust';\nimport atomDark from 'react-syntax-highlighter/dist/cjs/styles/prism/darcula';\nimport DiffItem from './item';\nimport WindowControlIcons from '@components/window-control-icons';\n\nSyntaxHighlighter.registerLanguage('js', jsx);\nSyntaxHighlighter.registerLanguage('rust', rust);\n\nexport interface ICodeDiffProps {\n  lang: 'rs' | 'jsx';\n  hideLines?: boolean;\n  addedLineNumbers: number[];\n  removedLineNumbers: number[];\n  children: React.ReactChild;\n}\n\nexport interface IRowRenderer {\n  rows: any[];\n  stylesheet: string;\n  useInlineStyles: any;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    marginTop: 16,\n    marginBottom: 48,\n    padding: 0,\n    borderRadius: 4,\n    background: theme.palette.primary.main,\n    overflow: 'hidden',\n    boxShadow: 'rgba(0, 0, 0, 0.55) 0px 10px 32px',\n  },\n  windowBlock: {\n    position: 'relative',\n    padding: 16,\n    borderRadius: 4,\n  },\n  windowControls: {\n    position: 'relative',\n    paddingBottom: 8,\n  },\n  codeBlock: {\n    marginBottom: '-64px !important',\n    padding: '0 0 64px 0 !important',\n  },\n}));\n\nconst rowRenderer = (addedLines: number[], removedLines: number[]) => ({\n  rows,\n  stylesheet,\n  useInlineStyles,\n}: IRowRenderer) => {\n  return rows.map((row: any, index: number) => {\n    return (\n      <DiffItem\n        key={`code-segement${index}`}\n        isAddedLine={addedLines.includes(index + 1)}\n        isRemovedLine={removedLines.includes(index + 1)}\n        index={index}\n        row={row}\n        stylesheet={stylesheet}\n        useInlineStyles={useInlineStyles}\n      />\n    );\n  });\n};\n\nexport default function CodeDiff(props: ICodeDiffProps) {\n  const classes = useStyles();\n  let language: string = props.lang;\n  switch (language) {\n    case 'rs':\n      language = 'rust';\n      break;\n    default:\n      language = 'jsx';\n      break;\n  }\n\n  return (\n    <div className={classes.root}>\n      <div\n        className={classes.windowBlock}\n        style={{\n          background:\n            atomDark[':not(pre) > code[class*=\"language-\"]'].background,\n        }}\n      >\n        <div className={classes.windowControls}>\n          <WindowControlIcons />\n        </div>\n        <SyntaxHighlighter\n          language={language}\n          style={atomDark}\n          showLineNumbers={!props.hideLines}\n          wrapLines\n          renderer={rowRenderer(\n            props.addedLineNumbers,\n            props.removedLineNumbers\n          )}\n        >\n          {props.children}\n        </SyntaxHighlighter>\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAnBA;AACA;AAwBA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AANA;AACA;AAQA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AADA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;;;;A","sourceRoot":""}