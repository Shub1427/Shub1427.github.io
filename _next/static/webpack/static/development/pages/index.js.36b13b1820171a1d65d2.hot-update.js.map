{"version":3,"file":"static/webpack/static/development/pages/index.js.36b13b1820171a1d65d2.hot-update.js","sources":["webpack:///./ui/nav.tsx"],"sourcesContent":["import { MyTheme } from '@utils/interface';\nimport React, { useContext } from 'react';\nimport styled, { ThemeContext } from 'styled-components';\nimport { Anchor } from './anchor';\n\nexport interface ILink {\n  label: string;\n  url: string;\n  newTab: boolean;\n}\n\nexport interface INavProps extends Partial<MyTheme> {\n  banner: React.ReactElement;\n  bannerUrl: string;\n  links: ILink[];\n}\nconst Wrapper = styled.div`\n  display: flex;\n\n  .banner {\n    margin-right: 60px;\n  }\n`;\n\nconst NavWrapper = styled.ul<MyTheme>`\n  list-style: none;\n  margin: 0;\n  padding: 15px;\n  font-size: 24px;\n  color: ${props => props.theme.colors.white};\n`;\n\nconst NavLink = styled.li`\n  display: inline-block;\n  margin-right: 30px;\n`;\n\nexport const Nav: React.FC<INavProps> = props => {\n  const theme = useContext(ThemeContext);\n  return (\n    <Wrapper>\n      <NavWrapper theme={theme}>\n        {props.links.slice(0, props.links.length / 2).map(link => (\n          <NavLink key={link.label}>\n            <Anchor href={link.url} highlight='#f2f2f2' withNextRoute={!link.newTab}>\n              {link.label}\n            </Anchor>\n          </NavLink>\n        ))}\n      </NavWrapper>\n      <Anchor className='banner' href={props.bannerUrl} withNextRoute>\n        <div style={{ height: 32 }}>{props.banner}</div>\n      </Anchor>\n      <NavWrapper theme={theme}>\n        {props.links.slice(0, props.links.length / 2).map(link => (\n          <NavLink key={link.label}>\n            <Anchor href={link.url} highlight='#f2f2f2' withNextRoute={!link.newTab}>\n              {link.label}\n            </Anchor>\n          </NavLink>\n        ))}\n      </NavWrapper>\n    </Wrapper>\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAaA;AAQA;AAQA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;A","sourceRoot":""}