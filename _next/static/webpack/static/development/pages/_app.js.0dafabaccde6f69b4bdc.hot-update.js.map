{"version":3,"file":"static/webpack/static/development/pages/_app.js.0dafabaccde6f69b4bdc.hot-update.js","sources":["webpack:///./hoc/palette-mode.tsx","webpack:///./hooks/use-local-storage.ts","webpack:///./pages/_app.tsx"],"sourcesContent":["import React, { useContext } from 'react';\nimport { useLocalStorage } from 'hooks/use-local-storage';\n\ninterface IContextProps {\n  darkMode: boolean;\n  setDarkMode(darkMode: boolean): void;\n}\n\nconst PaletteModeContext = React.createContext<IContextProps>({\n  darkMode: false,\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  setDarkMode: () => {},\n});\n\ninterface IPaletteModeProps {\n  children?: React.ReactNode;\n}\n\nconst PaletteModeProvider: React.FC<IPaletteModeProps> = ({ children }) => {\n  const [darkMode, setDarkMode] = useLocalStorage('darkMode', false);\n  return (\n    <PaletteModeContext.Provider\n      value={{\n        darkMode,\n        setDarkMode,\n      }}\n    >\n      {children}\n    </PaletteModeContext.Provider>\n  );\n};\n\nexport const usePaletteModeStore = () => useContext(PaletteModeContext);\n\nexport function withPaletteModeProvider(Component: any) {\n  return function PaletteModeWrapperComponent(props: any) {\n    return (\n      <PaletteModeProvider>\n        <Component {...props} />\n      </PaletteModeProvider>\n    );\n  };\n}\n","/**\n * Credits: https://usehooks.com/useLocalStorage/\n */\nimport { useState } from 'react';\n\nexport function useLocalStorage(key: string, initialValue: any) {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.error(error);\n      return initialValue;\n    }\n  });\n\n  const setValue = (value: any) => {\n    try {\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n\n      setStoredValue(valueToStore);\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","import { MDXProvider } from '@mdx-js/react';\nimport theme from '@utils/theme';\nimport Head from 'next/head';\nimport App, { AppInitialProps } from 'next/app';\nimport React from 'react';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport { Button, Link } from '@material-ui/core';\nimport Para from '@components/para';\nimport Blockquote from '@components/blockquote';\nimport MDXH1 from '@components/mdx-h1';\nimport MDXH2 from '@components/mdx-h2';\nimport MDXH3 from '@components/mdx-h3';\nimport MDXH4 from '@components/mdx-h4';\nimport CodeBlock from '@components/code-block';\nimport InlineCode from '@components/inline-code';\nimport CodeDiff from '@components/code-diff';\nimport Image from '@components/progressive-image';\nimport ThematicBreak from '@components/thematic-break';\nimport PolkaContainer from '@components/polka-container';\nimport NoteSubtitle from '@components/note-subtitle';\nimport { MDXOL, MDXUL, MDXLI } from '@components/mdx-list';\nimport { NextComponentType } from 'next';\nimport { withPaletteModeProvider } from 'hoc/palette-mode';\n\nconst mdComponents = {\n  a: (props: any) => <Link target=\"_blank\" {...props} />,\n  h1: (props: any) => <MDXH1 {...props} />,\n  h2: (props: any) => <MDXH2 {...props} />,\n  h3: (props: any) => <MDXH3 {...props} />,\n  h4: (props: any) => <MDXH4 {...props} />,\n  p: (props: any) => <Para {...props} />,\n  blockquote: (props: any) => <Blockquote {...props} />,\n  code: CodeBlock,\n  inlineCode: InlineCode,\n  thematicBreak: ThematicBreak,\n  hr: ThematicBreak,\n  ol: MDXOL,\n  ul: MDXUL,\n  li: MDXLI,\n  H1: MDXH1,\n  Link,\n  Button,\n  Blockquote,\n  Diff: CodeDiff,\n  CodeBlock, // Using codeblock as is gives us more control\n  InlineCode,\n  Image,\n  PolkaContainer,\n  NoteSubtitle,\n};\n\nconst Content = (props: AppInitialProps & { Component: NextComponentType }) => {\n  const { Component, pageProps } = props;\n  return (\n    <ThemeProvider theme={theme}>\n      {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n      <CssBaseline />\n      <MDXProvider components={mdComponents}>\n        <Component {...pageProps} />\n      </MDXProvider>\n    </ThemeProvider>\n  );\n};\n\nconst WithPaletteModeContent = withPaletteModeProvider(Content);\n\nexport default class MyApp extends App {\n  componentDidMount() {\n    // Remove the server-side injected CSS.\n    const jssStyles = document.querySelector('#jss-server-side');\n    if (jssStyles && jssStyles.parentElement) {\n      jssStyles.parentElement.removeChild(jssStyles);\n    }\n  }\n\n  public render() {\n    return (\n      <React.Fragment>\n        <Head>\n          <link\n            href=\"https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,300;0,400;0,600;1,300;1,400;1,600&display=swap\"\n            rel=\"stylesheet\"\n          />\n          <link\n            href=\"https://fonts.googleapis.com/css2?family=Oswald:wght@200;300;400&display=swap\"\n            rel=\"stylesheet\"\n          />\n          <link href=\"/css/main.css\" rel=\"stylesheet\" />\n        </Head>\n        <WithPaletteModeContent {...this.props} />\n      </React.Fragment>\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAOA;AACA;AACA;AACA;AAHA;AACA;AASA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAFA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;;;;;;;;;;;;AC1CA;AAAA;AAAA;AAAA;AAAA;;;AAGA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAxBA;AACA;AA0BA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AA3BA;;;;A","sourceRoot":""}