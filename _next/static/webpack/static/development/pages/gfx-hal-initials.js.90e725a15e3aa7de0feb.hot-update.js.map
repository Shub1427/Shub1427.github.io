{"version":3,"file":"static/webpack/static/development/pages/gfx-hal-initials.js.90e725a15e3aa7de0feb.hot-update.js","sources":["webpack:///./pages/gfx-hal-initials/index.md"],"sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { archiveRecord } from '@constants/archive-list';\nimport { halArchiveRecord } from '@constants/gfx-hal-archive-list';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\nconst PolkaContainer = makeShortcode(\"PolkaContainer\");\nconst H1 = makeShortcode(\"H1\");\nconst InlineCode = makeShortcode(\"InlineCode\");\nconst Blockquote = makeShortcode(\"Blockquote\");\nconst Link = makeShortcode(\"Link\");\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <PolkaContainer mdxType=\"PolkaContainer\">\n      <H1 updatedAt={archiveRecord['gfx-hal-basics'].updatedAt} wordCount={325} mdxType=\"H1\">\n  <InlineCode mdxType=\"InlineCode\">gfx-hal</InlineCode> & <InlineCode mdxType=\"InlineCode\">vulkan</InlineCode> basics\n      </H1>\n      <Blockquote type=\"warn\" mdxType=\"Blockquote\">\n  This blog is a <b>Work in Progress</b>. As I complete learning few things one by one,\n  I will update the doc accordingly.\n  <br />\n  <br />\n        <p>{`  ⚠️ `}{` `}{`For now, read it at your own risk!!!`}</p>\n      </Blockquote>\n      <p>{`I have found that learning new things every often,\nleads to chaos, and people (specifically ME) tend to forget many things they have already\nlearnt before.`}</p>\n      <br />\n      <p>{`These notes will help me to keep reference notes for myself, as well as for anybody who is willing to\nlearn Vulkan API using `}<inlineCode parentName=\"p\">{`gfx-hal`}</inlineCode>{`.`}</p>\n      <br />\n      <p>{`Learning `}<inlineCode parentName=\"p\">{`rust`}</inlineCode>{` language and `}<inlineCode parentName=\"p\">{`vulkan`}</inlineCode>{` APIs, both are very difficult for starters. I am still struggling\nto understand the basics, let aside writing proper Memory Management and Performance optimized Rust\nCode. Reading these notes requires prior knowledge of at-least one statically typed language (like\n`}<inlineCode parentName=\"p\">{`java`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`C`}</inlineCode>{` etc.), and some understanding of graphics, though even I am very new to Graphics Programming,\nso even for me many concepts are very new, and I will try to either explain them as much as I could, or\nbetter point you to some reference to take a look into and understand it better.`}</p>\n      <br />\n      <p><strong parentName=\"p\">{`Special Thanks to`}</strong>{`:`}</p>\n      <ul>\n        <li parentName=\"ul\"><a parentName=\"li\" {...{\n            \"href\": \"https://github.com/Lokathor\"\n          }}>{`@lokathor`}</a>{`, for writing an open book on learning basics of using `}<inlineCode parentName=\"li\">{`gfx-hal`}</inlineCode>{`,\nthough with very old `}<inlineCode parentName=\"li\">{`gfx-hal`}</inlineCode>{` version, but it still guided me a lot. You can read it\n`}<a parentName=\"li\" {...{\n            \"href\": \"https://rust-tutorials.github.io/learn-gfx-hal/\"\n          }}>{`here`}</a>{`.`}</li>\n        <li parentName=\"ul\"><a parentName=\"li\" {...{\n            \"href\": \"https://twitter.com/mistodon\"\n          }}>{`@mistodon`}</a>{`, for writing such a good blog on `}<inlineCode parentName=\"li\">{`gfx-hal`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`vulkan`}</inlineCode>{`, which\nyou can read `}<a parentName=\"li\" {...{\n            \"href\": \"https://www.falseidolfactory.com/2020/04/01/intro-to-gfx-hal-part-1-drawing-a-triangle.html\"\n          }}>{`here`}</a>{`.`}</li>\n        <li parentName=\"ul\"><a parentName=\"li\" {...{\n            \"href\": \"https://vulkan.lunarg.com/doc/sdk/1.2.131.2/linux/tutorial/html/index.html\"\n          }}>{`LunarG Vulkan Tutorial`}</a></li>\n        <li parentName=\"ul\">{`Special Mentions, (most of them I haven't read completely, but will help me later for reference):`}<ul parentName=\"li\">\n            <li parentName=\"ul\"><a parentName=\"li\" {...{\n                \"href\": \"https://www.fasterthan.life/blog/2017/7/11/i-am-graphics-and-so-can-you-part-1\"\n              }}>{`Dusting H Lan`}</a></li>\n            <li parentName=\"ul\"><a parentName=\"li\" {...{\n                \"href\": \"https://vulkan-tutorial.com/Introduction\"\n              }}>{`Vulkan Tutorials`}</a></li>\n          </ul></li>\n      </ul>\n      <blockquote>\n        <p parentName=\"blockquote\">{`Before moving forward, I would like to clear some basics on Rust and Cargo.\n`}<em parentName=\"p\">{`Follow `}<Link href={halArchiveRecord['rust-cargo-basics'].link} mdxType=\"Link\">{`this guide`}</Link></em>{`, if you want to\nclear some basics on the same.`}</p>\n      </blockquote>\n      <hr></hr>\n      <h2>{`Table of Contents`}</h2>\n      <h3>{`Draw a Cube`}</h3>\n      <ul>\n        <li parentName=\"ul\"><Link href={halArchiveRecord['display-window'].link} mdxType=\"Link\">Display a Window</Link></li>\n      </ul>\n    </PolkaContainer>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAGA;AAFA;AADA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AACA;;;;A","sourceRoot":""}