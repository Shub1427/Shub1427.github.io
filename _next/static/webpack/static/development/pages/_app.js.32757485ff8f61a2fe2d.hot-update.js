webpackHotUpdate("static/development/pages/_app.js",{

/***/ "./components/progressive-image.tsx":
/*!******************************************!*\
  !*** ./components/progressive-image.tsx ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Image; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! classnames */ \"./node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_progressive_image__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-progressive-image */ \"./node_modules/react-progressive-image/dist.js\");\n/* harmony import */ var react_progressive_image__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_progressive_image__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react_zoom_pan_pinch__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-zoom-pan-pinch */ \"./node_modules/react-zoom-pan-pinch/dist/index.es.js\");\n/* harmony import */ var _material_ui_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @material-ui/core */ \"./node_modules/@material-ui/core/esm/index.js\");\nvar _jsxFileName = \"/Users/subroto.biswas/Subroto/shub1427.github.io/components/progressive-image.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;\n\n\n\n\n\nconst useStyles = Object(_material_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"makeStyles\"])({\n  root: {\n    position: 'relative',\n    width: '100%',\n    margin: '32px 0'\n  },\n  image: {\n    width: '100%',\n    filter: 'blur(0)',\n    transition: '0.3s ease-out'\n  },\n  blur: {\n    filter: 'blur(3px)'\n  },\n  description: {\n    margin: 0,\n    textAlign: 'center',\n    fontStyle: 'italic',\n    fontWeight: 400,\n    fontSize: '0.8rem',\n    color: '#aaa'\n  }\n});\nfunction Image(props) {\n  _s();\n\n  const classes = useStyles();\n  const rootClasses = classnames__WEBPACK_IMPORTED_MODULE_1___default()(classes.root);\n  return __jsx(\"div\", {\n    className: rootClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, __jsx(react_progressive_image__WEBPACK_IMPORTED_MODULE_2___default.a, {\n    src: props.src,\n    placeholder: props.placeholder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, (src, loading) => {\n    const rootClasses = classnames__WEBPACK_IMPORTED_MODULE_1___default()(classes.image, {\n      [classes.blur]: loading\n    });\n    return __jsx(react_zoom_pan_pinch__WEBPACK_IMPORTED_MODULE_3__[\"TransformWrapper\"], {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, __jsx(react_zoom_pan_pinch__WEBPACK_IMPORTED_MODULE_3__[\"TransformComponent\"], {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    }, __jsx(\"img\", {\n      className: rootClasses,\n      src: src,\n      alt: props.alt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    })));\n  }), __jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_4__[\"Typography\"], {\n    className: classes.description,\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, props.alt));\n}\n\n_s(Image, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Image;\n\nvar _c;\n\n$RefreshReg$(_c, \"Image\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports_1 = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports_1;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports_1)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL3Byb2dyZXNzaXZlLWltYWdlLnRzeD81ZmExIl0sIm5hbWVzIjpbInVzZVN0eWxlcyIsIm1ha2VTdHlsZXMiLCJyb290IiwicG9zaXRpb24iLCJ3aWR0aCIsIm1hcmdpbiIsImltYWdlIiwiZmlsdGVyIiwidHJhbnNpdGlvbiIsImJsdXIiLCJkZXNjcmlwdGlvbiIsInRleHRBbGlnbiIsImZvbnRTdHlsZSIsImZvbnRXZWlnaHQiLCJmb250U2l6ZSIsImNvbG9yIiwiSW1hZ2UiLCJwcm9wcyIsImNsYXNzZXMiLCJyb290Q2xhc3NlcyIsImN4Iiwic3JjIiwicGxhY2Vob2xkZXIiLCJsb2FkaW5nIiwiYWx0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFFQSxNQUFNQSxTQUFTLEdBQUdDLG9FQUFVLENBQUM7QUFDM0JDLE1BQUksRUFBRTtBQUNKQyxZQUFRLEVBQUUsVUFETjtBQUVKQyxTQUFLLEVBQUUsTUFGSDtBQUdKQyxVQUFNLEVBQUU7QUFISixHQURxQjtBQU0zQkMsT0FBSyxFQUFFO0FBQ0xGLFNBQUssRUFBRSxNQURGO0FBRUxHLFVBQU0sRUFBRSxTQUZIO0FBR0xDLGNBQVUsRUFBRTtBQUhQLEdBTm9CO0FBVzNCQyxNQUFJLEVBQUU7QUFDSkYsVUFBTSxFQUFFO0FBREosR0FYcUI7QUFjM0JHLGFBQVcsRUFBRTtBQUNYTCxVQUFNLEVBQUUsQ0FERztBQUVYTSxhQUFTLEVBQUUsUUFGQTtBQUdYQyxhQUFTLEVBQUUsUUFIQTtBQUlYQyxjQUFVLEVBQUUsR0FKRDtBQUtYQyxZQUFRLEVBQUUsUUFMQztBQU1YQyxTQUFLLEVBQUU7QUFOSTtBQWRjLENBQUQsQ0FBNUI7QUE0QmUsU0FBU0MsS0FBVCxDQUFlQyxLQUFmLEVBQW1DO0FBQUE7O0FBQ2hELFFBQU1DLE9BQU8sR0FBR2xCLFNBQVMsRUFBekI7QUFDQSxRQUFNbUIsV0FBVyxHQUFHQyxpREFBRSxDQUFDRixPQUFPLENBQUNoQixJQUFULENBQXRCO0FBQ0EsU0FDRTtBQUFLLGFBQVMsRUFBRWlCLFdBQWhCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsS0FDRSxNQUFDLDhEQUFEO0FBQWtCLE9BQUcsRUFBRUYsS0FBSyxDQUFDSSxHQUE3QjtBQUFrQyxlQUFXLEVBQUVKLEtBQUssQ0FBQ0ssV0FBckQ7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxLQUNHLENBQUNELEdBQUQsRUFBY0UsT0FBZCxLQUFtQztBQUNsQyxVQUFNSixXQUFXLEdBQUdDLGlEQUFFLENBQUNGLE9BQU8sQ0FBQ1osS0FBVCxFQUFnQjtBQUNwQyxPQUFDWSxPQUFPLENBQUNULElBQVQsR0FBZ0JjO0FBRG9CLEtBQWhCLENBQXRCO0FBR0EsV0FDRSxNQUFDLHFFQUFEO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsT0FDRSxNQUFDLHVFQUFEO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsT0FDRTtBQUFLLGVBQVMsRUFBRUosV0FBaEI7QUFBNkIsU0FBRyxFQUFFRSxHQUFsQztBQUF1QyxTQUFHLEVBQUVKLEtBQUssQ0FBQ08sR0FBbEQ7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxNQURGLENBREYsQ0FERjtBQU9ELEdBWkgsQ0FERixFQWVFLE1BQUMsNERBQUQ7QUFBWSxhQUFTLEVBQUVOLE9BQU8sQ0FBQ1IsV0FBL0I7QUFBNEMsV0FBTyxFQUFDLE9BQXBEO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsS0FDR08sS0FBSyxDQUFDTyxHQURULENBZkYsQ0FERjtBQXFCRDs7R0F4QnVCUixLO1VBQ05oQixTOzs7S0FETWdCLEsiLCJmaWxlIjoiLi9jb21wb25lbnRzL3Byb2dyZXNzaXZlLWltYWdlLnRzeC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgY3ggZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgUHJvZ3Jlc3NpdmVJbWFnZSwge1xuICBQcm9ncmVzc2l2ZUltYWdlUHJvcHMsXG59IGZyb20gJ3JlYWN0LXByb2dyZXNzaXZlLWltYWdlJztcbmltcG9ydCB7IFRyYW5zZm9ybVdyYXBwZXIsIFRyYW5zZm9ybUNvbXBvbmVudCB9IGZyb20gXCJyZWFjdC16b29tLXBhbi1waW5jaFwiO1xuaW1wb3J0IHsgbWFrZVN0eWxlcywgVHlwb2dyYXBoeSB9IGZyb20gJ0BtYXRlcmlhbC11aS9jb3JlJztcblxuY29uc3QgdXNlU3R5bGVzID0gbWFrZVN0eWxlcyh7XG4gIHJvb3Q6IHtcbiAgICBwb3NpdGlvbjogJ3JlbGF0aXZlJyxcbiAgICB3aWR0aDogJzEwMCUnLFxuICAgIG1hcmdpbjogJzMycHggMCcsXG4gIH0sXG4gIGltYWdlOiB7XG4gICAgd2lkdGg6ICcxMDAlJyxcbiAgICBmaWx0ZXI6ICdibHVyKDApJyxcbiAgICB0cmFuc2l0aW9uOiAnMC4zcyBlYXNlLW91dCcsXG4gIH0sXG4gIGJsdXI6IHtcbiAgICBmaWx0ZXI6ICdibHVyKDNweCknLFxuICB9LFxuICBkZXNjcmlwdGlvbjoge1xuICAgIG1hcmdpbjogMCxcbiAgICB0ZXh0QWxpZ246ICdjZW50ZXInLFxuICAgIGZvbnRTdHlsZTogJ2l0YWxpYycsXG4gICAgZm9udFdlaWdodDogNDAwLFxuICAgIGZvbnRTaXplOiAnMC44cmVtJyxcbiAgICBjb2xvcjogJyNhYWEnLFxuICB9LFxufSk7XG5cbmludGVyZmFjZSBJSW1hZ2VQcm9wcyBleHRlbmRzIFByb2dyZXNzaXZlSW1hZ2VQcm9wcyB7XG4gIGFsdDogc3RyaW5nO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBJbWFnZShwcm9wczogSUltYWdlUHJvcHMpIHtcbiAgY29uc3QgY2xhc3NlcyA9IHVzZVN0eWxlcygpO1xuICBjb25zdCByb290Q2xhc3NlcyA9IGN4KGNsYXNzZXMucm9vdCk7XG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9e3Jvb3RDbGFzc2VzfT5cbiAgICAgIDxQcm9ncmVzc2l2ZUltYWdlIHNyYz17cHJvcHMuc3JjfSBwbGFjZWhvbGRlcj17cHJvcHMucGxhY2Vob2xkZXJ9PlxuICAgICAgICB7KHNyYzogc3RyaW5nLCBsb2FkaW5nOiBib29sZWFuKSA9PiB7XG4gICAgICAgICAgY29uc3Qgcm9vdENsYXNzZXMgPSBjeChjbGFzc2VzLmltYWdlLCB7XG4gICAgICAgICAgICBbY2xhc3Nlcy5ibHVyXTogbG9hZGluZyxcbiAgICAgICAgICB9KTtcbiAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPFRyYW5zZm9ybVdyYXBwZXI+XG4gICAgICAgICAgICAgIDxUcmFuc2Zvcm1Db21wb25lbnQ+XG4gICAgICAgICAgICAgICAgPGltZyBjbGFzc05hbWU9e3Jvb3RDbGFzc2VzfSBzcmM9e3NyY30gYWx0PXtwcm9wcy5hbHR9IC8+XG4gICAgICAgICAgICAgIDwvVHJhbnNmb3JtQ29tcG9uZW50PlxuICAgICAgICAgICAgPC9UcmFuc2Zvcm1XcmFwcGVyPlxuICAgICAgICAgICk7XG4gICAgICAgIH19XG4gICAgICA8L1Byb2dyZXNzaXZlSW1hZ2U+XG4gICAgICA8VHlwb2dyYXBoeSBjbGFzc05hbWU9e2NsYXNzZXMuZGVzY3JpcHRpb259IHZhcmlhbnQ9XCJib2R5MlwiPlxuICAgICAgICB7cHJvcHMuYWx0fVxuICAgICAgPC9UeXBvZ3JhcGh5PlxuICAgIDwvZGl2PlxuICApO1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/progressive-image.tsx\n");

/***/ }),

/***/ "./node_modules/react-zoom-pan-pinch/dist/index.es.js":
/*!************************************************************!*\
  !*** ./node_modules/react-zoom-pan-pinch/dist/index.es.js ***!
  \************************************************************/
/*! exports provided: TransformComponent, TransformWrapper */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TransformComponent\", function() { return TransformComponent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TransformWrapper\", function() { return TransformWrapper; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nvar initialState = {\r\n    wrapperComponent: null,\r\n    contentComponent: null,\r\n    previousScale: 1,\r\n    scale: 1,\r\n    positionX: 0,\r\n    positionY: 0,\r\n    options: {\r\n        disabled: false,\r\n        transformEnabled: true,\r\n        minPositionX: null,\r\n        maxPositionX: null,\r\n        minPositionY: null,\r\n        maxPositionY: null,\r\n        minScale: 1,\r\n        maxScale: 8,\r\n        limitToBounds: true,\r\n        limitToWrapper: false,\r\n        centerContent: true,\r\n        wrapperClass: \"\",\r\n        contentClass: \"\",\r\n    },\r\n    wheel: {\r\n        disabled: false,\r\n        step: 5,\r\n        wheelEnabled: true,\r\n        touchPadEnabled: true,\r\n        limitsOnWheel: false,\r\n    },\r\n    pan: {\r\n        disabled: false,\r\n        panAnimationType: \"linear\",\r\n        lockAxisX: false,\r\n        lockAxisY: false,\r\n        velocity: true,\r\n        velocityEqualToMove: true,\r\n        velocitySensitivity: 2,\r\n        velocityActiveScale: 1,\r\n        velocityMinSpeed: 1,\r\n        velocityBaseTime: 1600,\r\n        velocityAnimationType: \"easeOutQuart\",\r\n        padding: true,\r\n        paddingSize: 30,\r\n        panReturnAnimationTime: 400,\r\n        panReturnAnimationType: \"easeOut\",\r\n        disableOnTarget: [],\r\n    },\r\n    pinch: {\r\n        disabled: false,\r\n    },\r\n    zoomIn: {\r\n        disabled: false,\r\n        step: 20,\r\n        animation: true,\r\n        animationType: \"easeOut\",\r\n        animationTime: 200,\r\n    },\r\n    zoomOut: {\r\n        disabled: false,\r\n        step: 20,\r\n        animation: true,\r\n        animationType: \"easeOut\",\r\n        animationTime: 200,\r\n    },\r\n    doubleClick: {\r\n        disabled: false,\r\n        step: 20,\r\n        mode: \"zoomIn\",\r\n        animation: true,\r\n        animationType: \"easeOut\",\r\n        animationTime: 200,\r\n    },\r\n    reset: {\r\n        disabled: false,\r\n        animation: true,\r\n        animationType: \"easeOut\",\r\n        animationTime: 200,\r\n    },\r\n    scalePadding: {\r\n        disabled: false,\r\n        size: 0.2,\r\n        animationTime: 200,\r\n        animationType: \"easeOut\",\r\n    },\r\n};\n\n/**\r\n * Rounds number to given decimal\r\n * eg. roundNumber(2.34343, 1) => 2.3\r\n */\r\nvar roundNumber = function (num, decimal) {\r\n    return Number(num.toFixed(decimal));\r\n};\r\n/**\r\n * Checks if value is number, if not it returns default value\r\n * 1# eg. checkIsNumber(2, 30) => 2\r\n * 2# eg. checkIsNumber(null, 30) => 30\r\n */\r\nvar checkIsNumber = function (num, defaultValue) {\r\n    return typeof num === \"number\" ? num : defaultValue;\r\n};\r\n/**\r\n * Keeps value between given bounds, used for limiting view to given boundaries\r\n * 1# eg. boundLimiter(2, 0, 3, true) => 2\r\n * 2# eg. boundLimiter(4, 0, 3, true) => 3\r\n * 3# eg. boundLimiter(-2, 0, 3, true) => 0\r\n * 4# eg. boundLimiter(10, 0, 3, false) => 10\r\n */\r\nvar boundLimiter = function (value, minBound, maxBound, isActive) {\r\n    if (!isActive)\r\n        return roundNumber(value, 2);\r\n    if (value < minBound)\r\n        return roundNumber(minBound, 2);\r\n    if (value > maxBound)\r\n        return roundNumber(maxBound, 2);\r\n    return roundNumber(value, 2);\r\n};\r\n/**\r\n * Calculate bounding area of zoomed/panned element\r\n */\r\nvar calculateBoundingArea = function (wrapperWidth, newContentWidth, diffWidth, wrapperHeight, newContentHeight, diffHeight, limitToWrapper) {\r\n    var scaleWidthFactor = wrapperWidth > newContentWidth\r\n        ? diffWidth * (limitToWrapper ? 1 : 0.5)\r\n        : 0;\r\n    var scaleHeightFactor = wrapperHeight > newContentHeight\r\n        ? diffHeight * (limitToWrapper ? 1 : 0.5)\r\n        : 0;\r\n    var minPositionX = wrapperWidth - newContentWidth - scaleWidthFactor;\r\n    var maxPositionX = scaleWidthFactor;\r\n    var minPositionY = wrapperHeight - newContentHeight - scaleHeightFactor;\r\n    var maxPositionY = scaleHeightFactor;\r\n    return { minPositionX: minPositionX, maxPositionX: maxPositionX, minPositionY: minPositionY, maxPositionY: maxPositionY };\r\n};\r\n/**\r\n * Returns distance between two points x,y\r\n */\r\nvar getDistance = function (firstPoint, secondPoint) {\r\n    return Math.sqrt(Math.pow(firstPoint.pageX - secondPoint.pageX, 2) +\r\n        Math.pow(firstPoint.pageY - secondPoint.pageY, 2));\r\n};\r\n/**\r\n * Delete undefined values from object keys\r\n * Used for deleting empty props\r\n */\r\nvar deleteUndefinedProps = function (value) {\r\n    var newObject = __assign({}, value);\r\n    Object.keys(newObject).forEach(function (key) { return newObject[key] === undefined && delete newObject[key]; });\r\n    return newObject;\r\n};\r\n/**\r\n * Fire callback if it's function\r\n */\r\nvar handleCallback = function (callback, props) {\r\n    if (callback && typeof callback === \"function\") {\r\n        callback(props);\r\n    }\r\n};\r\nvar handleWheelStop = function (previousEvent, event, stateProvider) {\r\n    var scale = stateProvider.scale, _a = stateProvider.options, maxScale = _a.maxScale, minScale = _a.minScale;\r\n    if (!previousEvent)\r\n        return false;\r\n    if (scale < maxScale || scale > minScale)\r\n        return true;\r\n    if (Math.sign(previousEvent.deltaY) !== Math.sign(event.deltaY))\r\n        return true;\r\n    if (previousEvent.deltaY > 0 && previousEvent.deltaY < event.deltaY)\r\n        return true;\r\n    if (previousEvent.deltaY < 0 && previousEvent.deltaY > event.deltaY)\r\n        return true;\r\n    if (Math.sign(previousEvent.deltaY) !== Math.sign(event.deltaY))\r\n        return true;\r\n    return false;\r\n};\r\nvar mergeProps = function (initialState, dynamicProps) {\r\n    return Object.keys(initialState).reduce(function (acc, curr) {\r\n        if (typeof dynamicProps[curr] === \"object\" && dynamicProps[curr] !== null) {\r\n            acc[curr] = __assign(__assign({}, initialState[curr]), dynamicProps[curr]);\r\n        }\r\n        else {\r\n            acc[curr] =\r\n                dynamicProps[curr] === undefined\r\n                    ? initialState[curr]\r\n                    : dynamicProps[curr];\r\n        }\r\n        return acc;\r\n    }, {});\r\n};\r\nfunction getWindowScaleY(wrapper) {\r\n    if (!wrapper)\r\n        return 0;\r\n    return window.innerHeight / wrapper.offsetHeight;\r\n}\r\nfunction getWindowScaleX(wrapper) {\r\n    if (!wrapper)\r\n        return 0;\r\n    return window.innerWidth / wrapper.offsetWidth;\r\n}\n\n/**\r\n * Functions should return denominator of the target value, which is the next animation step.\r\n * t is a value from 0 to 1, reflecting the percentage of animation status.\r\n */\r\nvar easeOut = function (t) {\r\n    return -Math.cos(t * Math.PI) / 2 + 0.5;\r\n};\r\n// linear\r\nvar linear = function (t) {\r\n    return t;\r\n};\r\n// accelerating from zero velocity\r\nvar easeInQuad = function (t) {\r\n    return t * t;\r\n};\r\n// decelerating to zero velocity\r\nvar easeOutQuad = function (t) {\r\n    return t * (2 - t);\r\n};\r\n// acceleration until halfway, then deceleration\r\nvar easeInOutQuad = function (t) {\r\n    return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;\r\n};\r\n// accelerating from zero velocity\r\nvar easeInCubic = function (t) {\r\n    return t * t * t;\r\n};\r\n// decelerating to zero velocity\r\nvar easeOutCubic = function (t) {\r\n    return --t * t * t + 1;\r\n};\r\n// acceleration until halfway, then deceleration\r\nvar easeInOutCubic = function (t) {\r\n    return t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\r\n};\r\n// accelerating from zero velocity\r\nvar easeInQuart = function (t) {\r\n    return t * t * t * t;\r\n};\r\n// decelerating to zero velocity\r\nvar easeOutQuart = function (t) {\r\n    return 1 - --t * t * t * t;\r\n};\r\n// acceleration until halfway, then deceleration\r\nvar easeInOutQuart = function (t) {\r\n    return t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;\r\n};\r\n// accelerating from zero velocity\r\nvar easeInQuint = function (t) {\r\n    return t * t * t * t * t;\r\n};\r\n// decelerating to zero velocity\r\nvar easeOutQuint = function (t) {\r\n    return 1 + --t * t * t * t * t;\r\n};\r\n// acceleration until halfway, then deceleration\r\nvar easeInOutQuint = function (t) {\r\n    return t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\r\n};\r\nvar availableAnimations = {\r\n    easeOut: easeOut,\r\n    linear: linear,\r\n    easeInQuad: easeInQuad,\r\n    easeOutQuad: easeOutQuad,\r\n    easeInOutQuad: easeInOutQuad,\r\n    easeInCubic: easeInCubic,\r\n    easeOutCubic: easeOutCubic,\r\n    easeInOutCubic: easeInOutCubic,\r\n    easeInQuart: easeInQuart,\r\n    easeOutQuart: easeOutQuart,\r\n    easeInOutQuart: easeInOutQuart,\r\n    easeInQuint: easeInQuint,\r\n    easeOutQuint: easeOutQuint,\r\n    easeInOutQuint: easeInOutQuint,\r\n};\n\nfunction handleDisableAnimation() {\r\n    if (!this.mounted)\r\n        return;\r\n    if (this.animation) {\r\n        cancelAnimationFrame(this.animation);\r\n    }\r\n    this.animate = false;\r\n    this.animation = false;\r\n    this.velocity = false;\r\n}\r\nfunction animate(animationName, animationTime, callback) {\r\n    var _this = this;\r\n    if (!this.mounted)\r\n        return;\r\n    var startTime = new Date().getTime();\r\n    var lastStep = 1;\r\n    // if another animation is active\r\n    handleDisableAnimation.call(this);\r\n    // new animation\r\n    this.animation = function () {\r\n        if (!_this.animation || !_this.mounted)\r\n            return;\r\n        var frameTime = new Date().getTime() - startTime;\r\n        var animationProgress = frameTime / animationTime;\r\n        var animationType = availableAnimations[animationName];\r\n        var step = animationType(animationProgress);\r\n        if (frameTime >= animationTime) {\r\n            callback(lastStep);\r\n            _this.animation = null;\r\n        }\r\n        else {\r\n            callback(step);\r\n            requestAnimationFrame(_this.animation);\r\n        }\r\n    };\r\n    requestAnimationFrame(this.animation);\r\n}\r\nfunction animateComponent(_a) {\r\n    var _this = this;\r\n    var targetState = _a.targetState, speed = _a.speed, type = _a.type;\r\n    var _b = this.stateProvider, scale = _b.scale, positionX = _b.positionX, positionY = _b.positionY;\r\n    var scaleDiff = targetState.scale - scale;\r\n    var positionXDiff = targetState.positionX - positionX;\r\n    var positionYDiff = targetState.positionY - positionY;\r\n    if (speed === 0) {\r\n        this.stateProvider.previousScale = this.stateProvider.scale;\r\n        this.stateProvider.scale = targetState.scale;\r\n        this.stateProvider.positionX = targetState.positionX;\r\n        this.stateProvider.positionY = targetState.positionY;\r\n        this.applyTransformation();\r\n    }\r\n    else {\r\n        // animation start timestamp\r\n        animate.call(this, type, speed, function (step) {\r\n            _this.stateProvider.previousScale = _this.stateProvider.scale;\r\n            _this.stateProvider.scale = scale + scaleDiff * step;\r\n            _this.stateProvider.positionX = positionX + positionXDiff * step;\r\n            _this.stateProvider.positionY = positionY + positionYDiff * step;\r\n            // apply animation changes\r\n            _this.applyTransformation();\r\n        });\r\n    }\r\n}\n\nfunction checkZoomBounds(zoom, minScale, maxScale, zoomPadding, enablePadding) {\r\n    var scalePadding = enablePadding ? zoomPadding : 0;\r\n    var minScaleWithPadding = minScale - scalePadding;\r\n    if (!isNaN(maxScale) && zoom >= maxScale)\r\n        return maxScale;\r\n    if (!isNaN(minScale) && zoom <= minScaleWithPadding)\r\n        return minScaleWithPadding;\r\n    return zoom;\r\n}\r\nfunction checkPositionBounds(positionX, positionY, bounds, limitToBounds, paddingValue, wrapperComponent) {\r\n    var minPositionX = bounds.minPositionX, minPositionY = bounds.minPositionY, maxPositionX = bounds.maxPositionX, maxPositionY = bounds.maxPositionY;\r\n    var paddingX = wrapperComponent\r\n        ? (paddingValue * wrapperComponent.offsetWidth) / 100\r\n        : 0;\r\n    var paddingY = wrapperComponent\r\n        ? (paddingValue * wrapperComponent.offsetHeight) / 100\r\n        : 0;\r\n    var x = boundLimiter(positionX, minPositionX - paddingX, maxPositionX + paddingX, limitToBounds);\r\n    var y = boundLimiter(positionY, minPositionY - paddingY, maxPositionY + paddingY, limitToBounds);\r\n    return { x: x, y: y };\r\n}\r\nfunction getDelta(event, customDelta) {\r\n    var deltaY = event ? (event.deltaY < 0 ? 1 : -1) : 0;\r\n    var delta = checkIsNumber(customDelta, deltaY);\r\n    return delta;\r\n}\r\nfunction wheelMousePosition(event, contentComponent, scale) {\r\n    var contentRect = contentComponent.getBoundingClientRect();\r\n    // mouse position x, y over wrapper component\r\n    var mouseX = (event.clientX - contentRect.left) / scale;\r\n    var mouseY = (event.clientY - contentRect.top) / scale;\r\n    if (isNaN(mouseX) || isNaN(mouseY))\r\n        console.error(\"No mouse or touch offset found\");\r\n    return {\r\n        mouseX: mouseX,\r\n        mouseY: mouseY,\r\n    };\r\n}\r\nfunction getComponentsSizes(wrapperComponent, contentComponent, newScale) {\r\n    var wrapperWidth = wrapperComponent.offsetWidth;\r\n    var wrapperHeight = wrapperComponent.offsetHeight;\r\n    var contentWidth = contentComponent.offsetWidth;\r\n    var contentHeight = contentComponent.offsetHeight;\r\n    var newContentWidth = contentWidth * newScale;\r\n    var newContentHeight = contentHeight * newScale;\r\n    var newDiffWidth = wrapperWidth - newContentWidth;\r\n    var newDiffHeight = wrapperHeight - newContentHeight;\r\n    return {\r\n        wrapperWidth: wrapperWidth,\r\n        wrapperHeight: wrapperHeight,\r\n        newContentWidth: newContentWidth,\r\n        newDiffWidth: newDiffWidth,\r\n        newContentHeight: newContentHeight,\r\n        newDiffHeight: newDiffHeight,\r\n    };\r\n}\r\nfunction handleCalculatePositions(mouseX, mouseY, newScale, bounds, limitToBounds) {\r\n    var _a = this.stateProvider, scale = _a.scale, positionX = _a.positionX, positionY = _a.positionY, transformEnabled = _a.options.transformEnabled;\r\n    var scaleDifference = newScale - scale;\r\n    if (typeof mouseX !== \"number\" || typeof mouseY !== \"number\")\r\n        return console.error(\"Mouse X and Y position were not provided!\");\r\n    if (!transformEnabled)\r\n        return { newPositionX: positionX, newPositionY: positionY };\r\n    var calculatedPositionX = positionX - mouseX * scaleDifference;\r\n    var calculatedPositionY = positionY - mouseY * scaleDifference;\r\n    // do not limit to bounds when there is padding animation,\r\n    // it causes animation strange behaviour\r\n    var newPositions = checkPositionBounds(calculatedPositionX, calculatedPositionY, bounds, limitToBounds, 0, null);\r\n    return newPositions;\r\n}\n\nfunction getClientPosition(event) {\r\n    var touches = event.touches;\r\n    // Mobile points\r\n    if (touches && touches.length === 1) {\r\n        return { clientX: touches[0].clientX, clientY: touches[0].clientY };\r\n    }\r\n    // Desktop points\r\n    if (!touches) {\r\n        return { clientX: event.clientX, clientY: event.clientY };\r\n    }\r\n    return null;\r\n}\r\nfunction handlePanning(event) {\r\n    var _a = this.stateProvider, scale = _a.scale, positionX = _a.positionX, positionY = _a.positionY, _b = _a.options, limitToBounds = _b.limitToBounds, minScale = _b.minScale, _c = _a.pan, lockAxisX = _c.lockAxisX, lockAxisY = _c.lockAxisY, padding = _c.padding, paddingSize = _c.paddingSize, wrapperComponent = _a.wrapperComponent;\r\n    if (!this.startCoords)\r\n        return;\r\n    var _d = this.startCoords, x = _d.x, y = _d.y;\r\n    var positions = getClientPosition(event);\r\n    if (!positions)\r\n        return console.error(\"Cannot find mouse client positions\");\r\n    var clientX = positions.clientX, clientY = positions.clientY;\r\n    // Get Position\r\n    var mouseX = clientX - x;\r\n    var mouseY = clientY - y;\r\n    var newPositionX = lockAxisX ? positionX : mouseX;\r\n    var newPositionY = lockAxisY ? positionY : mouseY;\r\n    // padding\r\n    var paddingValue = padding && scale >= minScale ? paddingSize : 0;\r\n    // If position didn't change\r\n    if (newPositionX === positionX && newPositionY === positionY)\r\n        return;\r\n    var calculatedPosition = checkPositionBounds(newPositionX, newPositionY, this.bounds, limitToBounds, paddingValue, wrapperComponent);\r\n    // Save panned position\r\n    handlePaddingAnimation.call(this, calculatedPosition.x, calculatedPosition.y);\r\n}\r\nfunction handlePanningAnimation() {\r\n    var _a = this.stateProvider, scale = _a.scale, minScale = _a.options.minScale, _b = _a.pan, disabled = _b.disabled, padding = _b.padding, panReturnAnimationTime = _b.panReturnAnimationTime, panReturnAnimationType = _b.panReturnAnimationType;\r\n    var isDisabled = disabled || scale < minScale || !padding;\r\n    if (isDisabled)\r\n        return;\r\n    var targetState = handlePanToBounds.call(this);\r\n    animateComponent.call(this, {\r\n        targetState: targetState,\r\n        speed: panReturnAnimationTime,\r\n        type: panReturnAnimationType,\r\n    });\r\n}\r\nfunction handlePanToBounds() {\r\n    var _a = this.stateProvider, positionX = _a.positionX, positionY = _a.positionY, scale = _a.scale, _b = _a.options, disabled = _b.disabled, limitToBounds = _b.limitToBounds, limitToWrapper = _b.limitToWrapper;\r\n    var wrapperComponent = this.state.wrapperComponent;\r\n    if (disabled)\r\n        return;\r\n    var _c = this.bounds, maxPositionX = _c.maxPositionX, minPositionX = _c.minPositionX, maxPositionY = _c.maxPositionY, minPositionY = _c.minPositionY;\r\n    var xChanged = positionX > maxPositionX || positionX < minPositionX;\r\n    var yChanged = positionY > maxPositionY || positionY < minPositionY;\r\n    var mouseX = positionX > maxPositionX\r\n        ? wrapperComponent.offsetWidth\r\n        : this.stateProvider.minPositionX || 0;\r\n    var mouseY = positionY > maxPositionY\r\n        ? wrapperComponent.offsetHeight\r\n        : this.stateProvider.minPositionY || 0;\r\n    var mousePosX = mouseX;\r\n    var mousePosY = mouseY;\r\n    var _d = handleCalculatePositions.call(this, mousePosX, mousePosY, scale, this.bounds, limitToBounds || limitToWrapper), x = _d.x, y = _d.y;\r\n    return {\r\n        scale: scale,\r\n        positionX: xChanged ? x : positionX,\r\n        positionY: yChanged ? y : positionY,\r\n    };\r\n}\r\nfunction handlePaddingAnimation(positionX, positionY) {\r\n    var padding = this.stateProvider.pan.padding;\r\n    if (!padding)\r\n        return;\r\n    this.stateProvider.positionX = positionX;\r\n    this.stateProvider.positionY = positionY;\r\n    this.applyTransformation();\r\n}\n\nfunction handleCalculateZoom(delta, step, disablePadding, getTarget, isBtnFunction) {\r\n    var _a = this.stateProvider, scale = _a.scale, _b = _a.options, maxScale = _b.maxScale, minScale = _b.minScale, _c = _a.scalePadding, size = _c.size, disabled = _c.disabled, wrapperComponent = _a.wrapperComponent;\r\n    var targetScale = null;\r\n    if (isBtnFunction) {\r\n        var scaleFactor = window.innerWidth * 0.0001;\r\n        var zoomFactor = delta < 0 ? 30 : 20;\r\n        targetScale =\r\n            scale + (step - step * scaleFactor) * delta * (scale / zoomFactor);\r\n    }\r\n    else {\r\n        var wrapperToWindowScale = 2 - window.innerWidth / wrapperComponent.offsetWidth;\r\n        var scaleFactor = Math.max(0.2, Math.min(0.99, wrapperToWindowScale));\r\n        var zoomFactor = 20;\r\n        targetScale =\r\n            scale + step * delta * ((scale - scale * scaleFactor) / zoomFactor);\r\n    }\r\n    if (getTarget)\r\n        return targetScale;\r\n    var paddingEnabled = disablePadding ? false : !disabled;\r\n    var newScale = checkZoomBounds(roundNumber(targetScale, 3), minScale, maxScale, size, paddingEnabled);\r\n    return newScale;\r\n}\r\nfunction handleCalculateBounds(newScale, limitToWrapper) {\r\n    var _a = this.stateProvider, wrapperComponent = _a.wrapperComponent, contentComponent = _a.contentComponent;\r\n    var _b = getComponentsSizes(wrapperComponent, contentComponent, newScale), wrapperWidth = _b.wrapperWidth, wrapperHeight = _b.wrapperHeight, newContentWidth = _b.newContentWidth, newDiffWidth = _b.newDiffWidth, newContentHeight = _b.newContentHeight, newDiffHeight = _b.newDiffHeight;\r\n    var bounds = calculateBoundingArea(wrapperWidth, newContentWidth, newDiffWidth, wrapperHeight, newContentHeight, newDiffHeight, limitToWrapper);\r\n    // Save bounds\r\n    this.bounds = bounds;\r\n    return bounds;\r\n}\r\n/**\r\n * Wheel zoom event\r\n */\r\nfunction handleWheelZoom(event) {\r\n    var _a = this.stateProvider, scale = _a.scale, contentComponent = _a.contentComponent, limitToBounds = _a.options.limitToBounds, _b = _a.scalePadding, size = _b.size, disabled = _b.disabled, _c = _a.wheel, step = _c.step, limitsOnWheel = _c.limitsOnWheel;\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    var delta = getDelta(event, null);\r\n    var newScale = handleCalculateZoom.call(this, delta, step, !event.ctrlKey);\r\n    // if scale not change\r\n    if (scale === newScale)\r\n        return;\r\n    var bounds = handleCalculateBounds.call(this, newScale, !limitsOnWheel);\r\n    var _d = wheelMousePosition(event, contentComponent, scale), mouseX = _d.mouseX, mouseY = _d.mouseY;\r\n    var isLimitedToBounds = limitToBounds && (disabled || size === 0 || limitsOnWheel);\r\n    var _e = handleCalculatePositions.call(this, mouseX, mouseY, newScale, bounds, isLimitedToBounds), x = _e.x, y = _e.y;\r\n    this.bounds = bounds;\r\n    this.stateProvider.previousScale = scale;\r\n    this.stateProvider.scale = newScale;\r\n    this.stateProvider.positionX = x;\r\n    this.stateProvider.positionY = y;\r\n    this.applyTransformation();\r\n}\r\n/**\r\n * Zoom for animations\r\n */\r\nfunction handleZoomToPoint(isDisabled, scale, mouseX, mouseY, event) {\r\n    var _a = this.stateProvider, contentComponent = _a.contentComponent, _b = _a.options, disabled = _b.disabled, minScale = _b.minScale, maxScale = _b.maxScale, limitToBounds = _b.limitToBounds, limitToWrapper = _b.limitToWrapper;\r\n    if (disabled || isDisabled)\r\n        return;\r\n    var newScale = checkZoomBounds(roundNumber(scale, 2), minScale, maxScale, null, null);\r\n    var bounds = handleCalculateBounds.call(this, newScale, limitToWrapper);\r\n    var mousePosX = mouseX;\r\n    var mousePosY = mouseY;\r\n    // if event is present - use it's mouse position\r\n    if (event) {\r\n        var mousePosition = wheelMousePosition(event, contentComponent, scale);\r\n        mousePosX = mousePosition.mouseX;\r\n        mousePosY = mousePosition.mouseY;\r\n    }\r\n    var _c = handleCalculatePositions.call(this, mousePosX, mousePosY, newScale, bounds, limitToBounds), x = _c.x, y = _c.y;\r\n    return { scale: newScale, positionX: x, positionY: y };\r\n}\r\nfunction handlePaddingAnimation$1() {\r\n    var _a = this.stateProvider, scale = _a.scale, wrapperComponent = _a.wrapperComponent, _b = _a.options, minScale = _b.minScale, limitToBounds = _b.limitToBounds, _c = _a.scalePadding, disabled = _c.disabled, animationTime = _c.animationTime, animationType = _c.animationType;\r\n    var isDisabled = disabled || scale >= minScale;\r\n    if (scale >= 1 || limitToBounds) {\r\n        // fire fit to bounds animation\r\n        handlePanningAnimation.call(this);\r\n    }\r\n    if (isDisabled)\r\n        return;\r\n    var mouseX = wrapperComponent.offsetWidth / 2;\r\n    var mouseY = wrapperComponent.offsetHeight / 2;\r\n    var targetState = handleZoomToPoint.call(this, false, minScale, mouseX, mouseY, null);\r\n    animateComponent.call(this, {\r\n        targetState: targetState,\r\n        speed: animationTime,\r\n        type: animationType,\r\n    });\r\n}\r\n/**\r\n * Button zoom events\r\n */\r\nfunction handleDoubleClick(event) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    var _a = this.stateProvider, contentComponent = _a.contentComponent, scale = _a.scale, _b = _a.doubleClick, disabled = _b.disabled, mode = _b.mode, step = _b.step, animationTime = _b.animationTime, animationType = _b.animationType;\r\n    if (mode === \"reset\") {\r\n        return resetTransformations.call(this, event, animationTime);\r\n    }\r\n    var delta = mode === \"zoomOut\" ? -1 : 1;\r\n    var newScale = handleCalculateZoom.call(this, delta, step, undefined, undefined, true);\r\n    var _c = wheelMousePosition(event, contentComponent, scale), mouseX = _c.mouseX, mouseY = _c.mouseY;\r\n    var targetState = handleZoomToPoint.call(this, disabled, newScale, mouseX, mouseY);\r\n    if (targetState.scale === scale)\r\n        return;\r\n    var targetScale = handleCalculateZoom.call(this, delta, step, true, undefined, true);\r\n    var time = getButtonAnimationTime(targetScale, newScale, animationTime);\r\n    animateComponent.call(this, {\r\n        targetState: targetState,\r\n        speed: time,\r\n        type: animationType,\r\n    });\r\n}\r\nfunction handleZoomControls(customDelta, customStep) {\r\n    var _a = this.stateProvider, scale = _a.scale, positionX = _a.positionX, positionY = _a.positionY, wrapperComponent = _a.wrapperComponent, zoomIn = _a.zoomIn, zoomOut = _a.zoomOut;\r\n    var wrapperWidth = wrapperComponent.offsetWidth;\r\n    var wrapperHeight = wrapperComponent.offsetHeight;\r\n    var mouseX = (wrapperWidth / 2 - positionX) / scale;\r\n    var mouseY = (wrapperHeight / 2 - positionY) / scale;\r\n    var newScale = handleCalculateZoom.call(this, customDelta, customStep, undefined, undefined, true);\r\n    var isZoomIn = newScale > scale;\r\n    var animationSpeed = isZoomIn\r\n        ? zoomIn.animationTime\r\n        : zoomOut.animationTime;\r\n    var animationType = isZoomIn ? zoomIn.animationType : zoomOut.animationType;\r\n    var isDisabled = isZoomIn ? zoomIn.disabled : zoomOut.disabled;\r\n    var targetState = handleZoomToPoint.call(this, isDisabled, newScale, mouseX, mouseY);\r\n    if (targetState.scale === scale)\r\n        return;\r\n    var targetScale = handleCalculateZoom.call(this, customDelta, customStep, true, undefined, true);\r\n    var time = getButtonAnimationTime(targetScale, newScale, animationSpeed);\r\n    animateComponent.call(this, {\r\n        targetState: targetState,\r\n        speed: time,\r\n        type: animationType,\r\n    });\r\n}\r\nfunction resetTransformations(animationSpeed) {\r\n    var _a = this.props.defaultValues, defaultScale = _a.defaultScale, defaultPositionX = _a.defaultPositionX, defaultPositionY = _a.defaultPositionY;\r\n    var _b = this.stateProvider, scale = _b.scale, positionX = _b.positionX, positionY = _b.positionY, reset = _b.reset, _c = _b.options, disabled = _c.disabled, limitToBounds = _c.limitToBounds, centerContent = _c.centerContent, limitToWrapper = _c.limitToWrapper;\r\n    if (disabled || reset.disabled)\r\n        return;\r\n    if (scale === defaultScale &&\r\n        positionX === defaultPositionX &&\r\n        positionY === defaultPositionY)\r\n        return;\r\n    var speed = typeof animationSpeed === \"number\" ? animationSpeed : reset.animationTime;\r\n    var targetScale = checkIsNumber(defaultScale, initialState.scale);\r\n    var newPositionX = checkIsNumber(defaultPositionX, initialState.positionX);\r\n    var newPositionY = checkIsNumber(defaultPositionY, initialState.positionY);\r\n    if ((limitToBounds && !limitToWrapper) || centerContent) {\r\n        var bounds = handleCalculateBounds.call(this, targetScale, limitToWrapper);\r\n        newPositionX = bounds.minPositionX;\r\n        newPositionY = bounds.minPositionY;\r\n    }\r\n    var targetState = {\r\n        scale: targetScale,\r\n        positionX: newPositionX,\r\n        positionY: newPositionY,\r\n    };\r\n    animateComponent.call(this, {\r\n        targetState: targetState,\r\n        speed: speed,\r\n        type: reset.animationType,\r\n    });\r\n}\r\nfunction getButtonAnimationTime(targetScale, newScale, time) {\r\n    return time * (newScale / targetScale);\r\n}\n\nfunction round(number, decimal) {\r\n    var roundNumber = Math.pow(10, decimal);\r\n    return Math.round(number * roundNumber) / roundNumber;\r\n}\r\nfunction getCurrentDistance(event) {\r\n    return getDistance(event.touches[0], event.touches[1]);\r\n}\r\nfunction checkIfInfinite(number) {\r\n    return number === Infinity || number === -Infinity;\r\n}\r\nfunction calculatePinchZoom(currentDistance, pinchStartDistance) {\r\n    var _a = this.stateProvider, _b = _a.options, minScale = _b.minScale, maxScale = _b.maxScale, _c = _a.scalePadding, size = _c.size, disabled = _c.disabled;\r\n    if (typeof pinchStartDistance !== \"number\" ||\r\n        typeof currentDistance !== \"number\")\r\n        return console.error(\"Pinch touches distance was not provided\");\r\n    if (currentDistance < 0)\r\n        return;\r\n    var touchProportion = currentDistance / pinchStartDistance;\r\n    var scaleDifference = touchProportion * this.pinchStartScale;\r\n    return checkZoomBounds(roundNumber(scaleDifference, 2), minScale, maxScale, size, !disabled);\r\n}\r\nfunction calculateMidpoint(event, scale, contentComponent) {\r\n    var contentRect = contentComponent.getBoundingClientRect();\r\n    var touches = event.touches;\r\n    var firstPointX = round(touches[0].clientX - contentRect.left, 5);\r\n    var firstPointY = round(touches[0].clientY - contentRect.top, 5);\r\n    var secondPointX = round(touches[1].clientX - contentRect.left, 5);\r\n    var secondPointY = round(touches[1].clientY - contentRect.top, 5);\r\n    return {\r\n        mouseX: (firstPointX + secondPointX) / 2 / scale,\r\n        mouseY: (firstPointY + secondPointY) / 2 / scale,\r\n    };\r\n}\r\nfunction handleZoomPinch(event) {\r\n    var _a = this.stateProvider, scale = _a.scale, _b = _a.options, limitToBounds = _b.limitToBounds, limitToWrapper = _b.limitToWrapper, _c = _a.scalePadding, disabled = _c.disabled, size = _c.size, limitsOnWheel = _a.wheel.limitsOnWheel, pinch = _a.pinch;\r\n    var contentComponent = this.state.contentComponent;\r\n    if (pinch.disabled || this.stateProvider.options.disabled)\r\n        return;\r\n    if (event.cancelable) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    }\r\n    // if one finger starts from outside of wrapper\r\n    if (this.pinchStartDistance === null)\r\n        return;\r\n    // Position transformation\r\n    var _d = calculateMidpoint(event, scale, contentComponent), mouseX = _d.mouseX, mouseY = _d.mouseY;\r\n    // if touches goes off of the wrapper element\r\n    if (checkIfInfinite(mouseX) || checkIfInfinite(mouseY))\r\n        return;\r\n    var currentDistance = getCurrentDistance(event);\r\n    var newScale = calculatePinchZoom.call(this, currentDistance, this.pinchStartDistance);\r\n    if (checkIfInfinite(newScale) || newScale === scale)\r\n        return;\r\n    // Get new element sizes to calculate bounds\r\n    var bounds = handleCalculateBounds.call(this, newScale, limitToWrapper);\r\n    // Calculate transformations\r\n    var isLimitedToBounds = limitToBounds && (disabled || size === 0 || limitsOnWheel);\r\n    var _e = handleCalculatePositions.call(this, mouseX, mouseY, newScale, bounds, isLimitedToBounds), x = _e.x, y = _e.y;\r\n    this.lastDistance = currentDistance;\r\n    this.stateProvider.positionX = x;\r\n    this.stateProvider.positionY = y;\r\n    this.stateProvider.scale = newScale;\r\n    this.stateProvider.previousScale = scale;\r\n    // update component transformation\r\n    this.applyTransformation();\r\n}\n\nvar throttleTime = 30;\r\nfunction velocityTimeSpeed(speed, animationTime) {\r\n    var velocityEqualToMove = this.stateProvider.pan.velocityEqualToMove;\r\n    if (velocityEqualToMove) {\r\n        return animationTime - animationTime / Math.max(1, speed);\r\n    }\r\n    return animationTime;\r\n}\r\nfunction handleEnableVelocity() {\r\n    this.setState({ startAnimation: false });\r\n}\r\nfunction handleFireVelocity() {\r\n    this.setState({ startAnimation: true });\r\n}\r\nfunction animateVelocity() {\r\n    var _this = this;\r\n    var _a = this.stateProvider, positionX = _a.positionX, positionY = _a.positionY, limitToBounds = _a.options.limitToBounds, _b = _a.pan, velocityBaseTime = _b.velocityBaseTime, lockAxisX = _b.lockAxisX, lockAxisY = _b.lockAxisY, velocityAnimationType = _b.velocityAnimationType, panReturnAnimationTime = _b.panReturnAnimationTime, panReturnAnimationType = _b.panReturnAnimationType, padding = _b.padding, paddingSize = _b.paddingSize, wrapperComponent = _a.wrapperComponent;\r\n    if (!this.mounted)\r\n        return;\r\n    if (!this.velocity || !this.bounds)\r\n        return handleDisableAnimation.call(this);\r\n    var _c = this.bounds, maxPositionX = _c.maxPositionX, minPositionX = _c.minPositionX, maxPositionY = _c.maxPositionY, minPositionY = _c.minPositionY;\r\n    var _d = this.velocity, velocityX = _d.velocityX, velocityY = _d.velocityY, velocity = _d.velocity;\r\n    var animationTime = velocityTimeSpeed.call(this, velocity, velocityBaseTime);\r\n    if (!animationTime) {\r\n        handlePanningAnimation.call(this);\r\n        return;\r\n    }\r\n    var targetX = velocityX;\r\n    var targetY = velocityY;\r\n    // pan return animation\r\n    var newAnimationTime = animationTime > panReturnAnimationTime\r\n        ? animationTime\r\n        : panReturnAnimationTime;\r\n    var paddingValue = padding ? paddingSize : 0;\r\n    var paddingX = wrapperComponent\r\n        ? (paddingValue * wrapperComponent.offsetWidth) / 100\r\n        : 0;\r\n    var paddingY = wrapperComponent\r\n        ? (paddingValue * wrapperComponent.offsetHeight) / 100\r\n        : 0;\r\n    var maxTargetX = maxPositionX + paddingX;\r\n    var minTargetX = minPositionX - paddingX;\r\n    var maxTargetY = maxPositionY + paddingY;\r\n    var minTargetY = minPositionY - paddingY;\r\n    var startPosition = checkPositionBounds(positionX, positionY, this.bounds, limitToBounds, paddingValue, wrapperComponent);\r\n    var startTime = new Date().getTime();\r\n    // animation start timestamp\r\n    animate.call(this, velocityAnimationType, newAnimationTime, function (step) {\r\n        var frameTime = new Date().getTime() - startTime;\r\n        var animationProgress = frameTime / panReturnAnimationTime;\r\n        var returnAnimation = availableAnimations[panReturnAnimationType];\r\n        var customReturnStep = returnAnimation(animationProgress);\r\n        if (frameTime > panReturnAnimationTime ||\r\n            customReturnStep > 1 ||\r\n            customReturnStep === Infinity ||\r\n            customReturnStep === -Infinity)\r\n            customReturnStep = 1;\r\n        var currentPositionX = getPosition(lockAxisX, targetX, step, customReturnStep, minPositionX, maxPositionX, limitToBounds, positionX, startPosition.x, minTargetX, maxTargetX);\r\n        var currentPositionY = getPosition(lockAxisY, targetY, step, customReturnStep, minPositionY, maxPositionY, limitToBounds, positionY, startPosition.y, minTargetY, maxTargetY);\r\n        if (positionX !== currentPositionX || positionY !== currentPositionY) {\r\n            // Save panned position\r\n            _this.stateProvider.positionX = currentPositionX;\r\n            _this.stateProvider.positionY = currentPositionY;\r\n            // apply animation changes\r\n            _this.applyTransformation();\r\n        }\r\n    });\r\n}\r\nfunction calculateVelocityStart(event) {\r\n    var _this = this;\r\n    var _a = this.stateProvider, scale = _a.scale, disabled = _a.options.disabled, _b = _a.pan, velocity = _b.velocity, velocitySensitivity = _b.velocitySensitivity, velocityActiveScale = _b.velocityActiveScale, velocityMinSpeed = _b.velocityMinSpeed, wrapperComponent = _a.wrapperComponent;\r\n    if (!velocity || velocityActiveScale >= scale || disabled)\r\n        return;\r\n    handleEnableVelocity.call(this);\r\n    var now = Date.now();\r\n    if (this.lastMousePosition) {\r\n        var position_1 = getClientPosition(event);\r\n        if (!position_1)\r\n            return console.error(\"No mouse or touch position detected\");\r\n        var clientX = position_1.clientX, clientY = position_1.clientY;\r\n        var distanceX = clientX - this.lastMousePosition.clientX;\r\n        var distanceY = clientY - this.lastMousePosition.clientY;\r\n        var interval = now - this.velocityTime;\r\n        var wrapperToWindowScaleX = 2 - wrapperComponent.offsetWidth / window.innerWidth;\r\n        var wrapperToWindowScaleY = 2 - wrapperComponent.offsetHeight / window.innerHeight;\r\n        var scaledX = 20 * Math.max(velocityMinSpeed, Math.min(2, wrapperToWindowScaleX));\r\n        var scaledY = 20 * Math.max(velocityMinSpeed, Math.min(2, wrapperToWindowScaleY));\r\n        var velocityX = (distanceX / interval) * velocitySensitivity * scale * scaledX;\r\n        var velocityY = (distanceY / interval) * velocitySensitivity * scale * scaledY;\r\n        var speed = distanceX * distanceX + distanceY * distanceY;\r\n        var velocity_1 = (Math.sqrt(speed) / interval) * velocitySensitivity;\r\n        if (this.velocity && velocity_1 < this.velocity.velocity && this.throttle)\r\n            return;\r\n        this.velocity = { velocityX: velocityX, velocityY: velocityY, velocity: velocity_1 };\r\n        // throttling\r\n        if (this.throttle)\r\n            clearTimeout(this.throttle);\r\n        this.throttle = setTimeout(function () {\r\n            if (_this.mounted)\r\n                _this.throttle = false;\r\n        }, throttleTime);\r\n    }\r\n    var position = getClientPosition(event);\r\n    this.lastMousePosition = position;\r\n    this.velocityTime = now;\r\n}\r\nfunction getPosition(isLocked, target, step, panReturnStep, minBound, maxBound, limitToBounds, offset, startPosition, minTarget, maxTarget) {\r\n    if (limitToBounds) {\r\n        if (startPosition > minBound && offset > maxBound) {\r\n            var newPosition = startPosition - (startPosition - maxBound) * panReturnStep;\r\n            if (newPosition > maxTarget)\r\n                return maxTarget;\r\n            if (newPosition < maxBound)\r\n                return maxBound;\r\n            return newPosition;\r\n        }\r\n        if (startPosition < minBound && offset < minBound) {\r\n            var newPosition = startPosition - (startPosition - minBound) * panReturnStep;\r\n            if (newPosition < minTarget)\r\n                return minTarget;\r\n            if (newPosition > minBound)\r\n                return minBound;\r\n            return newPosition;\r\n        }\r\n    }\r\n    if (isLocked)\r\n        return startPosition;\r\n    var offsetPosition = offset + target * step;\r\n    return boundLimiter(offsetPosition, minBound, maxBound, limitToBounds);\r\n}\n\n// We want to make event listeners non-passive, and to do so have to check\r\nfunction makePassiveEventOption(passive) {\r\n    return  passive;\r\n}\n\nvar propsList = [\r\n    \"previousScale\",\r\n    \"scale\",\r\n    \"positionX\",\r\n    \"positionY\",\r\n    \"defaultPositionX\",\r\n    \"defaultPositionY\",\r\n    \"defaultScale\",\r\n    \"onWheelStart\",\r\n    \"onWheel\",\r\n    \"onWheelStop\",\r\n    \"onPanningStart\",\r\n    \"onPanning\",\r\n    \"onPanningStop\",\r\n    \"onPinchingStart\",\r\n    \"onPinching\",\r\n    \"onPinchingStop\",\r\n    \"onZoomChange\",\r\n    \"options\",\r\n    \"wheel\",\r\n    \"scalePadding\",\r\n    \"pan\",\r\n    \"pinch\",\r\n    \"zoomIn\",\r\n    \"zoomOut\",\r\n    \"doubleClick\",\r\n    \"reset\",\r\n];\r\nvar getValidPropsFromObject = function (props) {\r\n    return Object.keys(props).reduce(function (acc, key) {\r\n        if (propsList.includes(key)) {\r\n            acc[key] = props[key];\r\n        }\r\n        return acc;\r\n    }, {});\r\n};\n\nvar Context = react__WEBPACK_IMPORTED_MODULE_0___default.a.createContext({});\r\nvar wheelStopEventTimer = null;\r\nvar wheelStopEventTime = 180;\r\nvar wheelAnimationTimer = null;\r\nvar wheelAnimationTime = 100;\r\nvar StateProvider = /** @class */ (function (_super) {\r\n    __extends(StateProvider, _super);\r\n    function StateProvider() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.mounted = true;\r\n        _this.state = {\r\n            wrapperComponent: undefined,\r\n            contentComponent: undefined,\r\n        };\r\n        _this.stateProvider = __assign(__assign(__assign(__assign({}, initialState), mergeProps(initialState, _this.props.dynamicValues)), _this.props.defaultValues), { previousScale: _this.props.dynamicValues.scale ||\r\n                _this.props.defaultValues.scale ||\r\n                initialState.scale });\r\n        _this.windowToWrapperScaleX = 0;\r\n        _this.windowToWrapperScaleY = 0;\r\n        // panning helpers\r\n        _this.startCoords = null;\r\n        _this.isDown = false;\r\n        // pinch helpers\r\n        _this.pinchStartDistance = null;\r\n        _this.lastDistance = null;\r\n        _this.pinchStartScale = null;\r\n        _this.distance = null;\r\n        _this.bounds = null;\r\n        // velocity helpers\r\n        _this.velocityTime = null;\r\n        _this.lastMousePosition = null;\r\n        _this.velocity = null;\r\n        _this.offsetX = null;\r\n        _this.offsetY = null;\r\n        _this.throttle = false;\r\n        // wheel helpers\r\n        _this.previousWheelEvent = null;\r\n        _this.lastScale = null;\r\n        // animations helpers\r\n        _this.animate = null;\r\n        _this.animation = null;\r\n        _this.maxBounds = null;\r\n        //////////\r\n        // Wheel\r\n        //////////\r\n        _this.handleWheel = function (event) {\r\n            var _a = _this.stateProvider, scale = _a.scale, _b = _a.wheel, disabled = _b.disabled, wheelEnabled = _b.wheelEnabled, touchPadEnabled = _b.touchPadEnabled;\r\n            var _c = _this.props, onWheelStart = _c.onWheelStart, onWheel = _c.onWheel, onWheelStop = _c.onWheelStop;\r\n            var _d = _this.state, wrapperComponent = _d.wrapperComponent, contentComponent = _d.contentComponent;\r\n            if (_this.isDown ||\r\n                disabled ||\r\n                _this.stateProvider.options.disabled ||\r\n                !wrapperComponent ||\r\n                !contentComponent)\r\n                return;\r\n            // ctrlKey detects if touchpad execute wheel or pinch gesture\r\n            if (!wheelEnabled && !event.ctrlKey)\r\n                return;\r\n            if (!touchPadEnabled && event.ctrlKey)\r\n                return;\r\n            // Wheel start event\r\n            if (!wheelStopEventTimer) {\r\n                _this.lastScale = scale;\r\n                handleDisableAnimation.call(_this);\r\n                handleCallback(onWheelStart, _this.getCallbackProps());\r\n            }\r\n            // Wheel event\r\n            handleWheelZoom.call(_this, event);\r\n            handleCallback(onWheel, _this.getCallbackProps());\r\n            _this.applyTransformation(null, null, null);\r\n            _this.previousWheelEvent = event;\r\n            // Wheel stop event\r\n            if (handleWheelStop(_this.previousWheelEvent, event, _this.stateProvider)) {\r\n                clearTimeout(wheelStopEventTimer);\r\n                wheelStopEventTimer = setTimeout(function () {\r\n                    if (!_this.mounted)\r\n                        return;\r\n                    handleCallback(onWheelStop, _this.getCallbackProps());\r\n                    wheelStopEventTimer = null;\r\n                }, wheelStopEventTime);\r\n            }\r\n            // cancel animation\r\n            _this.animate = false;\r\n            // fire animation\r\n            _this.lastScale = _this.stateProvider.scale;\r\n            clearTimeout(wheelAnimationTimer);\r\n            wheelAnimationTimer = setTimeout(function () {\r\n                if (!_this.mounted)\r\n                    return;\r\n                handlePaddingAnimation$1.call(_this, event);\r\n            }, wheelAnimationTime);\r\n        };\r\n        //////////\r\n        // Panning\r\n        //////////\r\n        _this.checkPanningTarget = function (event) {\r\n            var disableOnTarget = _this.stateProvider.pan.disableOnTarget;\r\n            return (disableOnTarget\r\n                .map(function (tag) { return tag.toUpperCase(); })\r\n                .includes(event.target.tagName) ||\r\n                disableOnTarget.find(function (element) {\r\n                    return event.target.classList.value.includes(element);\r\n                }));\r\n        };\r\n        _this.checkIsPanningActive = function (event) {\r\n            var disabled = _this.stateProvider.pan.disabled;\r\n            var _a = _this.state, wrapperComponent = _a.wrapperComponent, contentComponent = _a.contentComponent;\r\n            return (!_this.isDown ||\r\n                disabled ||\r\n                _this.stateProvider.options.disabled ||\r\n                (event.touches &&\r\n                    (event.touches.length !== 1 ||\r\n                        Math.abs(_this.startCoords.x - event.touches[0].clientX) < 1 ||\r\n                        Math.abs(_this.startCoords.y - event.touches[0].clientY) < 1)) ||\r\n                !wrapperComponent ||\r\n                !contentComponent);\r\n        };\r\n        _this.handleSetUpPanning = function (x, y) {\r\n            var _a = _this.stateProvider, positionX = _a.positionX, positionY = _a.positionY;\r\n            _this.isDown = true;\r\n            _this.startCoords = { x: x - positionX, y: y - positionY };\r\n            handleCallback(_this.props.onPanningStart, _this.getCallbackProps());\r\n        };\r\n        _this.handleStartPanning = function (event) {\r\n            var _a = _this.stateProvider, wrapperComponent = _a.wrapperComponent, scale = _a.scale, _b = _a.options, minScale = _b.minScale, maxScale = _b.maxScale, limitToWrapper = _b.limitToWrapper, disabled = _a.pan.disabled;\r\n            var target = event.target, touches = event.touches;\r\n            if (disabled ||\r\n                _this.stateProvider.options.disabled ||\r\n                (wrapperComponent && !wrapperComponent.contains(target)) ||\r\n                _this.checkPanningTarget(event) ||\r\n                scale < minScale ||\r\n                scale > maxScale)\r\n                return;\r\n            handleDisableAnimation.call(_this);\r\n            _this.bounds = handleCalculateBounds.call(_this, scale, limitToWrapper);\r\n            // Mobile points\r\n            if (touches && touches.length === 1) {\r\n                _this.handleSetUpPanning(touches[0].clientX, touches[0].clientY);\r\n            }\r\n            // Desktop points\r\n            if (!touches) {\r\n                _this.handleSetUpPanning(event.clientX, event.clientY);\r\n            }\r\n        };\r\n        _this.handlePanning = function (event) {\r\n            if (_this.isDown)\r\n                event.preventDefault();\r\n            if (_this.checkIsPanningActive(event))\r\n                return;\r\n            event.stopPropagation();\r\n            calculateVelocityStart.call(_this, event);\r\n            handlePanning.call(_this, event);\r\n            handleCallback(_this.props.onPanning, _this.getCallbackProps());\r\n        };\r\n        _this.handleStopPanning = function () {\r\n            if (_this.isDown) {\r\n                _this.isDown = false;\r\n                _this.animate = false;\r\n                _this.animation = false;\r\n                handleFireVelocity.call(_this);\r\n                handleCallback(_this.props.onPanningStop, _this.getCallbackProps());\r\n                var _a = _this.stateProvider, velocity = _a.pan.velocity, scale = _a.scale;\r\n                // start velocity animation\r\n                if (_this.velocity && velocity && scale > 1) {\r\n                    animateVelocity.call(_this);\r\n                }\r\n                else {\r\n                    // fire fit to bounds animation\r\n                    handlePanningAnimation.call(_this);\r\n                }\r\n            }\r\n        };\r\n        //////////\r\n        // Pinch\r\n        //////////\r\n        _this.handlePinchStart = function (event) {\r\n            var scale = _this.stateProvider.scale;\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            handleDisableAnimation.call(_this);\r\n            var distance = getDistance(event.touches[0], event.touches[1]);\r\n            _this.pinchStartDistance = distance;\r\n            _this.lastDistance = distance;\r\n            _this.pinchStartScale = scale;\r\n            _this.isDown = false;\r\n            handleCallback(_this.props.onPinchingStart, _this.getCallbackProps());\r\n        };\r\n        _this.handlePinch = function (event) {\r\n            _this.isDown = false;\r\n            handleZoomPinch.call(_this, event);\r\n            handleCallback(_this.props.onPinching, _this.getCallbackProps());\r\n        };\r\n        _this.handlePinchStop = function () {\r\n            if (typeof _this.pinchStartScale === \"number\") {\r\n                _this.isDown = false;\r\n                _this.velocity = null;\r\n                _this.lastDistance = null;\r\n                _this.pinchStartScale = null;\r\n                _this.pinchStartDistance = null;\r\n                handlePaddingAnimation$1.call(_this);\r\n                handleCallback(_this.props.onPinchingStop, _this.getCallbackProps());\r\n            }\r\n        };\r\n        //////////\r\n        // Touch Events\r\n        //////////\r\n        _this.handleTouchStart = function (event) {\r\n            var _a = _this.stateProvider, wrapperComponent = _a.wrapperComponent, contentComponent = _a.contentComponent, scale = _a.scale, _b = _a.options, disabled = _b.disabled, minScale = _b.minScale;\r\n            var touches = event.touches;\r\n            if (disabled || !wrapperComponent || !contentComponent || scale < minScale)\r\n                return;\r\n            handleDisableAnimation.call(_this);\r\n            if (touches && touches.length === 1)\r\n                return _this.handleStartPanning(event);\r\n            if (touches && touches.length === 2)\r\n                return _this.handlePinchStart(event);\r\n        };\r\n        _this.handleTouch = function (event) {\r\n            var _a = _this.stateProvider, pan = _a.pan, pinch = _a.pinch, options = _a.options;\r\n            if (options.disabled)\r\n                return;\r\n            if (!pan.disabled && event.touches.length === 1)\r\n                return _this.handlePanning(event);\r\n            if (!pinch.disabled && event.touches.length === 2)\r\n                return _this.handlePinch(event);\r\n        };\r\n        _this.handleTouchStop = function () {\r\n            _this.handleStopPanning();\r\n            _this.handlePinchStop();\r\n        };\r\n        //////////\r\n        // Controls\r\n        //////////\r\n        _this.zoomIn = function (event) {\r\n            var _a = _this.stateProvider, _b = _a.zoomIn, disabled = _b.disabled, step = _b.step, options = _a.options;\r\n            var _c = _this.state, wrapperComponent = _c.wrapperComponent, contentComponent = _c.contentComponent;\r\n            if (!event)\r\n                throw Error(\"Zoom in function requires event prop\");\r\n            if (disabled || options.disabled || !wrapperComponent || !contentComponent)\r\n                return;\r\n            handleZoomControls.call(_this, 1, step);\r\n        };\r\n        _this.zoomOut = function (event) {\r\n            var _a = _this.stateProvider, _b = _a.zoomOut, disabled = _b.disabled, step = _b.step, options = _a.options;\r\n            var _c = _this.state, wrapperComponent = _c.wrapperComponent, contentComponent = _c.contentComponent;\r\n            if (!event)\r\n                throw Error(\"Zoom out function requires event prop\");\r\n            if (disabled || options.disabled || !wrapperComponent || !contentComponent)\r\n                return;\r\n            handleZoomControls.call(_this, -1, step);\r\n        };\r\n        _this.handleDbClick = function (event) {\r\n            var _a = _this.stateProvider, options = _a.options, _b = _a.doubleClick, disabled = _b.disabled, step = _b.step;\r\n            var _c = _this.state, wrapperComponent = _c.wrapperComponent, contentComponent = _c.contentComponent;\r\n            if (!event)\r\n                throw Error(\"Double click function requires event prop\");\r\n            if (disabled || options.disabled || !wrapperComponent || !contentComponent)\r\n                return;\r\n            handleDoubleClick.call(_this, event, 1, step);\r\n        };\r\n        _this.setScale = function (newScale, speed, type) {\r\n            if (speed === void 0) { speed = 200; }\r\n            if (type === void 0) { type = \"easeOut\"; }\r\n            var _a = _this.stateProvider, positionX = _a.positionX, positionY = _a.positionY, scale = _a.scale, disabled = _a.options.disabled;\r\n            var _b = _this.state, wrapperComponent = _b.wrapperComponent, contentComponent = _b.contentComponent;\r\n            if (disabled || !wrapperComponent || !contentComponent)\r\n                return;\r\n            var targetState = {\r\n                positionX: positionX,\r\n                positionY: positionY,\r\n                scale: isNaN(newScale) ? scale : newScale,\r\n            };\r\n            animateComponent.call(_this, {\r\n                targetState: targetState,\r\n                speed: speed,\r\n                type: type,\r\n            });\r\n        };\r\n        _this.setPositionX = function (newPosX, speed, type) {\r\n            if (speed === void 0) { speed = 200; }\r\n            if (type === void 0) { type = \"easeOut\"; }\r\n            var _a = _this.stateProvider, positionX = _a.positionX, positionY = _a.positionY, scale = _a.scale, _b = _a.options, disabled = _b.disabled, transformEnabled = _b.transformEnabled;\r\n            var _c = _this.state, wrapperComponent = _c.wrapperComponent, contentComponent = _c.contentComponent;\r\n            if (disabled || !transformEnabled || !wrapperComponent || !contentComponent)\r\n                return;\r\n            var targetState = {\r\n                positionX: isNaN(newPosX) ? positionX : newPosX,\r\n                positionY: positionY,\r\n                scale: scale,\r\n            };\r\n            animateComponent.call(_this, {\r\n                targetState: targetState,\r\n                speed: speed,\r\n                type: type,\r\n            });\r\n        };\r\n        _this.setPositionY = function (newPosY, speed, type) {\r\n            if (speed === void 0) { speed = 200; }\r\n            if (type === void 0) { type = \"easeOut\"; }\r\n            var _a = _this.stateProvider, positionX = _a.positionX, scale = _a.scale, positionY = _a.positionY, _b = _a.options, disabled = _b.disabled, transformEnabled = _b.transformEnabled;\r\n            var _c = _this.state, wrapperComponent = _c.wrapperComponent, contentComponent = _c.contentComponent;\r\n            if (disabled || !transformEnabled || !wrapperComponent || !contentComponent)\r\n                return;\r\n            var targetState = {\r\n                positionX: positionX,\r\n                positionY: isNaN(newPosY) ? positionY : newPosY,\r\n                scale: scale,\r\n            };\r\n            animateComponent.call(_this, {\r\n                targetState: targetState,\r\n                speed: speed,\r\n                type: type,\r\n            });\r\n        };\r\n        _this.setTransform = function (newPosX, newPosY, newScale, speed, type) {\r\n            if (speed === void 0) { speed = 200; }\r\n            if (type === void 0) { type = \"easeOut\"; }\r\n            var _a = _this.stateProvider, positionX = _a.positionX, positionY = _a.positionY, scale = _a.scale, _b = _a.options, disabled = _b.disabled, transformEnabled = _b.transformEnabled;\r\n            var _c = _this.state, wrapperComponent = _c.wrapperComponent, contentComponent = _c.contentComponent;\r\n            if (disabled || !transformEnabled || !wrapperComponent || !contentComponent)\r\n                return;\r\n            var targetState = {\r\n                positionX: isNaN(newPosX) ? positionX : newPosX,\r\n                positionY: isNaN(newPosY) ? positionY : newPosY,\r\n                scale: isNaN(newScale) ? scale : newScale,\r\n            };\r\n            animateComponent.call(_this, {\r\n                targetState: targetState,\r\n                speed: speed,\r\n                type: type,\r\n            });\r\n        };\r\n        _this.resetTransform = function () {\r\n            var _a = _this.stateProvider.options, disabled = _a.disabled, transformEnabled = _a.transformEnabled;\r\n            if (disabled || !transformEnabled)\r\n                return;\r\n            resetTransformations.call(_this);\r\n        };\r\n        _this.setDefaultState = function () {\r\n            _this.animation = null;\r\n            _this.stateProvider = __assign(__assign(__assign({}, _this.stateProvider), { scale: initialState.scale, positionX: initialState.positionX, positionY: initialState.positionY }), _this.props.defaultValues);\r\n            _this.forceUpdate();\r\n        };\r\n        //////////\r\n        // Setters\r\n        //////////\r\n        _this.setWrapperComponent = function (wrapperComponent) {\r\n            _this.setState({ wrapperComponent: wrapperComponent });\r\n        };\r\n        _this.setContentComponent = function (contentComponent) {\r\n            _this.setState({ contentComponent: contentComponent }, function () {\r\n                var _a = _this.stateProvider, wrapperComponent = _a.wrapperComponent, _b = _a.options, centerContent = _b.centerContent, limitToBounds = _b.limitToBounds, limitToWrapper = _b.limitToWrapper, scale = _a.scale;\r\n                var _c = _this.props.defaultValues, positionX = _c.positionX, positionY = _c.positionY;\r\n                if ((limitToBounds && !limitToWrapper) ||\r\n                    (centerContent && !positionX && !positionY)) {\r\n                    var transform = \"translate(25%, 25%) scale(\" + scale + \")\";\r\n                    contentComponent.style.transform = transform;\r\n                    contentComponent.style.WebkitTransform = transform;\r\n                    // force update to inject state to the context\r\n                    _this.forceUpdate();\r\n                    var startTime_1 = new Date().getTime();\r\n                    var maxTimeWait_1 = 2000;\r\n                    var interval_1 = setInterval(function () {\r\n                        if (wrapperComponent.offsetWidth) {\r\n                            var bounds = handleCalculateBounds.call(_this, scale, false);\r\n                            _this.stateProvider.positionX = bounds.minPositionX;\r\n                            _this.stateProvider.positionY = bounds.minPositionY;\r\n                            _this.applyTransformation(null, null, null);\r\n                            clearInterval(interval_1);\r\n                            interval_1 = null;\r\n                        }\r\n                        else if (new Date().getTime() - startTime_1 > maxTimeWait_1) {\r\n                            clearInterval(interval_1);\r\n                            interval_1 = null;\r\n                        }\r\n                    }, 20);\r\n                }\r\n                else {\r\n                    _this.applyTransformation(null, null, null);\r\n                }\r\n            });\r\n        };\r\n        _this.applyTransformation = function (newScale, posX, posY) {\r\n            if (!_this.mounted)\r\n                return;\r\n            var contentComponent = _this.state.contentComponent;\r\n            var onZoomChange = _this.props.onZoomChange;\r\n            var _a = _this.stateProvider, previousScale = _a.previousScale, scale = _a.scale, positionX = _a.positionX, positionY = _a.positionY;\r\n            if (!contentComponent)\r\n                return console.error(\"There is no content component\");\r\n            var transform = \"translate(\" + (posX || positionX) + \"px, \" + (posY ||\r\n                positionY) + \"px) scale(\" + (newScale || scale) + \")\";\r\n            contentComponent.style.transform = transform;\r\n            contentComponent.style.WebkitTransform = transform;\r\n            // force update to inject state to the context\r\n            _this.forceUpdate();\r\n            if (onZoomChange && previousScale !== scale) {\r\n                handleCallback(onZoomChange, _this.getCallbackProps());\r\n            }\r\n        };\r\n        //////////\r\n        // Props\r\n        //////////\r\n        _this.getCallbackProps = function () { return getValidPropsFromObject(_this.stateProvider); };\r\n        return _this;\r\n    }\r\n    StateProvider.prototype.componentDidMount = function () {\r\n        var passiveOption = makePassiveEventOption(false);\r\n        // Panning on window to allow panning when mouse is out of wrapper\r\n        window.addEventListener(\"mousedown\", this.handleStartPanning, passiveOption);\r\n        window.addEventListener(\"mousemove\", this.handlePanning, passiveOption);\r\n        window.addEventListener(\"mouseup\", this.handleStopPanning, passiveOption);\r\n    };\r\n    StateProvider.prototype.componentWillUnmount = function () {\r\n        var passiveOption = makePassiveEventOption(false);\r\n        window.removeEventListener(\"mousedown\", this.handleStartPanning, passiveOption);\r\n        window.removeEventListener(\"mousemove\", this.handlePanning, passiveOption);\r\n        window.removeEventListener(\"mouseup\", this.handleStopPanning, passiveOption);\r\n        handleDisableAnimation.call(this);\r\n    };\r\n    StateProvider.prototype.componentDidUpdate = function (oldProps, oldState) {\r\n        var _a = this.state, wrapperComponent = _a.wrapperComponent, contentComponent = _a.contentComponent;\r\n        var dynamicValues = this.props.dynamicValues;\r\n        if (!oldState.contentComponent && contentComponent) {\r\n            this.stateProvider.contentComponent = contentComponent;\r\n        }\r\n        if (!oldState.wrapperComponent &&\r\n            wrapperComponent &&\r\n            wrapperComponent !== undefined) {\r\n            this.stateProvider.wrapperComponent = wrapperComponent;\r\n            this.windowToWrapperScaleX = getWindowScaleX(wrapperComponent);\r\n            this.windowToWrapperScaleY = getWindowScaleY(wrapperComponent);\r\n            // Zooming events on wrapper\r\n            var passiveOption = makePassiveEventOption(false);\r\n            wrapperComponent.addEventListener(\"wheel\", this.handleWheel, passiveOption);\r\n            wrapperComponent.addEventListener(\"dblclick\", this.handleDbClick, passiveOption);\r\n            wrapperComponent.addEventListener(\"touchstart\", this.handleTouchStart, passiveOption);\r\n            wrapperComponent.addEventListener(\"touchmove\", this.handleTouch, passiveOption);\r\n            wrapperComponent.addEventListener(\"touchend\", this.handleTouchStop, passiveOption);\r\n        }\r\n        // set bound for animations\r\n        if ((wrapperComponent && contentComponent) ||\r\n            oldProps.dynamicValues !== dynamicValues) {\r\n            this.maxBounds = handleCalculateBounds.call(this, this.stateProvider.scale, this.stateProvider.options.limitToWrapper);\r\n        }\r\n        // must be at the end of the update function, updates\r\n        if (oldProps.dynamicValues && oldProps.dynamicValues !== dynamicValues) {\r\n            this.animation = null;\r\n            this.stateProvider = __assign(__assign({}, this.stateProvider), mergeProps(this.stateProvider, dynamicValues));\r\n            this.applyTransformation(null, null, null);\r\n        }\r\n    };\r\n    StateProvider.prototype.render = function () {\r\n        var _a = this.state, wrapperComponent = _a.wrapperComponent, contentComponent = _a.contentComponent;\r\n        /**\r\n         * Context provider value\r\n         */\r\n        var value = {\r\n            loaded: Boolean(wrapperComponent && contentComponent),\r\n            state: this.getCallbackProps(),\r\n            dispatch: {\r\n                setScale: this.setScale,\r\n                setPositionX: this.setPositionX,\r\n                setPositionY: this.setPositionY,\r\n                zoomIn: this.zoomIn,\r\n                zoomOut: this.zoomOut,\r\n                setTransform: this.setTransform,\r\n                resetTransform: this.resetTransform,\r\n                setDefaultState: this.setDefaultState,\r\n            },\r\n            nodes: {\r\n                setWrapperComponent: this.setWrapperComponent,\r\n                setContentComponent: this.setContentComponent,\r\n            },\r\n        };\r\n        var children = this.props.children;\r\n        var content = typeof children === \"function\"\r\n            ? children(__assign(__assign({}, value.state), value.dispatch))\r\n            : children;\r\n        return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Context.Provider, { value: value }, content);\r\n    };\r\n    return StateProvider;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__[\"Component\"]));\n\nvar TransformWrapper = function (_a) {\r\n    var children = _a.children, defaultPositionX = _a.defaultPositionX, defaultPositionY = _a.defaultPositionY, defaultScale = _a.defaultScale, onWheelStart = _a.onWheelStart, onWheel = _a.onWheel, onWheelStop = _a.onWheelStop, onPanningStart = _a.onPanningStart, onPanning = _a.onPanning, onPanningStop = _a.onPanningStop, onPinchingStart = _a.onPinchingStart, onPinching = _a.onPinching, onPinchingStop = _a.onPinchingStop, onZoomChange = _a.onZoomChange, rest = __rest(_a, [\"children\", \"defaultPositionX\", \"defaultPositionY\", \"defaultScale\", \"onWheelStart\", \"onWheel\", \"onWheelStop\", \"onPanningStart\", \"onPanning\", \"onPanningStop\", \"onPinchingStart\", \"onPinching\", \"onPinchingStop\", \"onZoomChange\"]);\r\n    var props = __assign({}, rest);\r\n    if (props.options && props.options.limitToWrapper) {\r\n        props.options.limitToBounds = true;\r\n    }\r\n    return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(StateProvider, { defaultValues: deleteUndefinedProps({\r\n            positionX: defaultPositionX,\r\n            positionY: defaultPositionY,\r\n            scale: defaultScale,\r\n        }), dynamicValues: deleteUndefinedProps(getValidPropsFromObject(props)), onWheelStart: onWheelStart, onWheel: onWheel, onWheelStop: onWheelStop, onPanningStart: onPanningStart, onPanning: onPanning, onPanningStop: onPanningStop, onPinchingStart: onPinchingStart, onPinching: onPinching, onPinchingStop: onPinchingStop, onZoomChange: onZoomChange }, children));\r\n};\n\nfunction styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar css = \".TransformComponent-module_container__3NwNd {\\n  position: relative;\\n  width: fit-content;\\n  height: fit-content;\\n  overflow: hidden;\\n  -webkit-touch-callout: none; /* iOS Safari */\\n  -webkit-user-select: none; /* Safari */\\n  -khtml-user-select: none; /* Konqueror HTML */\\n  -moz-user-select: none; /* Firefox */\\n  -ms-user-select: none; /* Internet Explorer/Edge */\\n  user-select: none;\\n  margin: 0;\\n  padding: 0;\\n}\\n.TransformComponent-module_content__TZU5O {\\n  display: flex;\\n  flex-wrap: wrap;\\n  width: fit-content;\\n  height: fit-content;\\n  margin: 0;\\n  padding: 0;\\n  transform-origin: 0% 0%;\\n}\\n.TransformComponent-module_content__TZU5O img {\\n  pointer-events: none;\\n}\\n\";\nvar styles = {\"container\":\"TransformComponent-module_container__3NwNd\",\"content\":\"TransformComponent-module_content__TZU5O\"};\nstyleInject(css);\n\nvar TransformComponent = /** @class */ (function (_super) {\r\n    __extends(TransformComponent, _super);\r\n    function TransformComponent() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.wrapperRef = react__WEBPACK_IMPORTED_MODULE_0___default.a.createRef();\r\n        _this.contentRef = react__WEBPACK_IMPORTED_MODULE_0___default.a.createRef();\r\n        return _this;\r\n    }\r\n    TransformComponent.prototype.componentDidMount = function () {\r\n        var nodes = this.context.nodes;\r\n        nodes.setWrapperComponent(this.wrapperRef.current);\r\n        nodes.setContentComponent(this.contentRef.current);\r\n    };\r\n    TransformComponent.prototype.render = function () {\r\n        var children = this.props.children;\r\n        var _a = this.context.state, positionX = _a.positionX, positionY = _a.positionY, scale = _a.scale, _b = _a.options, wrapperClass = _b.wrapperClass, contentClass = _b.contentClass;\r\n        var style = {\r\n            WebkitTransform: \"translate(\" + positionX + \"px, \" + positionY + \"px) scale(\" + scale + \")\",\r\n            transform: \"translate(\" + positionX + \"px, \" + positionY + \"px) scale(\" + scale + \")\",\r\n        };\r\n        return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { ref: this.wrapperRef, className: \"react-transform-component \" + styles.container + \" \" + wrapperClass },\r\n            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { ref: this.contentRef, className: \"react-transform-element \" + styles.content + \" \" + contentClass, style: style }, children)));\r\n    };\r\n    return TransformComponent;\r\n}(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component));\r\nTransformComponent.contextType = Context;\n\n\n//# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-zoom-pan-pinch/dist/index.es.js\n");

/***/ })

})