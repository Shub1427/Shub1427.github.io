{"version":3,"file":"static/webpack/static/development/pages/_app.js.39d20bfbf107f83f4fcd.hot-update.js","sources":["webpack:///./components/code-block.tsx"],"sourcesContent":["import React from 'react';\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport jsx from 'react-syntax-highlighter/dist/cjs/languages/prism/jsx';\nimport rust from 'react-syntax-highlighter/dist/cjs/languages/prism/rust';\nimport bash from 'react-syntax-highlighter/dist/cjs/languages/prism/bash';\n// Remove this, once `react-syntax-highlighter` is updated to support `toml` lang\nimport toml from 'refractor/lang/toml';\nimport atomDark from 'react-syntax-highlighter/dist/cjs/styles/prism/atom-dark';\nimport { makeStyles } from '@material-ui/core';\n\nSyntaxHighlighter.registerLanguage('js', jsx);\nSyntaxHighlighter.registerLanguage('rust', rust);\nSyntaxHighlighter.registerLanguage('toml', toml);\nSyntaxHighlighter.registerLanguage('bash', bash);\n\nexport interface ICodeBlockProps {\n  showLines?: boolean;\n  className: string;\n  children: React.ReactChild;\n}\n\nconst useStyles = makeStyles({\n  root: {\n    marginBottom: 16,\n  },\n});\n\nexport default function CodeBlock({\n  children,\n  className,\n  showLines = true,\n}: ICodeBlockProps) {\n  const classes = useStyles();\n  const details = className.replace(/language-/, '');\n  let [language, linesEnabled] = details.split('.');\n  linesEnabled = /true/i.test(linesEnabled);\n  switch (language) {\n    case 'rs':\n      language = 'rust';\n      break;\n    case 'sh':\n    case 'bash':\n      language = 'bash';\n      break;\n  }\n  return (\n    <div className={classes.root}>\n      <SyntaxHighlighter\n        language={language}\n        style={atomDark}\n        showLineNumbers={linesEnabled || showLines}\n      >\n        {children}\n      </SyntaxHighlighter>\n    </div>\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAQA;AACA;AACA;AADA;AADA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAPA;AACA;AAQA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;A","sourceRoot":""}