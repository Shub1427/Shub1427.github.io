(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{"7ljp":function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return m}));var a=t("q1tI"),r=t.n(a);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=r.a.createContext({}),b=function(e){var n=r.a.useContext(s),t=n;return e&&(t="function"===typeof e?e(n):o({},n,{},e)),t},u=function(e){var n=b(e.components);return r.a.createElement(s.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},f=Object(a.forwardRef)((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=b(t),p=a,f=u["".concat(c,".").concat(p)]||u[p]||d[p]||i;return t?r.a.createElement(f,o({ref:n},s,{components:t})):r.a.createElement(f,o({ref:n},s))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"===typeof e||a){var i=t.length,c=new Array(i);c[0]=f;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o[p]="string"===typeof e?e:a,c[1]=o;for(var s=2;s<i;s++)c[s]=t[s];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,t)}f.displayName="MDXCreateElement"},"8IhA":function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return f}));var a=t("wx14"),r=t("Ff2n"),i=t("q1tI"),c=t.n(i),o=t("7ljp"),l=(c.a.createElement,function(e){return function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),Object(o.b)("div",n)}}),s=l("PolkaContainer"),b=l("NoteSubtitle"),u=l("Image"),p={},d="wrapper";function f(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(o.b)(d,Object(a.a)({},p,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)(s,{mdxType:"PolkaContainer"},Object(o.b)("h1",null,"Display Window"),Object(o.b)(b,{date:new Date("2020/04/26"),totalWords:520,mdxType:"NoteSubtitle"}),Object(o.b)("p",null,"Vulkan is a very low-level spec, which intends to keep as less overhead of code as it can.\n",Object(o.b)("inlineCode",{parentName:"p"},"gfx-hal")," is a library which closely resembles the Vulkan specs (not entirely though), to provide\nthe developers with clean APIs, that are very similar to Vulkan specs. Also, ",Object(o.b)("inlineCode",{parentName:"p"},"gfx-hal")," provides\nmultiple graphics backends to make our code cross-platform compatible."),Object(o.b)("p",null,Object(o.b)("em",{parentName:"p"},"Code for this Note, can be found ",Object(o.b)("a",Object(a.a)({parentName:"em"},{href:"https://github.com/Shub1427/rustschool/blob/master/gui/gfx-rs/src/001-show_window/main.rs"}),"here"),"\nParts of the code would be referenced here, to make things clear.")),Object(o.b)("h2",null,"Vulkan Instance and Surface"),Object(o.b)(u,{alt:"Vulkan Flow Image",src:"https://user-images.githubusercontent.com/11786283/77244041-e4bf5680-6c36-11ea-96a1-2be7bd71ccbd.png",placeholder:"https://user-images.githubusercontent.com/11786283/80305144-bce48500-87d8-11ea-9832-4baaaf8ce41f.png",mdxType:"Image"}),Object(o.b)("p",null,"This Tutorial is inspired from ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://vulkan.lunarg.com/doc/sdk/1.2.131.2/linux/tutorial/html/index.html"}),"LunarG Vulkan Tutorial"),",\nwhich is written in ",Object(o.b)("inlineCode",{parentName:"p"},"C++"),". I am trying to learn ",Object(o.b)("inlineCode",{parentName:"p"},"Rust")," and converting that tutorial into ",Object(o.b)("inlineCode",{parentName:"p"},"Rust"),",\nusing ",Object(o.b)("inlineCode",{parentName:"p"},"gfx-hal")," library, which is a wrapper over Vulkan Specs."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Application: is what we will build using ",Object(o.b)("inlineCode",{parentName:"li"},"gfx-hal")),Object(o.b)("li",{parentName:"ul"},"Loader: here refers to ",Object(o.b)("inlineCode",{parentName:"li"},"gfx-hal")," and ",Object(o.b)("inlineCode",{parentName:"li"},"gfx-backend-vulkan")," libraries. An isntance of\n",Object(o.b)("inlineCode",{parentName:"li"},"gfx-backend-vulkan")," inititalizes a Loader. Creating an instance, intializes the loader."),Object(o.b)("li",{parentName:"ul"},"Layers: is something advanced, and am not sure when or if I will talk about it at-all.")),Object(o.b)("h2",null,"Backend"),Object(o.b)(u,{alt:"GFX Hal Backends",src:"https://user-images.githubusercontent.com/11786283/77244047-03255200-6c37-11ea-885d-2d8b981bb8a8.png",placeholder:"https://user-images.githubusercontent.com/11786283/80305177-eb626000-87d8-11ea-9d40-0a632affdd2f.png",mdxType:"Image"}),Object(o.b)("p",null,"Backends are specific to what GPU u have and what specs it supports."),Object(o.b)("p",null,"Vulkan Backend is cross-compatible and has support in Linux/Widnows, on AMD, Intel, NVidia etc."),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Apple stays out, and I hate this thing about it, it doesn't support Vulkan, and has speicifc\nbackend in Metal. Though ",Object(o.b)("inlineCode",{parentName:"p"},"gfx-hal")," has ",Object(o.b)("inlineCode",{parentName:"p"},"metal")," backend as well.")),Object(o.b)("p",null,"To work with ",Object(o.b)("inlineCode",{parentName:"p"},"gfx-hal")," we need to create an instance of a specific Backend which can be controlled using Rust Feature Configurations."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-rs"}),'#[cfg(feature = "dx12")]\nuse gfx_backend_dx12 as back;\n#[cfg(feature = "metal")]\nuse gfx_backend_metal as back;\n#[cfg(feature = "vulkan")]\nuse gfx_backend_vulkan as back;\n')),Object(o.b)("h2",null,"Creating Window instance"),Object(o.b)("p",null,"Now let's come back to our code. In real world, to draw anything we need a canvas, right. Similary, in\nGraphics to draw anything, we need a OS Window. Later to bind OS Window with GPU draw calls, we will be\nneeding a ",Object(o.b)("inlineCode",{parentName:"p"},"surface")," instance. Creation of Window in Rust is done using ",Object(o.b)("inlineCode",{parentName:"p"},"winit")," library, which again is\ncross-platform. It requires two major steps to display a blank window:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Window Dimensions"),Object(o.b)("li",{parentName:"ul"},"Event Loop, that will help us to know when to redraw, w.r.t CPU and GPU capabilities",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"We will discuss this on some other thread.")))),Object(o.b)("h2",null,"Instance"),Object(o.b)("p",null,"Vulkan instance is the starting point to work with Vulkan. A Vulkan instance actually takes the name\nof Application, and provides us with various APIs, specially to ",Object(o.b)("inlineCode",{parentName:"p"},"enumerate_devices"),"."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-rs"}),'// create(application_name, application_version);\nlet instance = back::Instance::create("Backend Instance", 1)\n  .expect("Failed to create an instance!");\n')),Object(o.b)("h2",null,"Surface"),Object(o.b)("p",null,"Vulkan requires a canvas or ",Object(o.b)("inlineCode",{parentName:"p"},"surface")," to draw things into and a ",Object(o.b)("inlineCode",{parentName:"p"},"surface")," can only exist inside\na OS App Window. Usually we will be using a 3rd-party module to create OS specific Window instances,\nlike ",Object(o.b)("inlineCode",{parentName:"p"},"winit"),", and thw window instance to create a ",Object(o.b)("inlineCode",{parentName:"p"},"surface"),"."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-rs"}),'// `wb` is `winit` window_builder.\nlet window = wb.build(event_loop).unwrap();\n\n// Create the Surface:\nlet surface = unsafe {\n  instance\n    .create_surface(&window)\n    .expect("Failed to create a surface!")\n};****\n'))))}f.isMDXComponent=!0},Ff2n:function(e,n,t){"use strict";t.d(n,"a",(function(){return r}));var a=t("zLVn");function r(e,n){if(null==e)return{};var t,r,i=Object(a.a)(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}},Qetd:function(e,n,t){"use strict";var a=Object.assign.bind(Object);e.exports=a,e.exports.default=e.exports},mBy9:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/gfx-hal-initials/display-window",function(){return t("8IhA")}])},wx14:function(e,n,t){"use strict";function a(){return(a=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e}).apply(this,arguments)}t.d(n,"a",(function(){return a}))},zLVn:function(e,n,t){"use strict";function a(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}t.d(n,"a",(function(){return a}))}},[["mBy9",0,1]]]);