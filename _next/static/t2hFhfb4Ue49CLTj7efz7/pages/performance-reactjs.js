(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{"7ljp":function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return h}));var r=n("q1tI"),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),p=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"===typeof e?e(t):l({},t,{},e)),n},u=function(e){var t=p(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},b="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=p(n),b=r,d=u["".concat(i,".").concat(b)]||u[b]||m[b]||o;return n?a.a.createElement(d,l({ref:t},s,{components:n})):a.a.createElement(d,l({ref:t},s))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"===typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[b]="string"===typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},Ff2n:function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n("zLVn");function a(e,t){if(null==e)return{};var n,a,o=Object(r.a)(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}},IWf1:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return f}));var r=n("wx14"),a=n("Ff2n"),o=n("q1tI"),i=n.n(o),l=n("7ljp"),c=n("k333"),s=(i.a.createElement,function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),Object(l.b)("div",t)}}),p=s("PolkaContainer"),u=s("H1"),b=s("Blockquote"),m=s("Link"),d={},h="wrapper";function f(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(l.b)(h,Object(r.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)(p,{mdxType:"PolkaContainer"},Object(l.b)(u,{updatedAt:c.b["performance-reactjs"].updatedAt,wordCount:971,mdxType:"H1"},"Improve Performance in JS and ReactJS"),Object(l.b)(b,{type:"warn",mdxType:"Blockquote"},"This blog is a ",Object(l.b)("b",null,"Work in Progress"),", and I am hoping to work on it part by part when I would have already worked on it once. Parts of the doc are complete as I have worked on it before and can asure, that they will surely benefit in Improving Performance.",Object(l.b)("br",null),Object(l.b)("br",null),Object(l.b)("p",null,"  \u26a0\ufe0f ","\xa0","For now, read it at your own risk!!!")),Object(l.b)("h2",null,"References to take a look at:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(r.a)({parentName:"li"},{href:"https://addyosmani.com/blog/profiling-react-js/"}),"Addy Osmani's Profiling ReactJS")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(r.a)({parentName:"li"},{href:"https://medium.com/@paularmstrong/twitter-lite-and-high-performance-react-progressive-web-apps-at-scale-d28a00e780a3"}),"Twitter's Blog on their Performance Improvements for Twitter Lite")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(r.a)({parentName:"li"},{href:"https://medium.com/@jayphelps/backpressure-explained-the-flow-of-data-through-software-2350b3e77ce7"}),"Handle Too many Socket events creating Backpressure")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(r.a)({parentName:"li"},{href:"https://reactjs.org/docs/optimizing-performance.html"}),"React Optimizing Performance"))),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"These guides were enough to boost my app performance."),Object(l.b)("p",{parentName:"blockquote"},"Backpressure is something that is not exactly related to ReactJS\nand can occur to any JS app. To handle Backpressure, we have various ways,\none of which I used in our Project.")),Object(l.b)("hr",null),Object(l.b)("h2",null,"React Profiling"),Object(l.b)("p",null,"Ok. So, if you are lazy and don't want to put too much effort on\nfinding Performance glitches, Profiling is the best option."),Object(l.b)("p",null,"React DevTools provides a developer with ",Object(l.b)("inlineCode",{parentName:"p"},"Profiler"),", which provides\nre-redering data of components in Flame-Graph. This flame graph was\ndeveloped by ",Object(l.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/bvaughn"}),"Brian Vaughn"),", creator\nof ",Object(l.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/bvaughn/react-window"}),"react-window"),", which\nhe is using to virtualize the flame graphs as well."),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"Bt default, you do not need to\n",Object(l.b)("inlineCode",{parentName:"p"},'import { unstable_Profiler as Profiler } from "react";'),"\nas for v16.4+ (I guess), Profiler is by default added to development\nbuilds. If you do face that the Profiler in Devtools is not working,\ntry importing the above Profiler Component, and wrap your Root Component\nwith ",Object(l.b)("inlineCode",{parentName:"p"},"<Profiler />"),".")),Object(l.b)("p",null,"These Flame Graphs are easy to understand, and pin-points which Components\nare getting rendered unnecessarily."),Object(l.b)("p",null,"Once you get to know which Components are getting re-rendered, due to some\nprop changes that shouldn't re-render them, you can use:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"shouldComponentUpdate")," - is a React Component Lifecycle Method to render\nthe component only according to your own logic. Apply some shallow\ncomparisons here, and you are good to go."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"React.memo")," - If you are not using Class Components, ",Object(l.b)("inlineCode",{parentName:"li"},"React.memo")," is\nrequired to make your Functional component act as PureComponents. Also,\n",Object(l.b)("inlineCode",{parentName:"li"},"React.memo")," takes function as argument, where you can shallow compare\nprevious props with new props to decide when to render.")),Object(l.b)("p",null,"Above steps helps ",Object(l.b)("em",{parentName:"p"},"memoizing")," React Components, but that's not enough if you\nuse Connected (or Container) Components. Vanilla Connected Components can\nhave ",Object(l.b)("inlineCode",{parentName:"p"},"mapStateToProps")," that affect the render cycle, whenever some state\nchanges which is not even mapped to connected component."),Object(l.b)("br",null),Object(l.b)("p",null,"For such cases, simplest solution is to use Selectors with Redux, specially\n",Object(l.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/reduxjs/reselect"}),"ReSelect"),"."),Object(l.b)("p",null,"If you don't want to introduce ",Object(l.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/reduxjs/reselect"}),"ReSelect"),", and do things by yourself, then you need to create your own\nselectors and memoize them. Best and less complex library to memoize\nfunctions is ",Object(l.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/alexreardon/memoize-one"}),"memoize-one"),"."),Object(l.b)("br",null),Object(l.b)("p",null,"Combining both of the above solutions, will improve your app performance\na lot. For me it gave a 50% increase in performance."),Object(l.b)("hr",null),Object(l.b)("h2",null,"Defer Rendering When Mounting & Unmounting Many Components"),Object(l.b)("p",null,"You can find a better explaination ",Object(l.b)("a",Object(r.a)({parentName:"p"},{href:"https://medium.com/@paularmstrong/twitter-lite-and-high-performance-react-progressive-web-apps-at-scale-d28a00e780a3"}),"here")),Object(l.b)("br",null),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"TLDR;")," Deferring a Render just means call any state updates behind\n",Object(l.b)("inlineCode",{parentName:"p"},"requestAnimationFrame"),". What this will do is put the load off your\nBrowser's main thread for sometime and allow the user to intract with UI\nwithout jankiness."),Object(l.b)("hr",null),Object(l.b)("h2",null,"Long lists needs to be Virtualization or Pagination"),Object(l.b)("p",null,"Lists can be one of the bottlenecks in performance, if not done right.\nMost of the UI libraries out there are vanilla ",Object(l.b)("inlineCode",{parentName:"p"},"<ul />")," lists."),Object(l.b)("p",null,"Using 3rd-party Virtualization libs like ",Object(l.b)("inlineCode",{parentName:"p"},"react-window")," or\n",Object(l.b)("inlineCode",{parentName:"p"},"react-vitualized")," could help improve performance as well as\nFPS of Scrolling."),Object(l.b)("p",null,"You can get a very detailed explaination of what virtualization is, and\nwhat hurdles we need to resolve while building a Virtualized List,\n",Object(l.b)("a",Object(r.a)({parentName:"p"},{href:"https://developers.google.com/web/updates/2016/07/infinite-scroller"}),"here @ Complexities of Infinite Scroller"),"."),Object(l.b)("p",null,"I think I will try to build a virtualized list in Rust. Let's see!!! ",Object(l.b)("img",{class:"emoji",title:":bowtie:",alt:":bowtie:",src:"https://github.githubassets.com/images/icons/emoji/bowtie.png",width:"20",height:"20",align:"absmiddle"})),Object(l.b)("br",null),Object(l.b)("p",null,"Virtualization is difficult to integrate in ",Object(l.b)("em",{parentName:"p"},"Chat apps"),", where the list\nneeds to be scrolled bottom-up and can have dynamic height for each\nlist item."),Object(l.b)("p",null,"So my implementation was to use a simple non virtualized list (relatively\npositioned list items). Most of the ",Object(l.b)("em",{parentName:"p"},"Chat apps")," in real world, like in\nFacebook or in Hangouts, all use the same principle. They paginate the\nchat with infinite scroll and use relatively poisitioned list."),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"Hope to create a separate blog, for Infinite Scrollable\nList using ",Object(l.b)("a",Object(r.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API"}),"IntersectionObserver"),",\nwhich I worked on while working on Chat App at\n",Object(l.b)("a",Object(r.a)({parentName:"p"},{href:"https://www.upgrad.com/"}),"upGrad"),".")),Object(l.b)("hr",null),Object(l.b)("h2",null,"Buffering Events that change state in less than Animation Frame"),Object(l.b)(b,{type:"warn",mdxType:"Blockquote"},"I would suggest you to read this blog before going forward ",Object(l.b)(m,{href:"https://medium.com/@jayphelps/backpressure-explained-the-flow-of-data-through-software-2350b3e77ce7",target:"_blank",rel:"noopener noreferrer",mdxType:"Link"},"Handle Too many Socket events creating Backpressure"),", as it elaborates on basic concepts of Back Buffering."),Object(l.b)("p",null,"For details on implementation check this","\xa0",Object(l.b)(m,{href:c.b["upload-client-logs"].link,mdxType:"Link"},"blog"),"."),Object(l.b)("p",null,"TLDR; I am giving a small reference on how to implement buffering of events\nusing ",Object(l.b)("inlineCode",{parentName:"p"},"rxjs"),"."),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"rxjs.fromEvent(socket, 'message').pipe(\n  () => source => source.pipe(\n    rxjs.operators.buffer(source.pipe(waitForAnimationFrame()))\n  ),\n);\n")),Object(l.b)("hr",null),Object(l.b)("h2",null,"TODOs:"),Object(l.b)("p",null,"I want to add more stuff here, regarding performance research\nwhich I am still exploring:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Using Pupeteer to get stats on performance"),Object(l.b)("li",{parentName:"ul"},"Bundle Size optimizations, using ",Object(l.b)("inlineCode",{parentName:"li"},"webpack")),Object(l.b)("li",{parentName:"ul"},"Preloading/Lazy loading scripts and css."),Object(l.b)("li",{parentName:"ul"},"Prefetching/Lazy Loading images"),Object(l.b)("li",{parentName:"ul"},"SSR is also a way to optimize your performance, but I don't want to\ncover that."),Object(l.b)("li",{parentName:"ul"},"Statically serve your pages. This is something I am unaware of how to do\nit manually, but to support this feature, I suggest you to use ",Object(l.b)("inlineCode",{parentName:"li"},"NextJS"),"\nand do not use ",Object(l.b)("inlineCode",{parentName:"li"},"getInitialProps")," for Page components, and NextJS spits\nout static htmls for React App on build."))))}f.isMDXComponent=!0},Q88C:function(e,t,n){"use strict";var r;n.d(t,"a",(function(){return r})),function(e){e.TUTORIAL="tutorial",e.PROJECT="project",e.RESEARCH="research",e.RUST="rust",e.JS="javascript",e.REACT="reactjs"}(r||(r={}))},Qetd:function(e,t,n){"use strict";var r=Object.assign.bind(Object);e.exports=r,e.exports.default=e.exports},Rpyx:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/performance-reactjs",function(){return n("IWf1")}])},k333:function(e,t,n){"use strict";n.d(t,"b",(function(){return a})),n.d(t,"a",(function(){return o}));var r=n("Q88C"),a={"performance-reactjs":{key:"performance-reactjs",link:"/performance-reactjs",title:"Performance Improvements in JS and ReactJS",description:"Recent Performance related findings of mine, which I am jotting down here for later reference",tags:[r.a.RESEARCH,r.a.JS,r.a.REACT],createdAt:new Date("2020/05/07 09:15:00"),updatedAt:new Date("2020/05/07 09:15:00"),isPublished:!0},"upload-client-logs":{key:"upload-client-logs",link:"/upload-client-logs",title:"Client Browser Log to your Server",description:"Sometimes (like to get details on performance) there is a requirement to log data       from end-user's browser to you own servers, for which this note will talk about.",tags:[r.a.PROJECT,r.a.JS,r.a.REACT],createdAt:new Date("2020/04/29 08:30:00"),updatedAt:new Date("2020/05/03 23:30:00"),isPublished:!0},"word-counter":{key:"word-counter",link:"/word-counter",title:"Word Counter in Rust",description:"Just a fun bin script for my project, to count words in my MDX files.",tags:[r.a.PROJECT,r.a.RUST],createdAt:new Date("2020/04/26 22:00:00"),updatedAt:new Date("2020/04/26 22:00:00"),isPublished:!0},"gfx-hal-basics":{key:"gfx-hal-basics",link:"/gfx-hal-initials",title:"Basics on Vulkan using gfx-hal",description:"Reference Notes for me (and others) to help get started with Rust and Vulkan",tags:[r.a.TUTORIAL,r.a.RUST],createdAt:new Date("2020/04/26 10:00:00"),updatedAt:new Date("2020/04/26 16:00:00"),isPublished:!0},"astro-v2":{key:"astro-v2",link:"/astro-v2",title:"Astro Blaster v2 in Rust",description:"A very minimal game making tutorial in Rust using ggez",tags:[r.a.TUTORIAL,r.a.RUST],createdAt:new Date("2020/04/10"),updatedAt:new Date("2020/04/12"),isPublished:!0}},o=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return Object.keys(e).reduce((function(t,n){return Object.prototype.hasOwnProperty.call(e,n)&&t.push(e[n]),t}),[])}(a)},wx14:function(e,t,n){"use strict";function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}n.d(t,"a",(function(){return r}))},zLVn:function(e,t,n){"use strict";function r(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}n.d(t,"a",(function(){return r}))}},[["Rpyx",0,1]]]);