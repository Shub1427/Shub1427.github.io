{"version":3,"file":"static/development/pages/astro-v2.js","sources":["webpack:///./constants/archive-list.ts","webpack:///./constants/tags.ts","webpack:///./node_modules/@babel/runtime/helpers/esm/extends.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///./node_modules/@mdx-js/react/dist/esm.js","webpack:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js","webpack:///delegated ./node_modules/react/index.js from dll-reference dll_c2e10d183b950a67d9e7","webpack:///./pages/astro-v2/index.md","webpack:///./utils/array-utils.ts","webpack:///external \"dll_c2e10d183b950a67d9e7\""],"sourcesContent":["import { Tags } from './tags';\nimport { ISortParams } from '@utils/sort-by';\nimport { toArray } from '@utils/array-utils';\n\nexport interface IArchiveItem extends ISortParams {\n  key: string;\n  link: string;\n  title: React.ReactNode;\n  description: React.ReactNode;\n  tags: Tags[];\n  updatedAt: Date;\n  isPublished: boolean;\n}\n\n// I know, it is good to have a DB and a Backend, but\n// for simplicity and saving cost, I am ignoring the Backend\nexport const archiveRecord: Record<string, IArchiveItem> = {\n  'performance-reactjs': {\n    key: 'performance-reactjs',\n    link: '/performance-reactjs',\n    title: 'Performance Improvements in JS and ReactJS',\n    description:\n      'Recent Performance related findings of mine, which I am jotting down here for later reference',\n    tags: [Tags.RESEARCH, Tags.JS, Tags.REACT],\n    createdAt: new Date('2020/05/07 09:15:00'),\n    updatedAt: new Date('2020/05/07 09:15:00'),\n    isPublished: true,\n  },\n  'upload-client-logs': {\n    key: 'upload-client-logs',\n    link: '/upload-client-logs',\n    title: 'Client Browser Log to your Server',\n    description:\n      \"Sometimes (like to get details on performance) there is a requirement to log data \\\n      from end-user's browser to you own servers, for which this note will talk about.\",\n    tags: [Tags.PROJECT, Tags.JS, Tags.REACT],\n    createdAt: new Date('2020/04/29 08:30:00'),\n    updatedAt: new Date('2020/05/03 23:30:00'),\n    isPublished: true,\n  },\n  'word-counter': {\n    key: 'word-counter',\n    link: '/word-counter',\n    title: 'Word Counter in Rust',\n    description:\n      'Just a fun bin script for my project, to count words in my MDX files.',\n    tags: [Tags.PROJECT, Tags.RUST],\n    createdAt: new Date('2020/04/26 22:00:00'),\n    updatedAt: new Date('2020/04/26 22:00:00'),\n    isPublished: true,\n  },\n  'gfx-hal-basics': {\n    key: 'gfx-hal-basics',\n    link: '/gfx-hal-initials',\n    title: 'Basics on Vulkan using gfx-hal',\n    description:\n      'Reference Notes for me (and others) to help get started with Rust and Vulkan',\n    tags: [Tags.TUTORIAL, Tags.RUST],\n    createdAt: new Date('2020/04/26 10:00:00'),\n    updatedAt: new Date('2020/04/26 16:00:00'),\n    isPublished: true,\n  },\n  'astro-v2': {\n    key: 'astro-v2',\n    link: '/astro-v2',\n    title: 'Astro Blaster v2 in Rust',\n    description: 'A very minimal game making tutorial in Rust using ggez',\n    tags: [Tags.TUTORIAL, Tags.RUST],\n    createdAt: new Date('2020/04/10'),\n    updatedAt: new Date('2020/04/12'),\n    isPublished: true,\n  },\n};\n\nexport const archiveList = toArray(archiveRecord);\n","export enum Tags {\n  // type\n  TUTORIAL = 'tutorial',\n  PROJECT = 'project',\n  RESEARCH = 'research',\n\n  // lang\n  RUST = 'rust',\n  JS = 'javascript',\n\n  // framework\n  REACT = 'reactjs',\n}\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React, { forwardRef } from 'react';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar isFunction = function isFunction(obj) {\n  return typeof obj === 'function';\n};\n\nvar MDXContext = React.createContext({});\nvar withMDXComponents = function withMDXComponents(Component) {\n  return function (props) {\n    var allComponents = useMDXComponents(props.components);\n    return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n      components: allComponents\n    }));\n  };\n};\nvar useMDXComponents = function useMDXComponents(components) {\n  var contextComponents = React.useContext(MDXContext);\n  var allComponents = contextComponents;\n\n  if (components) {\n    allComponents = isFunction(components) ? components(contextComponents) : _objectSpread2({}, contextComponents, {}, components);\n  }\n\n  return allComponents;\n};\nvar MDXProvider = function MDXProvider(props) {\n  var allComponents = useMDXComponents(props.components);\n  return /*#__PURE__*/React.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, props.children);\n};\n\nvar TYPE_PROP_NAME = 'mdxType';\nvar DEFAULTS = {\n  inlineCode: 'code',\n  wrapper: function wrapper(_ref) {\n    var children = _ref.children;\n    return React.createElement(React.Fragment, {}, children);\n  }\n};\nvar MDXCreateElement = forwardRef(function (props, ref) {\n  var propComponents = props.components,\n      mdxType = props.mdxType,\n      originalType = props.originalType,\n      parentName = props.parentName,\n      etc = _objectWithoutProperties(props, [\"components\", \"mdxType\", \"originalType\", \"parentName\"]);\n\n  var components = useMDXComponents(propComponents);\n  var type = mdxType;\n  var Component = components[\"\".concat(parentName, \".\").concat(type)] || components[type] || DEFAULTS[type] || originalType;\n\n  if (propComponents) {\n    return React.createElement(Component, _objectSpread2({\n      ref: ref\n    }, etc, {\n      components: propComponents\n    }));\n  }\n\n  return React.createElement(Component, _objectSpread2({\n    ref: ref\n  }, etc));\n});\nMDXCreateElement.displayName = 'MDXCreateElement';\nfunction createElement (type, props) {\n  var args = arguments;\n  var mdxType = props && props.mdxType;\n\n  if (typeof type === 'string' || mdxType) {\n    var argsLength = args.length;\n    var createElementArgArray = new Array(argsLength);\n    createElementArgArray[0] = MDXCreateElement;\n    var newProps = {};\n\n    for (var key in props) {\n      if (hasOwnProperty.call(props, key)) {\n        newProps[key] = props[key];\n      }\n    }\n\n    newProps.originalType = type;\n    newProps[TYPE_PROP_NAME] = typeof type === 'string' ? type : mdxType;\n    createElementArgArray[1] = newProps;\n\n    for (var i = 2; i < argsLength; i++) {\n      createElementArgArray[i] = args[i];\n    }\n\n    return React.createElement.apply(null, createElementArgArray);\n  }\n\n  return React.createElement.apply(null, args);\n}\n\nexport { MDXContext, MDXProvider, createElement as mdx, useMDXComponents, withMDXComponents };\n","\n    (window.__NEXT_P=window.__NEXT_P||[]).push([\"/astro-v2\", function() {\n      var mod = require(\"/Users/subroto.biswas/Subroto/shub1427.github.io/pages/astro-v2/index.md\")\n      if(module.hot) {\n        module.hot.accept(\"/Users/subroto.biswas/Subroto/shub1427.github.io/pages/astro-v2/index.md\", function() {\n          if(!next.router.components[\"/astro-v2\"]) return\n          var updatedPage = require(\"/Users/subroto.biswas/Subroto/shub1427.github.io/pages/astro-v2/index.md\")\n          next.router.update(\"/astro-v2\", updatedPage)\n        })\n      }\n      return mod\n    }]);\n  ","module.exports = (__webpack_require__(/*! dll-reference dll_c2e10d183b950a67d9e7 */ \"dll-reference dll_c2e10d183b950a67d9e7\"))(\"./node_modules/react/index.js\");","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { archiveRecord } from '@constants/archive-list';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\nconst PolkaContainer = makeShortcode(\"PolkaContainer\");\nconst H1 = makeShortcode(\"H1\");\nconst Blockquote = makeShortcode(\"Blockquote\");\nconst InlineCode = makeShortcode(\"InlineCode\");\nconst Diff = makeShortcode(\"Diff\");\nconst CodeBlock = makeShortcode(\"CodeBlock\");\nconst Image = makeShortcode(\"Image\");\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/katex@0.11.0/dist/katex.min.css\" integrity=\"sha384-BdGj8xC2eZkQaxoQ8nSLefg4AV4/AwB3Fj+8SUSo7pnKP6Eoy18liIKTPn9oBYNG\" crossOrigin=\"anonymous\" />\n    <PolkaContainer mdxType=\"PolkaContainer\">\n      <H1 updatedAt={archiveRecord['astro-v2'].updatedAt} wordCount={1200} mdxType=\"H1\">\n  Astro Blaster\n      </H1>\n      <Blockquote type=\"warn\" mdxType=\"Blockquote\">\n  <strong>NOTE</strong>: This Tutorial is not finished and requires a lot of effort and learnings, to\n  properly write the important thing. I am trying to learn Game Dev, using various sources,\n  from scratch using Vulkan API, using minimal game engine like <InlineCode mdxType=\"InlineCode\">ggez</InlineCode> and Godot Engine.\n  Combining that knowledge and writing that down here will take time.\n  <br />\n  <br />\n        <p>{`  ⚠️ `}{` `}{`For now, read it at your own risk!!!`}</p>\n      </Blockquote>\n      <p>{`This Tutorial is mostly made up from Astro Blaster example from\nGgez game engine in Rust.`}</p>\n      <blockquote>\n        <p parentName=\"blockquote\"><strong parentName=\"p\">{`NOTE`}</strong>{`: It is assumed that you have little bit experience in Rust lang\nalready. Rust book is a great place to start and learn Rust\nif already not read.`}</p>\n      </blockquote>\n      <h2>{`What are we Building`}</h2>\n      <p>{`We will be building a Nostalgic Astro Blaster Game from 90s.\nThe purpose of this post is to keep an archive for myself (and\nothers), who are very beginners in game programming and does'nt\nknow some basic concepts used in game dev.`}</p>\n      <blockquote>\n        <p parentName=\"blockquote\"><strong parentName=\"p\">{`TLDR;`}</strong>{` You can find the code here: `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/Shub1427/rustschool/tree/master/gui/ggez_basics/src/bin/astro_blaster_v2\"\n          }}>{`rustschool`}</a></p>\n      </blockquote>\n      <p>{`Do keep in mind, I am not writing best code, or better said this might be the worst code\never written 😜.\nWhat I am trying to achieve here is a minimal understanding for the type of code\nwritten in the world of Game dev, like:`}</p>\n      <ul>\n        <li parentName=\"ul\">{`How to show some images on screen.`}</li>\n        <li parentName=\"ul\">{`How to use Game units instead of pixel, to get a resolution independent code.`}<ul parentName=\"li\">\n            <li parentName=\"ul\">{`This is something I will cover later sometime, for now I don't have a good understanding for this.`}</li>\n          </ul></li>\n        <li parentName=\"ul\">{`How to use keyboard for inputs. What `}<inlineCode parentName=\"li\">{`Edge-Triggered`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`Level-Triggered`}</inlineCode>{` keyboard events are.`}</li>\n      </ul>\n      <p>{`Concepts of applying Physics, once these things are clear becomes easy.`}</p>\n      <h2>{`Draw Black Background on Screen`}</h2>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-rs\"\n        }}>{`use ggez::event;\nuse ggez::graphics;\nuse ggez::{Context, ContextBuilder, GameResult};\n\nstruct World {\n    stage: usize, // Nothing else for now.\n}\n\nimpl World {\n    fn new() -> Self {\n        World {\n            stage: 0\n        }\n    }\n}\n\nimpl event::EventHandler for World {\n    fn update(&mut self, _ctx: &mut Context) -> GameResult {\n        Ok(())\n    }\n\n    fn draw(&mut self, ctx: &mut Context) -> GameResult {\n        graphics::clear(ctx, graphics::BLACK); // Clear with Black Background\n        graphics::present(ctx)?; // It's important to present the buffer on Screen\n        Ok(())\n    }\n}\n\nfn main() -> GameResult {\n    let (ctx, event_loop) = &mut ContextBuilder::new(\"Astro Blaster v2\", \"Subroto Biswas\")\n        .build()?;\n    let mut state = World::new();\n    event::run(ctx, event_loop, &mut state)\n}\n`}</code></pre>\n      <p>{`Diff: `}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/Shub1427/rustschool/commit/74bae4596c1cf1f0bec324946860422023d77d0c\"\n        }}>{`74bae4596c1cf1f0bec324946860422023d77d0c`}</a></p>\n      <h2>{`Add an Image Resource root`}</h2>\n      <p>{`We need to to create a Player now. The player needs some image to represent itself.\nThus we need to load resources someway. Following changes, helps us to setup root dir\nto look into for all our resources.`}</p>\n      <Diff lang=\"rs\" addedLineNumbers={[3, 5]} removedLineNumbers={[]} hideLines mdxType=\"Diff\">{`// main.rs\n// in fn main()\nlet resource_dir = \"./src/bin/astro_blaster_v2/resources\";\nlet (ctx, event_loop) = &mut ContextBuilder::new(\"Astro Blaster v2\", \"Subroto Biswas\")\n    .add_resource_path(resource_dir)\n    .build()?;\nlet mut state = World::new();\nevent::run(ctx, event_loop, &mut state)`}\n      </Diff>\n      <p>{`Now, Calling this simple function, will load resources from this root directory.\nFor example:`}</p>\n      <CodeBlock className=\"language-rs\" showLines={false} mdxType=\"CodeBlock\">{`let player_image = graphics::Image::new(ctx, \"/player.png\")?;`}</CodeBlock>\n      <p>{`So, we now know how to load our resources, we now need to create a `}<inlineCode parentName=\"p\">{`Player`}</inlineCode>{` instance and draw it's image\non screen.`}</p>\n      <p>{`First thing, to create a new `}<inlineCode parentName=\"p\">{`mod`}</inlineCode>{` for `}<inlineCode parentName=\"p\">{`Player`}</inlineCode>{` struct and it's implementations.`}</p>\n      <ul>\n        <li parentName=\"ul\">{`Create a file `}<inlineCode parentName=\"li\">{`player.rs`}</inlineCode></li>\n      </ul>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-rs\"\n        }}>{`// player.rs\n\npub struct Player {\n    image: graphics::Image,\n    pos: nalgebra::Point2<f32>,\n    // Player's Facing Direction\n    facing: f32,\n}\n\nimpl Player {\n    pub fn new(ctx: &mut Context) -> GameResult<Self> {\n        Ok(Player {\n            image: graphics::Image::new(ctx, \"/playerShip1_blue.png\")?,\n            pos: nalgebra::Point2::new(24.0, 24.0),\n            facing: 0.,\n        })\n    }\n}\n\nimpl event::EventHandler for Player {\n    fn update(&mut self, _ctx: &mut Context) -> GameResult {\n        // Do nothing for now;\n        Ok(())\n    }\n\n    fn draw(&mut self, ctx: &mut Context) -> GameResult {\n        let params = graphics::DrawParam::default()\n            .dest(self.pos)\n            .scale(nalgebra::Vector2::new(0.5, 0.5));\n        graphics::draw(ctx, &self.image, params)?;\n        Ok(())\n    }\n}\n`}</code></pre>\n      <p>{`Now we just need to call the `}<inlineCode parentName=\"p\">{`draw`}</inlineCode>{` implementation of `}<inlineCode parentName=\"p\">{`Player`}</inlineCode>{` in `}<inlineCode parentName=\"p\">{`World`}</inlineCode>{`s `}<inlineCode parentName=\"p\">{`draw`}</inlineCode>{` calls.`}</p>\n      <Diff lang=\"rs\" addedLineNumbers={[5]} removedLineNumbers={[]} hideLines mdxType=\"Diff\">{`// main.rs\n//\nfn draw(&mut self, ctx: &mut Context) -> GameResult {\n    graphics::clear(ctx, graphics::BLACK); // Clear with Black Background\n    self.player.draw(ctx)?;\n    graphics::present(ctx)?; // It's important to present the buffer on Screen\n    Ok(())\n}`}\n      </Diff>\n      <p>{`Diff: `}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/Shub1427/rustschool/commit/c207cd3b5810b7a2775ccffcc77cc4e4db1a7b5e\"\n        }}>{`c207cd3b5810b7a2775ccffcc77cc4e4db1a7b5e`}</a></p>\n      <h2>{`Move the Player with Keyboard events`}</h2>\n      <p>{`Ggez uses `}<inlineCode parentName=\"p\">{`edge-triggered`}</inlineCode>{` keyboard events, simulated to look like `}<inlineCode parentName=\"p\">{`level-triggered`}</inlineCode>{`.`}</p>\n      <br />\n      <p>{`In simple words, `}<inlineCode parentName=\"p\">{`Edge Triggered`}</inlineCode>{` refers to single keyboard event, no matter\nhow long we keep the key pressed. For eg. If I have pressed `}<inlineCode parentName=\"p\">{`Up`}</inlineCode>{` button\nand also press `}<inlineCode parentName=\"p\">{`Right`}</inlineCode>{` button after sometime, without leaving the `}<inlineCode parentName=\"p\">{`Up`}</inlineCode>{` button, we lose\nevent on `}<inlineCode parentName=\"p\">{`Up`}</inlineCode>{` button, as a new keycode `}<inlineCode parentName=\"p\">{`Right`}</inlineCode>{` overrides it.`}</p>\n      <blockquote>\n        <p parentName=\"blockquote\">{`Using `}<inlineCode parentName=\"p\">{`key_down_event`}</inlineCode>{` from `}<inlineCode parentName=\"p\">{`event::EventHandler`}</inlineCode>{` trait, actually simulates\nthe above as level triggered, but once the keycode change, old keypress is lost.`}</p>\n      </blockquote>\n      <p>{`On the other hand, `}<inlineCode parentName=\"p\">{`Level Triggered`}</inlineCode>{` refers to continous events, that keeps on triggering\nuntill user stops the keypress. it can also handle more than one keypress at a time.`}</p>\n      <br />\n      <p>{`To hack ggez to get the desired output from keyboard events, i.e., to get events `}<inlineCode parentName=\"p\">{`Up`}</inlineCode>{`\nand `}<inlineCode parentName=\"p\">{`Right`}</inlineCode>{` simultaneously, we use `}<inlineCode parentName=\"p\">{`input::keyboard::is_key_pressed`}</inlineCode>{` instead, with\nmultiple `}<inlineCode parentName=\"p\">{`if/else`}</inlineCode>{` instead of `}<inlineCode parentName=\"p\">{`key_down_event`}</inlineCode>{` in trait impl.`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-rs\"\n        }}>{`// player.rs\nimpl Player {\n    ...\n    pub fn handle_events(&mut self, ctx: &mut Context) -> GameResult {\n        let mut dy = 0.;\n        let mut dx = 0.;\n        if input::keyboard::is_key_pressed(ctx, event::KeyCode::Up) {\n            dy = -1.0;\n        }\n        if input::keyboard::is_key_pressed(ctx, event::KeyCode::Right) {\n            dx = 1.0;\n        }\n        if input::keyboard::is_key_pressed(ctx, event::KeyCode::Down) {\n            dy = 1.0;\n        }\n        if input::keyboard::is_key_pressed(ctx, event::KeyCode::Left) {\n            dx = -1.0;\n        }\n        self.pos = nalgebra::Point2::new(self.pos.x + dx, self.pos.y + dy);\n        Ok(())\n    }\n}\n\nimpl event::EventHandler for Player {\n    fn update(&mut self, ctx: &mut Context) -> GameResult {\n        self.handle_events(ctx)?;\n        Ok(())\n    }\n    ...\n}\n`}</code></pre>\n      <p>{`We are directly updating the `}<inlineCode parentName=\"p\">{`position`}</inlineCode>{` of the player, instead of deriving it from velocity and time,\nwhich give precise control over the Player's movement. Anyways, for simplicity change the position\ndirectly for now is fine. We will later on update it to use `}<inlineCode parentName=\"p\">{`velocity * time`}</inlineCode>{` to get the `}<inlineCode parentName=\"p\">{`dpos`}</inlineCode>{` moved\nin unit time.`}</p>\n      <br />\n      <p>{`Now we just need to call `}<inlineCode parentName=\"p\">{`player.update`}</inlineCode>{` in `}<inlineCode parentName=\"p\">{`world.update`}</inlineCode>{` to reflect it on the screen.`}</p>\n      <p>{`Diff: `}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/Shub1427/rustschool/commit/d8a9730f134f056acd451692834722cd75b020a6\"\n        }}>{`d8a9730f134f056acd451692834722cd75b020a6`}</a></p>\n      <h2>{`Fix the upside down coordinates of screen:`}</h2>\n      <p>{`If you have noticed, I am having negative delta y for `}<inlineCode parentName=\"p\">{`UP`}</inlineCode>{` event (`}<span parentName=\"p\" {...{\n          \"className\": \"math math-inline\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"katex\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"katex-mathml\"\n            }}><math parentName=\"span\" {...{\n                \"xmlns\": \"http://www.w3.org/1998/Math/MathML\"\n              }}><semantics parentName=\"math\"><mrow parentName=\"semantics\"><mi parentName=\"mrow\">{`d`}</mi><mi parentName=\"mrow\">{`y`}</mi><mo parentName=\"mrow\">{`=`}</mo><mo parentName=\"mrow\">{`−`}</mo><mn parentName=\"mrow\">{`1.0`}</mn></mrow><annotation parentName=\"semantics\" {...{\n                    \"encoding\": \"application/x-tex\"\n                  }}>{`dy = -1.0`}</annotation></semantics></math></span><span parentName=\"span\" {...{\n              \"className\": \"katex-html\",\n              \"aria-hidden\": \"true\"\n            }}><span parentName=\"span\" {...{\n                \"className\": \"base\"\n              }}><span parentName=\"span\" {...{\n                  \"className\": \"strut\",\n                  \"style\": {\n                    \"height\": \"0.8888799999999999em\",\n                    \"verticalAlign\": \"-0.19444em\"\n                  }\n                }}></span><span parentName=\"span\" {...{\n                  \"className\": \"mord mathdefault\"\n                }}>{`d`}</span><span parentName=\"span\" {...{\n                  \"className\": \"mord mathdefault\",\n                  \"style\": {\n                    \"marginRight\": \"0.03588em\"\n                  }\n                }}>{`y`}</span><span parentName=\"span\" {...{\n                  \"className\": \"mspace\",\n                  \"style\": {\n                    \"marginRight\": \"0.2777777777777778em\"\n                  }\n                }}></span><span parentName=\"span\" {...{\n                  \"className\": \"mrel\"\n                }}>{`=`}</span><span parentName=\"span\" {...{\n                  \"className\": \"mspace\",\n                  \"style\": {\n                    \"marginRight\": \"0.2777777777777778em\"\n                  }\n                }}></span></span><span parentName=\"span\" {...{\n                \"className\": \"base\"\n              }}><span parentName=\"span\" {...{\n                  \"className\": \"strut\",\n                  \"style\": {\n                    \"height\": \"0.72777em\",\n                    \"verticalAlign\": \"-0.08333em\"\n                  }\n                }}></span><span parentName=\"span\" {...{\n                  \"className\": \"mord\"\n                }}>{`−`}</span><span parentName=\"span\" {...{\n                  \"className\": \"mord\"\n                }}>{`1`}</span><span parentName=\"span\" {...{\n                  \"className\": \"mord\"\n                }}>{`.`}</span><span parentName=\"span\" {...{\n                  \"className\": \"mord\"\n                }}>{`0`}</span></span></span></span></span>{`), that's because\nour world right now is upside down. This is because Screen coordinates in computer graphics has\norigin at `}<inlineCode parentName=\"p\">{`top-left`}</inlineCode>{` corner, where `}<span parentName=\"p\" {...{\n          \"className\": \"math math-inline\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"katex\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"katex-mathml\"\n            }}><math parentName=\"span\" {...{\n                \"xmlns\": \"http://www.w3.org/1998/Math/MathML\"\n              }}><semantics parentName=\"math\"><mrow parentName=\"semantics\"><mo parentName=\"mrow\">{`+`}</mo><mi parentName=\"mrow\">{`X`}</mi><mo parentName=\"mrow\">{`−`}</mo><mi parentName=\"mrow\">{`a`}</mi><mi parentName=\"mrow\">{`x`}</mi><mi parentName=\"mrow\">{`i`}</mi><mi parentName=\"mrow\">{`s`}</mi></mrow><annotation parentName=\"semantics\" {...{\n                    \"encoding\": \"application/x-tex\"\n                  }}>{`+X-axis`}</annotation></semantics></math></span><span parentName=\"span\" {...{\n              \"className\": \"katex-html\",\n              \"aria-hidden\": \"true\"\n            }}><span parentName=\"span\" {...{\n                \"className\": \"base\"\n              }}><span parentName=\"span\" {...{\n                  \"className\": \"strut\",\n                  \"style\": {\n                    \"height\": \"0.76666em\",\n                    \"verticalAlign\": \"-0.08333em\"\n                  }\n                }}></span><span parentName=\"span\" {...{\n                  \"className\": \"mord\"\n                }}>{`+`}</span><span parentName=\"span\" {...{\n                  \"className\": \"mord mathdefault\",\n                  \"style\": {\n                    \"marginRight\": \"0.07847em\"\n                  }\n                }}>{`X`}</span><span parentName=\"span\" {...{\n                  \"className\": \"mspace\",\n                  \"style\": {\n                    \"marginRight\": \"0.2222222222222222em\"\n                  }\n                }}></span><span parentName=\"span\" {...{\n                  \"className\": \"mbin\"\n                }}>{`−`}</span><span parentName=\"span\" {...{\n                  \"className\": \"mspace\",\n                  \"style\": {\n                    \"marginRight\": \"0.2222222222222222em\"\n                  }\n                }}></span></span><span parentName=\"span\" {...{\n                \"className\": \"base\"\n              }}><span parentName=\"span\" {...{\n                  \"className\": \"strut\",\n                  \"style\": {\n                    \"height\": \"0.65952em\",\n                    \"verticalAlign\": \"0em\"\n                  }\n                }}></span><span parentName=\"span\" {...{\n                  \"className\": \"mord mathdefault\"\n                }}>{`a`}</span><span parentName=\"span\" {...{\n                  \"className\": \"mord mathdefault\"\n                }}>{`x`}</span><span parentName=\"span\" {...{\n                  \"className\": \"mord mathdefault\"\n                }}>{`i`}</span><span parentName=\"span\" {...{\n                  \"className\": \"mord mathdefault\"\n                }}>{`s`}</span></span></span></span></span>{` goes towards right of the screen and `}<span parentName=\"p\" {...{\n          \"className\": \"math math-inline\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"katex\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"katex-mathml\"\n            }}><math parentName=\"span\" {...{\n                \"xmlns\": \"http://www.w3.org/1998/Math/MathML\"\n              }}><semantics parentName=\"math\"><mrow parentName=\"semantics\"><mo parentName=\"mrow\">{`+`}</mo><mi parentName=\"mrow\">{`Y`}</mi><mo parentName=\"mrow\">{`−`}</mo><mi parentName=\"mrow\">{`a`}</mi><mi parentName=\"mrow\">{`x`}</mi><mi parentName=\"mrow\">{`i`}</mi><mi parentName=\"mrow\">{`s`}</mi></mrow><annotation parentName=\"semantics\" {...{\n                    \"encoding\": \"application/x-tex\"\n                  }}>{`+Y-axis`}</annotation></semantics></math></span><span parentName=\"span\" {...{\n              \"className\": \"katex-html\",\n              \"aria-hidden\": \"true\"\n            }}><span parentName=\"span\" {...{\n                \"className\": \"base\"\n              }}><span parentName=\"span\" {...{\n                  \"className\": \"strut\",\n                  \"style\": {\n                    \"height\": \"0.76666em\",\n                    \"verticalAlign\": \"-0.08333em\"\n                  }\n                }}></span><span parentName=\"span\" {...{\n                  \"className\": \"mord\"\n                }}>{`+`}</span><span parentName=\"span\" {...{\n                  \"className\": \"mord mathdefault\",\n                  \"style\": {\n                    \"marginRight\": \"0.22222em\"\n                  }\n                }}>{`Y`}</span><span parentName=\"span\" {...{\n                  \"className\": \"mspace\",\n                  \"style\": {\n                    \"marginRight\": \"0.2222222222222222em\"\n                  }\n                }}></span><span parentName=\"span\" {...{\n                  \"className\": \"mbin\"\n                }}>{`−`}</span><span parentName=\"span\" {...{\n                  \"className\": \"mspace\",\n                  \"style\": {\n                    \"marginRight\": \"0.2222222222222222em\"\n                  }\n                }}></span></span><span parentName=\"span\" {...{\n                \"className\": \"base\"\n              }}><span parentName=\"span\" {...{\n                  \"className\": \"strut\",\n                  \"style\": {\n                    \"height\": \"0.65952em\",\n                    \"verticalAlign\": \"0em\"\n                  }\n                }}></span><span parentName=\"span\" {...{\n                  \"className\": \"mord mathdefault\"\n                }}>{`a`}</span><span parentName=\"span\" {...{\n                  \"className\": \"mord mathdefault\"\n                }}>{`x`}</span><span parentName=\"span\" {...{\n                  \"className\": \"mord mathdefault\"\n                }}>{`i`}</span><span parentName=\"span\" {...{\n                  \"className\": \"mord mathdefault\"\n                }}>{`s`}</span></span></span></span></span>{` goes\nto the bottom of the screen. We need to revert it back to how we use coordinates in real world, so\nthat our usual Physics and Maths can be applied as is.`}</p>\n      <Diff lang=\"rs\" addedLineNumbers={[5, 6, 7, 11, 12, 18, 19, 20, 21]} removedLineNumbers={[]} hideLines mdxType=\"Diff\">\n        {`// physics.rs\n...\npub fn new(ctx: &mut Context) -> GameResult<Self> {\n    let image = graphics::Image::new(ctx, \"/playerShip1_blue.png\")?;\n    let pos = nalgebra::Point2::new(72.0, 0.0);\n    let y_offset = constants::VIEWPORT_HEIGHT - image.height() as f32;\n    let bbox = graphics::Rect::new(0., 0., image.width() as f32, image.height() as f32);\n    Ok(Player {\n        image,\n        pos,\n        offset: nalgebra::Vector2::new(0.0, y_offset),\n        bbox,\n        facing: 0.,\n    })\n}\n...\nfn draw(&mut self, ctx: &mut Context) -> GameResult {\n    let reverted_pos = nalgebra::Point2::new(\n        self.offset.x + self.pos.x,\n        self.offset.y - self.pos.y\n    );\n    let params = graphics::DrawParam::new()\n        .dest(reverted_pos);\n    ...\n}`}\n      </Diff>\n      <p>{`We are drawing the image with an offset, where whatever the Y position is, we will subtract it to\nwindow height and add image height, to keep the origin of the image still at top-left corner of the image,\nbut any delta modification can be done with natural `}<span parentName=\"p\" {...{\n          \"className\": \"math math-inline\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"katex\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"katex-mathml\"\n            }}><math parentName=\"span\" {...{\n                \"xmlns\": \"http://www.w3.org/1998/Math/MathML\"\n              }}><semantics parentName=\"math\"><mrow parentName=\"semantics\"><mi parentName=\"mrow\">{`X`}</mi><mo parentName=\"mrow\">{`−`}</mo><mi parentName=\"mrow\">{`Y`}</mi><mi parentName=\"mrow\">{`a`}</mi><mi parentName=\"mrow\">{`x`}</mi><mi parentName=\"mrow\">{`i`}</mi><mi parentName=\"mrow\">{`s`}</mi></mrow><annotation parentName=\"semantics\" {...{\n                    \"encoding\": \"application/x-tex\"\n                  }}>{`X-Y axis`}</annotation></semantics></math></span><span parentName=\"span\" {...{\n              \"className\": \"katex-html\",\n              \"aria-hidden\": \"true\"\n            }}><span parentName=\"span\" {...{\n                \"className\": \"base\"\n              }}><span parentName=\"span\" {...{\n                  \"className\": \"strut\",\n                  \"style\": {\n                    \"height\": \"0.76666em\",\n                    \"verticalAlign\": \"-0.08333em\"\n                  }\n                }}></span><span parentName=\"span\" {...{\n                  \"className\": \"mord mathdefault\",\n                  \"style\": {\n                    \"marginRight\": \"0.07847em\"\n                  }\n                }}>{`X`}</span><span parentName=\"span\" {...{\n                  \"className\": \"mspace\",\n                  \"style\": {\n                    \"marginRight\": \"0.2222222222222222em\"\n                  }\n                }}></span><span parentName=\"span\" {...{\n                  \"className\": \"mbin\"\n                }}>{`−`}</span><span parentName=\"span\" {...{\n                  \"className\": \"mspace\",\n                  \"style\": {\n                    \"marginRight\": \"0.2222222222222222em\"\n                  }\n                }}></span></span><span parentName=\"span\" {...{\n                \"className\": \"base\"\n              }}><span parentName=\"span\" {...{\n                  \"className\": \"strut\",\n                  \"style\": {\n                    \"height\": \"0.68333em\",\n                    \"verticalAlign\": \"0em\"\n                  }\n                }}></span><span parentName=\"span\" {...{\n                  \"className\": \"mord mathdefault\",\n                  \"style\": {\n                    \"marginRight\": \"0.22222em\"\n                  }\n                }}>{`Y`}</span><span parentName=\"span\" {...{\n                  \"className\": \"mord mathdefault\"\n                }}>{`a`}</span><span parentName=\"span\" {...{\n                  \"className\": \"mord mathdefault\"\n                }}>{`x`}</span><span parentName=\"span\" {...{\n                  \"className\": \"mord mathdefault\"\n                }}>{`i`}</span><span parentName=\"span\" {...{\n                  \"className\": \"mord mathdefault\"\n                }}>{`s`}</span></span></span></span></span>{`, without worrying about the inversion.`}</p>\n      <br />\n      <p>{`Note that `}<inlineCode parentName=\"p\">{`bbox`}</inlineCode>{` added to player is just for debugging purpose and not actually required for our game.`}</p>\n      <p>{`Diff: `}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/Shub1427/rustschool/commit/d6379bd1f9226026ad1e313a4a3653e04767532d\"\n        }}>{`d6379bd1f9226026ad1e313a4a3653e04767532d`}</a></p>\n      <h2>{`Add Physics to Player's Movements:`}</h2>\n      <p>{`Moving in the world with some max velocity and constant accelaration, applied to the spaceship\nwhen user presses direction buttons.`}</p>\n      <br />\n      <p>{`Keeping Acceleration (`}<span parentName=\"p\" {...{\n          \"className\": \"math math-inline\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"katex\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"katex-mathml\"\n            }}><math parentName=\"span\" {...{\n                \"xmlns\": \"http://www.w3.org/1998/Math/MathML\"\n              }}><semantics parentName=\"math\"><mrow parentName=\"semantics\"><mi parentName=\"mrow\">{`a`}</mi></mrow><annotation parentName=\"semantics\" {...{\n                    \"encoding\": \"application/x-tex\"\n                  }}>{`a`}</annotation></semantics></math></span><span parentName=\"span\" {...{\n              \"className\": \"katex-html\",\n              \"aria-hidden\": \"true\"\n            }}><span parentName=\"span\" {...{\n                \"className\": \"base\"\n              }}><span parentName=\"span\" {...{\n                  \"className\": \"strut\",\n                  \"style\": {\n                    \"height\": \"0.43056em\",\n                    \"verticalAlign\": \"0em\"\n                  }\n                }}></span><span parentName=\"span\" {...{\n                  \"className\": \"mord mathdefault\"\n                }}>{`a`}</span></span></span></span></span>{`) constant and having a max velocity (`}<span parentName=\"p\" {...{\n          \"className\": \"math math-inline\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"katex\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"katex-mathml\"\n            }}><math parentName=\"span\" {...{\n                \"xmlns\": \"http://www.w3.org/1998/Math/MathML\"\n              }}><semantics parentName=\"math\"><mrow parentName=\"semantics\"><mi parentName=\"mrow\">{`V`}</mi></mrow><annotation parentName=\"semantics\" {...{\n                    \"encoding\": \"application/x-tex\"\n                  }}>{`V`}</annotation></semantics></math></span><span parentName=\"span\" {...{\n              \"className\": \"katex-html\",\n              \"aria-hidden\": \"true\"\n            }}><span parentName=\"span\" {...{\n                \"className\": \"base\"\n              }}><span parentName=\"span\" {...{\n                  \"className\": \"strut\",\n                  \"style\": {\n                    \"height\": \"0.68333em\",\n                    \"verticalAlign\": \"0em\"\n                  }\n                }}></span><span parentName=\"span\" {...{\n                  \"className\": \"mord mathdefault\",\n                  \"style\": {\n                    \"marginRight\": \"0.22222em\"\n                  }\n                }}>{`V`}</span></span></span></span></span>{`), we can derive,\ndistance travelled in unit time:`}</p>\n      <ul>\n        <li parentName=\"ul\">{`Acceleration is: `}<span parentName=\"li\" {...{\n            \"className\": \"math math-inline\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"katex\"\n            }}><span parentName=\"span\" {...{\n                \"className\": \"katex-mathml\"\n              }}><math parentName=\"span\" {...{\n                  \"xmlns\": \"http://www.w3.org/1998/Math/MathML\"\n                }}><semantics parentName=\"math\"><mrow parentName=\"semantics\"><mi parentName=\"mrow\">{`a`}</mi><mo parentName=\"mrow\">{`=`}</mo><mfrac parentName=\"mrow\"><mi parentName=\"mfrac\">{`v`}</mi><mi parentName=\"mfrac\">{`t`}</mi></mfrac></mrow><annotation parentName=\"semantics\" {...{\n                      \"encoding\": \"application/x-tex\"\n                    }}>{`a = \\\\frac{v}{t}`}</annotation></semantics></math></span><span parentName=\"span\" {...{\n                \"className\": \"katex-html\",\n                \"aria-hidden\": \"true\"\n              }}><span parentName=\"span\" {...{\n                  \"className\": \"base\"\n                }}><span parentName=\"span\" {...{\n                    \"className\": \"strut\",\n                    \"style\": {\n                      \"height\": \"0.43056em\",\n                      \"verticalAlign\": \"0em\"\n                    }\n                  }}></span><span parentName=\"span\" {...{\n                    \"className\": \"mord mathdefault\"\n                  }}>{`a`}</span><span parentName=\"span\" {...{\n                    \"className\": \"mspace\",\n                    \"style\": {\n                      \"marginRight\": \"0.2777777777777778em\"\n                    }\n                  }}></span><span parentName=\"span\" {...{\n                    \"className\": \"mrel\"\n                  }}>{`=`}</span><span parentName=\"span\" {...{\n                    \"className\": \"mspace\",\n                    \"style\": {\n                      \"marginRight\": \"0.2777777777777778em\"\n                    }\n                  }}></span></span><span parentName=\"span\" {...{\n                  \"className\": \"base\"\n                }}><span parentName=\"span\" {...{\n                    \"className\": \"strut\",\n                    \"style\": {\n                      \"height\": \"1.040392em\",\n                      \"verticalAlign\": \"-0.345em\"\n                    }\n                  }}></span><span parentName=\"span\" {...{\n                    \"className\": \"mord\"\n                  }}><span parentName=\"span\" {...{\n                      \"className\": \"mopen nulldelimiter\"\n                    }}></span><span parentName=\"span\" {...{\n                      \"className\": \"mfrac\"\n                    }}><span parentName=\"span\" {...{\n                        \"className\": \"vlist-t vlist-t2\"\n                      }}><span parentName=\"span\" {...{\n                          \"className\": \"vlist-r\"\n                        }}><span parentName=\"span\" {...{\n                            \"className\": \"vlist\",\n                            \"style\": {\n                              \"height\": \"0.695392em\"\n                            }\n                          }}><span parentName=\"span\" {...{\n                              \"style\": {\n                                \"top\": \"-2.6550000000000002em\"\n                              }\n                            }}><span parentName=\"span\" {...{\n                                \"className\": \"pstrut\",\n                                \"style\": {\n                                  \"height\": \"3em\"\n                                }\n                              }}></span><span parentName=\"span\" {...{\n                                \"className\": \"sizing reset-size6 size3 mtight\"\n                              }}><span parentName=\"span\" {...{\n                                  \"className\": \"mord mtight\"\n                                }}><span parentName=\"span\" {...{\n                                    \"className\": \"mord mathdefault mtight\"\n                                  }}>{`t`}</span></span></span></span><span parentName=\"span\" {...{\n                              \"style\": {\n                                \"top\": \"-3.23em\"\n                              }\n                            }}><span parentName=\"span\" {...{\n                                \"className\": \"pstrut\",\n                                \"style\": {\n                                  \"height\": \"3em\"\n                                }\n                              }}></span><span parentName=\"span\" {...{\n                                \"className\": \"frac-line\",\n                                \"style\": {\n                                  \"borderBottomWidth\": \"0.04em\"\n                                }\n                              }}></span></span><span parentName=\"span\" {...{\n                              \"style\": {\n                                \"top\": \"-3.394em\"\n                              }\n                            }}><span parentName=\"span\" {...{\n                                \"className\": \"pstrut\",\n                                \"style\": {\n                                  \"height\": \"3em\"\n                                }\n                              }}></span><span parentName=\"span\" {...{\n                                \"className\": \"sizing reset-size6 size3 mtight\"\n                              }}><span parentName=\"span\" {...{\n                                  \"className\": \"mord mtight\"\n                                }}><span parentName=\"span\" {...{\n                                    \"className\": \"mord mathdefault mtight\",\n                                    \"style\": {\n                                      \"marginRight\": \"0.03588em\"\n                                    }\n                                  }}>{`v`}</span></span></span></span></span><span parentName=\"span\" {...{\n                            \"className\": \"vlist-s\"\n                          }}>{`​`}</span></span><span parentName=\"span\" {...{\n                          \"className\": \"vlist-r\"\n                        }}><span parentName=\"span\" {...{\n                            \"className\": \"vlist\",\n                            \"style\": {\n                              \"height\": \"0.345em\"\n                            }\n                          }}><span parentName=\"span\"></span></span></span></span></span><span parentName=\"span\" {...{\n                      \"className\": \"mclose nulldelimiter\"\n                    }}></span></span></span></span></span></span><ul parentName=\"li\">\n            <li parentName=\"ul\">{`So at any instant: `}<span parentName=\"li\" {...{\n                \"className\": \"math math-inline\"\n              }}><span parentName=\"span\" {...{\n                  \"className\": \"katex\"\n                }}><span parentName=\"span\" {...{\n                    \"className\": \"katex-mathml\"\n                  }}><math parentName=\"span\" {...{\n                      \"xmlns\": \"http://www.w3.org/1998/Math/MathML\"\n                    }}><semantics parentName=\"math\"><mrow parentName=\"semantics\"><mi parentName=\"mrow\">{`v`}</mi><mo parentName=\"mrow\">{`=`}</mo><mi parentName=\"mrow\">{`a`}</mi><mo parentName=\"mrow\">{`×`}</mo><mi parentName=\"mrow\">{`t`}</mi></mrow><annotation parentName=\"semantics\" {...{\n                          \"encoding\": \"application/x-tex\"\n                        }}>{`v = a \\\\times t`}</annotation></semantics></math></span><span parentName=\"span\" {...{\n                    \"className\": \"katex-html\",\n                    \"aria-hidden\": \"true\"\n                  }}><span parentName=\"span\" {...{\n                      \"className\": \"base\"\n                    }}><span parentName=\"span\" {...{\n                        \"className\": \"strut\",\n                        \"style\": {\n                          \"height\": \"0.43056em\",\n                          \"verticalAlign\": \"0em\"\n                        }\n                      }}></span><span parentName=\"span\" {...{\n                        \"className\": \"mord mathdefault\",\n                        \"style\": {\n                          \"marginRight\": \"0.03588em\"\n                        }\n                      }}>{`v`}</span><span parentName=\"span\" {...{\n                        \"className\": \"mspace\",\n                        \"style\": {\n                          \"marginRight\": \"0.2777777777777778em\"\n                        }\n                      }}></span><span parentName=\"span\" {...{\n                        \"className\": \"mrel\"\n                      }}>{`=`}</span><span parentName=\"span\" {...{\n                        \"className\": \"mspace\",\n                        \"style\": {\n                          \"marginRight\": \"0.2777777777777778em\"\n                        }\n                      }}></span></span><span parentName=\"span\" {...{\n                      \"className\": \"base\"\n                    }}><span parentName=\"span\" {...{\n                        \"className\": \"strut\",\n                        \"style\": {\n                          \"height\": \"0.66666em\",\n                          \"verticalAlign\": \"-0.08333em\"\n                        }\n                      }}></span><span parentName=\"span\" {...{\n                        \"className\": \"mord mathdefault\"\n                      }}>{`a`}</span><span parentName=\"span\" {...{\n                        \"className\": \"mspace\",\n                        \"style\": {\n                          \"marginRight\": \"0.2222222222222222em\"\n                        }\n                      }}></span><span parentName=\"span\" {...{\n                        \"className\": \"mbin\"\n                      }}>{`×`}</span><span parentName=\"span\" {...{\n                        \"className\": \"mspace\",\n                        \"style\": {\n                          \"marginRight\": \"0.2222222222222222em\"\n                        }\n                      }}></span></span><span parentName=\"span\" {...{\n                      \"className\": \"base\"\n                    }}><span parentName=\"span\" {...{\n                        \"className\": \"strut\",\n                        \"style\": {\n                          \"height\": \"0.61508em\",\n                          \"verticalAlign\": \"0em\"\n                        }\n                      }}></span><span parentName=\"span\" {...{\n                        \"className\": \"mord mathdefault\"\n                      }}>{`t`}</span></span></span></span></span></li>\n          </ul></li>\n        <li parentName=\"ul\">{`Once velocity is found, we can derive distance from that velocity,\nfor that instant `}<span parentName=\"li\" {...{\n            \"className\": \"math math-inline\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"katex\"\n            }}><span parentName=\"span\" {...{\n                \"className\": \"katex-mathml\"\n              }}><math parentName=\"span\" {...{\n                  \"xmlns\": \"http://www.w3.org/1998/Math/MathML\"\n                }}><semantics parentName=\"math\"><mrow parentName=\"semantics\"><mi parentName=\"mrow\">{`d`}</mi><mo parentName=\"mrow\">{`=`}</mo><mi parentName=\"mrow\">{`v`}</mi><mo parentName=\"mrow\">{`×`}</mo><mi parentName=\"mrow\">{`t`}</mi></mrow><annotation parentName=\"semantics\" {...{\n                      \"encoding\": \"application/x-tex\"\n                    }}>{`d = v \\\\times t`}</annotation></semantics></math></span><span parentName=\"span\" {...{\n                \"className\": \"katex-html\",\n                \"aria-hidden\": \"true\"\n              }}><span parentName=\"span\" {...{\n                  \"className\": \"base\"\n                }}><span parentName=\"span\" {...{\n                    \"className\": \"strut\",\n                    \"style\": {\n                      \"height\": \"0.69444em\",\n                      \"verticalAlign\": \"0em\"\n                    }\n                  }}></span><span parentName=\"span\" {...{\n                    \"className\": \"mord mathdefault\"\n                  }}>{`d`}</span><span parentName=\"span\" {...{\n                    \"className\": \"mspace\",\n                    \"style\": {\n                      \"marginRight\": \"0.2777777777777778em\"\n                    }\n                  }}></span><span parentName=\"span\" {...{\n                    \"className\": \"mrel\"\n                  }}>{`=`}</span><span parentName=\"span\" {...{\n                    \"className\": \"mspace\",\n                    \"style\": {\n                      \"marginRight\": \"0.2777777777777778em\"\n                    }\n                  }}></span></span><span parentName=\"span\" {...{\n                  \"className\": \"base\"\n                }}><span parentName=\"span\" {...{\n                    \"className\": \"strut\",\n                    \"style\": {\n                      \"height\": \"0.66666em\",\n                      \"verticalAlign\": \"-0.08333em\"\n                    }\n                  }}></span><span parentName=\"span\" {...{\n                    \"className\": \"mord mathdefault\",\n                    \"style\": {\n                      \"marginRight\": \"0.03588em\"\n                    }\n                  }}>{`v`}</span><span parentName=\"span\" {...{\n                    \"className\": \"mspace\",\n                    \"style\": {\n                      \"marginRight\": \"0.2222222222222222em\"\n                    }\n                  }}></span><span parentName=\"span\" {...{\n                    \"className\": \"mbin\"\n                  }}>{`×`}</span><span parentName=\"span\" {...{\n                    \"className\": \"mspace\",\n                    \"style\": {\n                      \"marginRight\": \"0.2222222222222222em\"\n                    }\n                  }}></span></span><span parentName=\"span\" {...{\n                  \"className\": \"base\"\n                }}><span parentName=\"span\" {...{\n                    \"className\": \"strut\",\n                    \"style\": {\n                      \"height\": \"0.61508em\",\n                      \"verticalAlign\": \"0em\"\n                    }\n                  }}></span><span parentName=\"span\" {...{\n                    \"className\": \"mord mathdefault\"\n                  }}>{`t`}</span></span></span></span></span><ul parentName=\"li\">\n            <li parentName=\"ul\">{`Keeping a check for `}<span parentName=\"li\" {...{\n                \"className\": \"math math-inline\"\n              }}><span parentName=\"span\" {...{\n                  \"className\": \"katex\"\n                }}><span parentName=\"span\" {...{\n                    \"className\": \"katex-mathml\"\n                  }}><math parentName=\"span\" {...{\n                      \"xmlns\": \"http://www.w3.org/1998/Math/MathML\"\n                    }}><semantics parentName=\"math\"><mrow parentName=\"semantics\"><mi parentName=\"mrow\">{`v`}</mi><mo parentName=\"mrow\">{`≤`}</mo><mi parentName=\"mrow\">{`V`}</mi></mrow><annotation parentName=\"semantics\" {...{\n                          \"encoding\": \"application/x-tex\"\n                        }}>{`v \\\\leq V`}</annotation></semantics></math></span><span parentName=\"span\" {...{\n                    \"className\": \"katex-html\",\n                    \"aria-hidden\": \"true\"\n                  }}><span parentName=\"span\" {...{\n                      \"className\": \"base\"\n                    }}><span parentName=\"span\" {...{\n                        \"className\": \"strut\",\n                        \"style\": {\n                          \"height\": \"0.7719400000000001em\",\n                          \"verticalAlign\": \"-0.13597em\"\n                        }\n                      }}></span><span parentName=\"span\" {...{\n                        \"className\": \"mord mathdefault\",\n                        \"style\": {\n                          \"marginRight\": \"0.03588em\"\n                        }\n                      }}>{`v`}</span><span parentName=\"span\" {...{\n                        \"className\": \"mspace\",\n                        \"style\": {\n                          \"marginRight\": \"0.2777777777777778em\"\n                        }\n                      }}></span><span parentName=\"span\" {...{\n                        \"className\": \"mrel\"\n                      }}>{`≤`}</span><span parentName=\"span\" {...{\n                        \"className\": \"mspace\",\n                        \"style\": {\n                          \"marginRight\": \"0.2777777777777778em\"\n                        }\n                      }}></span></span><span parentName=\"span\" {...{\n                      \"className\": \"base\"\n                    }}><span parentName=\"span\" {...{\n                        \"className\": \"strut\",\n                        \"style\": {\n                          \"height\": \"0.68333em\",\n                          \"verticalAlign\": \"0em\"\n                        }\n                      }}></span><span parentName=\"span\" {...{\n                        \"className\": \"mord mathdefault\",\n                        \"style\": {\n                          \"marginRight\": \"0.22222em\"\n                        }\n                      }}>{`V`}</span></span></span></span></span></li>\n          </ul></li>\n      </ul>\n      <p>{`Once `}<span parentName=\"p\" {...{\n          \"className\": \"math math-inline\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"katex\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"katex-mathml\"\n            }}><math parentName=\"span\" {...{\n                \"xmlns\": \"http://www.w3.org/1998/Math/MathML\"\n              }}><semantics parentName=\"math\"><mrow parentName=\"semantics\"><mi parentName=\"mrow\">{`d`}</mi></mrow><annotation parentName=\"semantics\" {...{\n                    \"encoding\": \"application/x-tex\"\n                  }}>{`d`}</annotation></semantics></math></span><span parentName=\"span\" {...{\n              \"className\": \"katex-html\",\n              \"aria-hidden\": \"true\"\n            }}><span parentName=\"span\" {...{\n                \"className\": \"base\"\n              }}><span parentName=\"span\" {...{\n                  \"className\": \"strut\",\n                  \"style\": {\n                    \"height\": \"0.69444em\",\n                    \"verticalAlign\": \"0em\"\n                  }\n                }}></span><span parentName=\"span\" {...{\n                  \"className\": \"mord mathdefault\"\n                }}>{`d`}</span></span></span></span></span>{` is found, we can use it as our delta distance, that will be added to current position.\nNow everything defined above is for 1D, but we are making game for 2D, so we need direction as well.\nOur Acceleration (`}<span parentName=\"p\" {...{\n          \"className\": \"math math-inline\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"katex\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"katex-mathml\"\n            }}><math parentName=\"span\" {...{\n                \"xmlns\": \"http://www.w3.org/1998/Math/MathML\"\n              }}><semantics parentName=\"math\"><mrow parentName=\"semantics\"><mi parentName=\"mrow\">{`a`}</mi></mrow><annotation parentName=\"semantics\" {...{\n                    \"encoding\": \"application/x-tex\"\n                  }}>{`a`}</annotation></semantics></math></span><span parentName=\"span\" {...{\n              \"className\": \"katex-html\",\n              \"aria-hidden\": \"true\"\n            }}><span parentName=\"span\" {...{\n                \"className\": \"base\"\n              }}><span parentName=\"span\" {...{\n                  \"className\": \"strut\",\n                  \"style\": {\n                    \"height\": \"0.43056em\",\n                    \"verticalAlign\": \"0em\"\n                  }\n                }}></span><span parentName=\"span\" {...{\n                  \"className\": \"mord mathdefault\"\n                }}>{`a`}</span></span></span></span></span>{`) and Velocity (`}<span parentName=\"p\" {...{\n          \"className\": \"math math-inline\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"katex\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"katex-mathml\"\n            }}><math parentName=\"span\" {...{\n                \"xmlns\": \"http://www.w3.org/1998/Math/MathML\"\n              }}><semantics parentName=\"math\"><mrow parentName=\"semantics\"><mi parentName=\"mrow\">{`v`}</mi></mrow><annotation parentName=\"semantics\" {...{\n                    \"encoding\": \"application/x-tex\"\n                  }}>{`v`}</annotation></semantics></math></span><span parentName=\"span\" {...{\n              \"className\": \"katex-html\",\n              \"aria-hidden\": \"true\"\n            }}><span parentName=\"span\" {...{\n                \"className\": \"base\"\n              }}><span parentName=\"span\" {...{\n                  \"className\": \"strut\",\n                  \"style\": {\n                    \"height\": \"0.43056em\",\n                    \"verticalAlign\": \"0em\"\n                  }\n                }}></span><span parentName=\"span\" {...{\n                  \"className\": \"mord mathdefault\",\n                  \"style\": {\n                    \"marginRight\": \"0.03588em\"\n                  }\n                }}>{`v`}</span></span></span></span></span>{`) both will have a direction bound to it. We need to go back\nto the basics of trignometry now.`}</p>\n      <h2>{`Use Resolution independent Game Units:`}</h2>\n      <Blockquote type=\"warn\" mdxType=\"Blockquote\">\n    <strong>NOTE</strong>: I will elaborate on this topic, when I will feel more confident on how to\n    achieve it more naturally. Actually I want to use Game Units that resembles Natural Units like\n    <InlineCode mdxType=\"InlineCode\">meters</InlineCode>, where the viewport can be considered in meters. Something, like\n    10 pixels equals 1 meter. For now using that logic in game is getting difficult for me, thus will\n    keep using pixels directly\n      </Blockquote>\n      <p>{`Our game is very simple till now, and it will remain the same for sometime. So it is very hard\nto justify, how a movement of player done using pixel calculation is any different from using\nsome random Game unit. To properly understand, please follow the coming image demonstrations carefully.`}</p>\n      <Image src=\"https://user-images.githubusercontent.com/11786283/79068488-e4b9f000-7ce4-11ea-834b-2f36ebf49edd.png\" placeholder=\"https://user-images.githubusercontent.com/11786283/79068483-d4a21080-7ce4-11ea-9cb5-f5f6a13f4b2c.png\" alt=\"Descriptive relative speed to varying viewport or the world\" mdxType=\"Image\" />\n    </PolkaContainer>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","export const toArray = (record: Record<string, any> = {}) => {\n  return Object.keys(record).reduce((acc, key) => {\n    if (Object.prototype.hasOwnProperty.call(record, key)) {\n      acc.push(record[key]);\n    }\n    return acc;\n  }, [] as any[]);\n};\n","module.exports = dll_c2e10d183b950a67d9e7;"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AA9CA;AA0DA;;;;;;;;;;;;AC1EA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACbrMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACZA;;;;;;;;;;;;;;;;;;;;;;;;ACCA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAGA;AAFA;AADA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqoisourceRoot":""}