{"version":3,"file":"static/development/pages/gfx-hal-initials/display-window.js","sources":["webpack:///./constants/gfx-hal-archive-list.ts","webpack:///./constants/tags.ts","webpack:///./node_modules/@babel/runtime/helpers/esm/extends.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///./node_modules/@mdx-js/react/dist/esm.js","webpack:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js","webpack:///delegated ./node_modules/react/index.js from dll-reference dll_c2e10d183b950a67d9e7","webpack:///./pages/gfx-hal-initials/display-window.md","webpack:///external \"dll_c2e10d183b950a67d9e7\""],"sourcesContent":["import { IArchiveItem } from '@constants/archive-list';\nimport { Tags } from '@constants/tags';\n\nexport const halArchiveRecord: Record<string, IArchiveItem> = {\n  'rust-cargo-basics': {\n    key: 'rust-cargo-basics',\n    link: '/gfx-hal-initials/rust-cargo-basics',\n    title: 'Basics on Rust & Cargo',\n    description: 'Basics on Rust & Cargo',\n    tags: [Tags.RUST],\n    createdAt: new Date('2020/04/26 22:00:00'),\n    updatedAt: new Date('2020/04/26 22:00:00'),\n    isPublished: true,\n  },\n  'display-window': {\n    key: 'display-window',\n    link: '/gfx-hal-initials/display-window',\n    title: 'Display Window',\n    description:\n      'Displaying Window using winit and bind it to gfx-hal surface instance',\n    tags: [Tags.RUST],\n    createdAt: new Date('2020/04/25 17:00:00'),\n    updatedAt: new Date('2020/05/09 23:50:00'),\n    isPublished: false,\n  },\n};\n","export enum Tags {\n  // type\n  TUTORIAL = 'tutorial',\n  PROJECT = 'project',\n  RESEARCH = 'research',\n\n  // lang\n  RUST = 'rust',\n  JS = 'javascript',\n\n  // framework\n  REACT = 'reactjs',\n}\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React, { forwardRef } from 'react';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar isFunction = function isFunction(obj) {\n  return typeof obj === 'function';\n};\n\nvar MDXContext = React.createContext({});\nvar withMDXComponents = function withMDXComponents(Component) {\n  return function (props) {\n    var allComponents = useMDXComponents(props.components);\n    return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n      components: allComponents\n    }));\n  };\n};\nvar useMDXComponents = function useMDXComponents(components) {\n  var contextComponents = React.useContext(MDXContext);\n  var allComponents = contextComponents;\n\n  if (components) {\n    allComponents = isFunction(components) ? components(contextComponents) : _objectSpread2({}, contextComponents, {}, components);\n  }\n\n  return allComponents;\n};\nvar MDXProvider = function MDXProvider(props) {\n  var allComponents = useMDXComponents(props.components);\n  return /*#__PURE__*/React.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, props.children);\n};\n\nvar TYPE_PROP_NAME = 'mdxType';\nvar DEFAULTS = {\n  inlineCode: 'code',\n  wrapper: function wrapper(_ref) {\n    var children = _ref.children;\n    return React.createElement(React.Fragment, {}, children);\n  }\n};\nvar MDXCreateElement = forwardRef(function (props, ref) {\n  var propComponents = props.components,\n      mdxType = props.mdxType,\n      originalType = props.originalType,\n      parentName = props.parentName,\n      etc = _objectWithoutProperties(props, [\"components\", \"mdxType\", \"originalType\", \"parentName\"]);\n\n  var components = useMDXComponents(propComponents);\n  var type = mdxType;\n  var Component = components[\"\".concat(parentName, \".\").concat(type)] || components[type] || DEFAULTS[type] || originalType;\n\n  if (propComponents) {\n    return React.createElement(Component, _objectSpread2({\n      ref: ref\n    }, etc, {\n      components: propComponents\n    }));\n  }\n\n  return React.createElement(Component, _objectSpread2({\n    ref: ref\n  }, etc));\n});\nMDXCreateElement.displayName = 'MDXCreateElement';\nfunction createElement (type, props) {\n  var args = arguments;\n  var mdxType = props && props.mdxType;\n\n  if (typeof type === 'string' || mdxType) {\n    var argsLength = args.length;\n    var createElementArgArray = new Array(argsLength);\n    createElementArgArray[0] = MDXCreateElement;\n    var newProps = {};\n\n    for (var key in props) {\n      if (hasOwnProperty.call(props, key)) {\n        newProps[key] = props[key];\n      }\n    }\n\n    newProps.originalType = type;\n    newProps[TYPE_PROP_NAME] = typeof type === 'string' ? type : mdxType;\n    createElementArgArray[1] = newProps;\n\n    for (var i = 2; i < argsLength; i++) {\n      createElementArgArray[i] = args[i];\n    }\n\n    return React.createElement.apply(null, createElementArgArray);\n  }\n\n  return React.createElement.apply(null, args);\n}\n\nexport { MDXContext, MDXProvider, createElement as mdx, useMDXComponents, withMDXComponents };\n","\n    (window.__NEXT_P=window.__NEXT_P||[]).push([\"/gfx-hal-initials/display-window\", function() {\n      var mod = require(\"/Users/subroto.biswas/Subroto/shub1427.github.io/pages/gfx-hal-initials/display-window.md\")\n      if(module.hot) {\n        module.hot.accept(\"/Users/subroto.biswas/Subroto/shub1427.github.io/pages/gfx-hal-initials/display-window.md\", function() {\n          if(!next.router.components[\"/gfx-hal-initials/display-window\"]) return\n          var updatedPage = require(\"/Users/subroto.biswas/Subroto/shub1427.github.io/pages/gfx-hal-initials/display-window.md\")\n          next.router.update(\"/gfx-hal-initials/display-window\", updatedPage)\n        })\n      }\n      return mod\n    }]);\n  ","module.exports = (__webpack_require__(/*! dll-reference dll_c2e10d183b950a67d9e7 */ \"dll-reference dll_c2e10d183b950a67d9e7\"))(\"./node_modules/react/index.js\");","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { halArchiveRecord } from '@constants/gfx-hal-archive-list';\nexport const record = halArchiveRecord['display-window'];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\nconst PolkaContainer = makeShortcode(\"PolkaContainer\");\nconst H1 = makeShortcode(\"H1\");\nconst Image = makeShortcode(\"Image\");\nconst layoutProps = {\n  record\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PolkaContainer mdxType=\"PolkaContainer\">\n      <H1 updatedAt={record.updatedAt} wordCount={520} mdxType=\"H1\">\n  {record.title}\n      </H1>\n      <p>{`Vulkan is a very low-level spec, which intends to keep as less overhead of code as it can.\n`}<inlineCode parentName=\"p\">{`gfx-hal`}</inlineCode>{` is a library which closely resembles the Vulkan specs (not entirely though), to provide\nthe developers with clean APIs, that are very similar to Vulkan specs. Also, `}<inlineCode parentName=\"p\">{`gfx-hal`}</inlineCode>{` provides\nmultiple graphics backends to make our code cross-platform compatible.`}</p>\n      <p><em parentName=\"p\">{`Code for this Note, can be found `}<a parentName=\"em\" {...{\n            \"href\": \"https://github.com/Shub1427/rustschool/blob/master/gui/gfx-rs/src/001-show_window/main.rs\"\n          }}>{`here`}</a>{`\nParts of the code would be referenced here, to make things clear.`}</em></p>\n      <h2>{`Vulkan Instance and Surface`}</h2>\n      <Image alt=\"Vulkan Flow Image\" src=\"https://user-images.githubusercontent.com/11786283/77244041-e4bf5680-6c36-11ea-96a1-2be7bd71ccbd.png\" placeholder=\"https://user-images.githubusercontent.com/11786283/80305144-bce48500-87d8-11ea-9832-4baaaf8ce41f.png\" mdxType=\"Image\" />\n      <p>{`This Tutorial is inspired from `}<a parentName=\"p\" {...{\n          \"href\": \"https://vulkan.lunarg.com/doc/sdk/1.2.131.2/linux/tutorial/html/index.html\"\n        }}>{`LunarG Vulkan Tutorial`}</a>{`,\nwhich is written in `}<inlineCode parentName=\"p\">{`C++`}</inlineCode>{`. I am trying to learn `}<inlineCode parentName=\"p\">{`Rust`}</inlineCode>{` and converting that tutorial into `}<inlineCode parentName=\"p\">{`Rust`}</inlineCode>{`,\nusing `}<inlineCode parentName=\"p\">{`gfx-hal`}</inlineCode>{` library, which is a wrapper over Vulkan Specs.`}</p>\n      <ul>\n        <li parentName=\"ul\">{`Application: is what we will build using `}<inlineCode parentName=\"li\">{`gfx-hal`}</inlineCode></li>\n        <li parentName=\"ul\">{`Loader: here refers to `}<inlineCode parentName=\"li\">{`gfx-hal`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`gfx-backend-vulkan`}</inlineCode>{` libraries. An isntance of\n`}<inlineCode parentName=\"li\">{`gfx-backend-vulkan`}</inlineCode>{` inititalizes a Loader. Creating an instance, intializes the loader.`}</li>\n        <li parentName=\"ul\">{`Layers: is something advanced, and am not sure when or if I will talk about it at-all.`}</li>\n      </ul>\n      <h2>{`Backend`}</h2>\n      <Image alt=\"GFX Hal Backends\" src=\"https://user-images.githubusercontent.com/11786283/77244047-03255200-6c37-11ea-885d-2d8b981bb8a8.png\" placeholder=\"https://user-images.githubusercontent.com/11786283/80305177-eb626000-87d8-11ea-9d40-0a632affdd2f.png\" mdxType=\"Image\" />\n      <p>{`Backends are specific to what GPU u have and what specs it supports.`}</p>\n      <p>{`Vulkan Backend is cross-compatible and has support in Linux/Windows, on AMD, Intel, NVidia etc.`}</p>\n      <blockquote>\n        <p parentName=\"blockquote\">{`Apple stays out, and I hate this thing about it, it doesn't support Vulkan, and has specific\ngraphics backend called `}<inlineCode parentName=\"p\">{`Metal`}</inlineCode>{`. Though `}<inlineCode parentName=\"p\">{`gfx-hal`}</inlineCode>{` has `}<inlineCode parentName=\"p\">{`metal`}</inlineCode>{` backend as well and since I am using\nMac (Yeah! Now don't come and bash me, can't use my Linux system a.t.m.), it would be a good\nway to know the support of `}<inlineCode parentName=\"p\">{`gfx-hal`}</inlineCode>{` for MacOS as well.`}</p>\n      </blockquote>\n      <br />\n      <br />\n      <p><strong parentName=\"p\"><em parentName=\"strong\">{`Moving forward`}</em></strong>{`, we now need to import various `}<inlineCode parentName=\"p\">{`backends`}</inlineCode>{` in our code to have cross-compatibility.\n`}<inlineCode parentName=\"p\">{`gfx-hal`}</inlineCode>{` needs an instance of a specific Backend which can be controlled\nusing Rust Feature Configurations.`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-rs\"\n        }}>{`#[cfg(feature = \"dx12\")]\nuse gfx_backend_dx12 as back;\n#[cfg(feature = \"metal\")]\nuse gfx_backend_metal as back;\n#[cfg(feature = \"vulkan\")]\nuse gfx_backend_vulkan as back;\n`}</code></pre>\n      <hr></hr>\n      <blockquote>\n        <p parentName=\"blockquote\">{`From here on, we will deep dive into Rust Programming. By the time we are done coding, we would be\nable to show a blank window on our Monitors.`}</p>\n      </blockquote>\n      <h2>{`Define Backend Struct:`}</h2>\n      <p>{`I am trying to keep my code, matching to how people write for real life projects. Thus, we won't be\njust writing down lines of code all inside `}<inlineCode parentName=\"p\">{`main`}</inlineCode>{` function, instead we will try to manage our code,\nas much as we can from the beginning (not overdoing to much).`}</p>\n      <p>{`So first thing we need is to manage Window Instance and Vulkan Backend Surface Objects (what these things\nare, is defined in next sections).`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-rs\"\n        }}>{`struct BackendState<B: Backend> {\n    // Vulkan backend instance object\n    instance: Option<B::Instance>,\n    // Vulkan backend surface object\n    surface: ManuallyDrop<B::Surface>,\n    // \\`winit\\` Window object.\n    window: window::Window,\n}\n\nimpl<B: Backend> Drop for BackendState<B> {\n    fn drop(&mut self) {\n        if let Some(instance) = &self.instance {\n            unsafe {\n                let surface = ManuallyDrop::into_inner(ptr::read(&self.surface));\n                instance.destroy_surface(surface);\n            }\n        }\n    }\n}\n`}</code></pre>\n      <p>{`Since `}<inlineCode parentName=\"p\">{`gfx-hal`}</inlineCode>{` does not manage every peace of Memory, we need to define the Vulkan `}<inlineCode parentName=\"p\">{`surface`}</inlineCode>{`\nas manually managed, using `}<inlineCode parentName=\"p\">{`ManuallyDrop`}</inlineCode>{` struc. Also, we need to drop `}<inlineCode parentName=\"p\">{`surface`}</inlineCode>{` once done with it,\ni.e. when `}<inlineCode parentName=\"p\">{`BackendState`}</inlineCode>{` struct gets dropped.`}</p>\n      <h2>{`Creating Window instance`}</h2>\n      <p>{`Now let's come back to our code. In real world, to draw anything we need a canvas, right. Similary, in\nGraphics to draw anything, we need a OS Window. Later to bind OS Window with GPU draw calls, we will be\nneeding a `}<inlineCode parentName=\"p\">{`surface`}</inlineCode>{` instance. Creation of Window in Rust is done using `}<inlineCode parentName=\"p\">{`winit`}</inlineCode>{` library, which again is\ncross-platform. It requires two major steps to display a blank window:`}</p>\n      <ul>\n        <li parentName=\"ul\">{`Window Dimensions`}</li>\n        <li parentName=\"ul\">{`Event Loop, that will help us to know when to redraw, w.r.t CPU and GPU capabilities, and listen to user events. `}<em parentName=\"li\">{`We will discuss this on some other thread, in detail.`}</em></li>\n      </ul>\n      <h2>{`Instance`}</h2>\n      <p>{`Vulkan instance is the starting point to work with Vulkan. A Vulkan instance actually takes the name\nof Application, and provides us with various APIs, specially to `}<inlineCode parentName=\"p\">{`enumerate_devices`}</inlineCode>{`.`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-rs\"\n        }}>{`// create(application_name, application_version);\nlet instance = back::Instance::create(\"Backend Instance\", 1)\n  .expect(\"Failed to create an instance!\");\n`}</code></pre>\n      <h2>{`Surface`}</h2>\n      <p>{`Vulkan requires a canvas or `}<inlineCode parentName=\"p\">{`surface`}</inlineCode>{` to draw things into and a `}<inlineCode parentName=\"p\">{`surface`}</inlineCode>{` can only exist inside\na OS App Window. Usually we will be using a 3rd-party module to create OS specific Window instances,\nlike `}<inlineCode parentName=\"p\">{`winit`}</inlineCode>{`, and thw window instance to create a `}<inlineCode parentName=\"p\">{`surface`}</inlineCode>{`.`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-rs\"\n        }}>{`// \\`wb\\` is \\`winit\\` window_builder.\nlet window = wb.build(event_loop).unwrap();\n\n// Create the Surface:\nlet surface = unsafe {\n  instance\n    .create_surface(&window)\n    .expect(\"Failed to create a surface!\")\n};\n`}</code></pre>\n    </PolkaContainer>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","module.exports = dll_c2e10d183b950a67d9e7;"],"mappings":";;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AATA;AAXA;;;;;;;;;;;;ACHA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACrMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACZA;;;;;;;;;;;;;;;;;;;;;;;;;ACCA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AAGA;AAFA;AADA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAscA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACrJA;;;;A","sourceRoot":""}