{"version":3,"file":"static/development/pages/gfx-hal-initials/rust-cargo-basics.js","sources":["webpack:///./constants/gfx-hal-archive-list.ts","webpack:///./constants/tags.ts","webpack:///./node_modules/@babel/runtime/helpers/esm/extends.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///./node_modules/@mdx-js/react/dist/esm.js","webpack:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js","webpack:///delegated ./node_modules/react/index.js from dll-reference dll_c2e10d183b950a67d9e7","webpack:///./pages/gfx-hal-initials/rust-cargo-basics.md","webpack:///external \"dll_c2e10d183b950a67d9e7\""],"sourcesContent":["import { IArchiveItem } from '@constants/archive-list';\nimport { Tags } from '@constants/tags';\n\nexport const halArchiveRecord: Record<string, IArchiveItem> = {\n  'rust-cargo-basics': {\n    key: 'rust-cargo-basics',\n    link: '/gfx-hal-initials/rust-cargo-basics',\n    title: 'Basics on Rust & Cargo',\n    description: 'Basics on Rust & Cargo',\n    tags: [Tags.RUST],\n    createdAt: new Date('2020/04/26 22:00:00'),\n    updatedAt: new Date('2020/04/26 22:00:00'),\n    isPublished: true,\n  },\n  'display-window': {\n    key: 'display-window',\n    link: '/gfx-hal-initials/display-window',\n    title: 'Display Window',\n    description:\n      'Displaying Window using winit and bind it to gfx-hal surface instance',\n    tags: [Tags.RUST],\n    createdAt: new Date('2020/04/25 17:00:00'),\n    updatedAt: new Date('2020/04/25 17:00:00'),\n    isPublished: false,\n  },\n};\n","export enum Tags {\n  // type\n  TUTORIAL = 'tutorial',\n\n  // lang\n  RUST = 'rust',\n}\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React, { forwardRef } from 'react';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar isFunction = function isFunction(obj) {\n  return typeof obj === 'function';\n};\n\nvar MDXContext = React.createContext({});\nvar withMDXComponents = function withMDXComponents(Component) {\n  return function (props) {\n    var allComponents = useMDXComponents(props.components);\n    return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n      components: allComponents\n    }));\n  };\n};\nvar useMDXComponents = function useMDXComponents(components) {\n  var contextComponents = React.useContext(MDXContext);\n  var allComponents = contextComponents;\n\n  if (components) {\n    allComponents = isFunction(components) ? components(contextComponents) : _objectSpread2({}, contextComponents, {}, components);\n  }\n\n  return allComponents;\n};\nvar MDXProvider = function MDXProvider(props) {\n  var allComponents = useMDXComponents(props.components);\n  return /*#__PURE__*/React.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, props.children);\n};\n\nvar TYPE_PROP_NAME = 'mdxType';\nvar DEFAULTS = {\n  inlineCode: 'code',\n  wrapper: function wrapper(_ref) {\n    var children = _ref.children;\n    return React.createElement(React.Fragment, {}, children);\n  }\n};\nvar MDXCreateElement = forwardRef(function (props, ref) {\n  var propComponents = props.components,\n      mdxType = props.mdxType,\n      originalType = props.originalType,\n      parentName = props.parentName,\n      etc = _objectWithoutProperties(props, [\"components\", \"mdxType\", \"originalType\", \"parentName\"]);\n\n  var components = useMDXComponents(propComponents);\n  var type = mdxType;\n  var Component = components[\"\".concat(parentName, \".\").concat(type)] || components[type] || DEFAULTS[type] || originalType;\n\n  if (propComponents) {\n    return React.createElement(Component, _objectSpread2({\n      ref: ref\n    }, etc, {\n      components: propComponents\n    }));\n  }\n\n  return React.createElement(Component, _objectSpread2({\n    ref: ref\n  }, etc));\n});\nMDXCreateElement.displayName = 'MDXCreateElement';\nfunction createElement (type, props) {\n  var args = arguments;\n  var mdxType = props && props.mdxType;\n\n  if (typeof type === 'string' || mdxType) {\n    var argsLength = args.length;\n    var createElementArgArray = new Array(argsLength);\n    createElementArgArray[0] = MDXCreateElement;\n    var newProps = {};\n\n    for (var key in props) {\n      if (hasOwnProperty.call(props, key)) {\n        newProps[key] = props[key];\n      }\n    }\n\n    newProps.originalType = type;\n    newProps[TYPE_PROP_NAME] = typeof type === 'string' ? type : mdxType;\n    createElementArgArray[1] = newProps;\n\n    for (var i = 2; i < argsLength; i++) {\n      createElementArgArray[i] = args[i];\n    }\n\n    return React.createElement.apply(null, createElementArgArray);\n  }\n\n  return React.createElement.apply(null, args);\n}\n\nexport { MDXContext, MDXProvider, createElement as mdx, useMDXComponents, withMDXComponents };\n","\n    (window.__NEXT_P=window.__NEXT_P||[]).push([\"/gfx-hal-initials/rust-cargo-basics\", function() {\n      var mod = require(\"/Users/subroto.biswas/Subroto/shub1427.github.io/pages/gfx-hal-initials/rust-cargo-basics.md\")\n      if(module.hot) {\n        module.hot.accept(\"/Users/subroto.biswas/Subroto/shub1427.github.io/pages/gfx-hal-initials/rust-cargo-basics.md\", function() {\n          if(!next.router.components[\"/gfx-hal-initials/rust-cargo-basics\"]) return\n          var updatedPage = require(\"/Users/subroto.biswas/Subroto/shub1427.github.io/pages/gfx-hal-initials/rust-cargo-basics.md\")\n          next.router.update(\"/gfx-hal-initials/rust-cargo-basics\", updatedPage)\n        })\n      }\n      return mod\n    }]);\n  ","module.exports = (__webpack_require__(/*! dll-reference dll_c2e10d183b950a67d9e7 */ \"dll-reference dll_c2e10d183b950a67d9e7\"))(\"./node_modules/react/index.js\");","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { halArchiveRecord } from '@constants/gfx-hal-archive-list';\nexport const record = halArchiveRecord['rust-cargo-basics'];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\nconst PolkaContainer = makeShortcode(\"PolkaContainer\");\nconst H1 = makeShortcode(\"H1\");\nconst Blockquote = makeShortcode(\"Blockquote\");\nconst Link = makeShortcode(\"Link\");\nconst layoutProps = {\n  record\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PolkaContainer mdxType=\"PolkaContainer\">\n      <H1 updatedAt={record.updatedAt} wordCount={686} mdxType=\"H1\">\n  {record.title}\n      </H1>\n      <h2>{`Rust`}</h2>\n      <Blockquote type=\"warn\" mdxType=\"Blockquote\">\nI am a very beginner in Rust and Low Level Programming, and parts of my research\nmight be falsy or wrong (as I forget things very soon, due to me trying new things most often).\nDon't take everything I write here, as the only source of truth. Please do verify my writings here\nfrom different sources. If found falsy, please do let me know by&nbsp;\n        <Link target=\"_blank\" href=\"https://github.com/Shub1427/shub1427.github.io/issues/new/choose\" mdxType=\"Link\">raising an issue here</Link>.\n      </Blockquote>\n      <br />\n      <p>{`Anyways, keeping aside the above talk, I am trying my best to improve these notes. If anything\nI find misleading, I will update in later revisions of this site. Mostly I will write only those\nthings, which I have worked with and faced some issues before.`}</p>\n      <br />\n      <p>{`Hope this helps you as well.`}</p>\n      <h3>{`Some basics on Lifetimes:`}</h3>\n      <p>{`Every reference in global context in `}<inlineCode parentName=\"p\">{`rust`}</inlineCode>{` has a lifetime\nof `}<inlineCode parentName=\"p\">{`static`}</inlineCode>{`, and by default we don't have to assign a specifc\nlifetime to variables or global function args etc. `}<inlineCode parentName=\"p\">{`static`}</inlineCode>{`\nlifetime defines that, that particular entity will live long enough,\ntill the main process dies. So, following:`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-rs\"\n        }}>{`const foobar: &str = \"Up here I have static lifetime\";\n\nfn foo(param1: &str) {\n  println!(\"I am static: {}\", param1);\n}\n\nfn main() {\n  let bar = &foobar;\n  println!(\"I am static as well: {}\", bar);\n}\n`}</code></pre>\n      <p>{`would result into something like this:`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-rs\"\n        }}>{`const foobar: &'static str = \"Up here I have static lifetime\";\n\nfn foo(param1: &'static str) {\n  println!(\"I am static: {}\", param1);\n}\n\nfn main() {\n  let bar = &'static foobar;\n  println!(\"I am static as well: {}\", bar);\n}\n`}</code></pre>\n      <h3>{`Passing Slices as arguments:`}</h3>\n      <p>{`If details of the type is not essential, passing array like variables as a reference\nof generic slice is beneficial. For eg.`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-rs\"\n        }}>{`use std::fmt::Debug;\n\nfn check_array<T>(data: &[T])\nwhere\n  T: Debug,\n{\n  let mut i = 0;\n  for item in data.iter() {\n    println!(\"Element[{}]: {:?}\", i, item);\n    i += 1;\n  }\n}\nfn check_str(data: &str) {\n  let mut i = 0;\n  for item in data.chars() {\n    println!(\"Element[{}]: {:?}\", i, item);\n    i += 1;\n  }\n}\n\nfn main() {\n    let mut v = vec![1, 2, 3, 4];\n    let mut s = String::from(\"Test FOO\");\n    check_array(&v);\n    check_str(&s);\n}\n`}</code></pre>\n      <p>{`where, `}<inlineCode parentName=\"p\">{`&str`}</inlineCode>{` is a string slice, which means I could've passed part of the string as well,\nistead of the whole `}<inlineCode parentName=\"p\">{`String`}</inlineCode>{` data, as `}<inlineCode parentName=\"p\">{`check_str(&s[2..6])`}</inlineCode>{`.`}</p>\n      <h3>{`How to drop struct properties manually.`}</h3>\n      <p>{`By default, managing memory is not required in Rust. But, there are cases, when this becomes\ncrucial, and Rust allows you to mess with memory when needed (still being safe).`}</p>\n      <p>{`For cases where we need to drop properties manually, there are many ways in Rust to do so.\nTwo of which are:`}</p>\n      <ul>\n        <li parentName=\"ul\">{`To use `}<inlineCode parentName=\"li\">{`Option`}</inlineCode></li>\n        <li parentName=\"ul\">{`To use `}<inlineCode parentName=\"li\">{`ManuallyDrop`}</inlineCode></li>\n      </ul>\n      <p><strong parentName=\"p\">{`Example of using `}<inlineCode parentName=\"strong\">{`Option`}</inlineCode>{` to drop properties.`}</strong></p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-rs\"\n        }}>{`struct Foo {\n  baz: String;\n  bar: Option<String>;\n}\n\nimpl Drop for Foo {\n    fn drop(&mut self) {\n        self.bar = None;\n    }\n}\n`}</code></pre>\n      <p>{`Above code drops `}<inlineCode parentName=\"p\">{`bar`}</inlineCode>{` before `}<inlineCode parentName=\"p\">{`baz`}</inlineCode>{`, which is different than the default behaviour of Rust,\nwhere Struct properties are dropped in the order they were defined, i.e. for above code `}<inlineCode parentName=\"p\">{`baz`}</inlineCode>{`\nshould have been dropped before `}<inlineCode parentName=\"p\">{`bar`}</inlineCode>{`.`}</p>\n      <br />\n      <p><strong parentName=\"p\">{`Example of using `}<inlineCode parentName=\"strong\">{`ManuallyDrop`}</inlineCode>{` to drop properties.`}</strong></p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-rs\"\n        }}>{`use std::mem::ManuallyDrop;\n\nstruct Foo {\n  baz: String;\n  bar: ManuallyDrop<String>;\n}\n\nimpl Drop for Foo {\n    fn drop(&mut self) {\n        ManuallyDrop::drop(&mut self.bar);\n    }\n}\n`}</code></pre>\n      <p>{`Above code does the same thing as was done using `}<inlineCode parentName=\"p\">{`Option`}</inlineCode>{` before.`}</p>\n      <hr></hr>\n      <h2>{`Cargo`}</h2>\n      <p>{`Basics of `}<inlineCode parentName=\"p\">{`cargo`}</inlineCode>{` is very simple, and thus I like Rust the most, compared to `}<inlineCode parentName=\"p\">{`C`}</inlineCode>{`.\nI won't be writing on how to `}<inlineCode parentName=\"p\">{`run`}</inlineCode>{` or create a `}<inlineCode parentName=\"p\">{`new`}</inlineCode>{` project, but would like to\ntalk on some cargo features, which are not known if a beginner skip the Cargo Chapter\nin Rust Book.`}</p>\n      <h3>{`Cargo Features`}</h3>\n      <p><inlineCode parentName=\"p\">{`features`}</inlineCode>{` is a wornderful option provided by Rust Cargo, which makes compiling your code\nconditionally. For Eg, If we want specific features to be enabled only for Linux, we\ncan do so easily using `}<inlineCode parentName=\"p\">{`features`}</inlineCode>{` option.`}</p>\n      <br />\n      <p>{`For eg, In our journey of learning `}<inlineCode parentName=\"p\">{`gfx-hal`}</inlineCode>{`, we would be using multiple Graphics Backends,\nwhich should be compiled respective to which OS Platform we are working on. This is made possible\nby defining `}<inlineCode parentName=\"p\">{`features`}</inlineCode>{` in `}<inlineCode parentName=\"p\">{`Cargo.toml`}</inlineCode>{` file, and later when running the Project in dev mode\n`}<inlineCode parentName=\"p\">{`cargo run`}</inlineCode>{`, we would pass the feature we need to be used for the platform.`}</p>\n      <br />\n      <p><strong parentName=\"p\">{`Example `}<inlineCode parentName=\"strong\">{`Cargo.toml`}</inlineCode></strong></p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-toml\"\n        }}>{`[features]\ndefault = []\nmetal = [\"gfx-backend-metal\"]\ndx12 = [\"gfx-backend-dx12\"]\nvulkan = [\"gfx-backend-vulkan\"]\n\n[dependencies.gfx-backend-vulkan]\nversion = \"0.5.0\"\nfeatures = [\"x11\"]\noptional = true\n\n[target.'cfg(target_os = \"macos\")'.dependencies.gfx-backend-metal]\nversion = \"0.5.0\"\noptional = true\n\n[target.'cfg(windows)'.dependencies.gfx-backend-dx12]\nversion = \"0.5.0\"\noptional = true\n`}</code></pre>\n      <p>{`Once above is done, we can now use feature-toggles in our code, to remove part of code\nthat does not satisfy the `}<inlineCode parentName=\"p\">{`feature`}</inlineCode>{`. For Eg,`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-rs\"\n        }}>{`#[cfg(feature = \"dx12\")]\nuse gfx_backend_dx12 as back;\n#[cfg(feature = \"metal\")]\nuse gfx_backend_metal as back;\n#[cfg(feature = \"vulkan\")]\nuse gfx_backend_vulkan as back;\n`}</code></pre>\n      <p>{`And not the final part to run the code with features enabled.`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-sh\"\n        }}>{`cargo run --features metal\n`}</code></pre>\n      <p>{`Above code runs our code, enabling the `}<inlineCode parentName=\"p\">{`metal`}</inlineCode>{` feature-toggle, which compiles our\ncode for MacOS Platform. We can also pass more features in one go, if they are supported\nduring compilation, with comma separated values.`}</p>\n    </PolkaContainer>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","module.exports = dll_c2e10d183b950a67d9e7;"],"mappings":"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","sourceRoot":""}